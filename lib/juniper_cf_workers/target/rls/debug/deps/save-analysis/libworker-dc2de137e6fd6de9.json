{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6","program":"/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","worker","--edition=2018","/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=dc2de137e6fd6de9","-C","extra-filename=-dc2de137e6fd6de9","--out-dir","/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","-L","dependency=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","--extern","async_trait=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libasync_trait-c6663e5201cca923.so","--extern","chrono=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libchrono-9fb3c0fc9ddd18d1.rmeta","--extern","chrono_tz=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libchrono_tz-cbdb672b6e382485.rmeta","--extern","futures=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libfutures-18af1e841117bbf4.rmeta","--extern","http=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libhttp-2fb7c8626bfc32bf.rmeta","--extern","js_sys=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libjs_sys-21b2384d2889714d.rmeta","--extern","matchit=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libmatchit-41bf43d429148813.rmeta","--extern","serde=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libserde-25d844114842cc56.rmeta","--extern","serde_json=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libserde_json-465e9cc1f0c47f78.rmeta","--extern","url=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/liburl-4523e9aed7a6e8c1.rmeta","--extern","wasm_bindgen=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libwasm_bindgen-78ea35a7e60e04e7.rmeta","--extern","wasm_bindgen_futures=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libwasm_bindgen_futures-d53f4f16357c682b.rmeta","--extern","worker_kv=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libworker_kv-dbf9fee6a2662840.rmeta","--extern","worker_macros=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libworker_macros-56b8d0f1bdd6cfbc.so","--extern","worker_sys=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libworker_sys-8102e257213cae69.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libworker-dc2de137e6fd6de9.rmeta"},"prelude":{"crate_id":{"name":"worker","disambiguator":[16698469382591386136,0]},"crate_root":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src","external_crates":[{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":19,"id":{"name":"worker_sys","disambiguator":[14793963237416705123,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","num":20,"id":{"name":"wasm_bindgen","disambiguator":[17157481541317899434,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":21,"id":{"name":"wasm_bindgen_macro","disambiguator":[2068497688199559063,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":22,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","num":23,"id":{"name":"serde","disambiguator":[15044552807878504357,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","num":24,"id":{"name":"serde_derive","disambiguator":[9091749140381624389,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","num":25,"id":{"name":"serde_json","disambiguator":[16530989952377641469,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":26,"id":{"name":"indexmap","disambiguator":[11946919589315910912,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":27,"id":{"name":"hashbrown","disambiguator":[14574037096241616493,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":28,"id":{"name":"itoa","disambiguator":[1263167040257272176,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":29,"id":{"name":"ryu","disambiguator":[1063338513761980397,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","num":30,"id":{"name":"js_sys","disambiguator":[4324387265739134463,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":31,"id":{"name":"web_sys","disambiguator":[15892341223859545366,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","num":32,"id":{"name":"async_trait","disambiguator":[12331014698071393308,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","num":33,"id":{"name":"wasm_bindgen_futures","disambiguator":[7145102594773558507,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","num":34,"id":{"name":"worker_kv","disambiguator":[3764485695285160616,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","num":35,"id":{"name":"http","disambiguator":[12801453764569921035,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","num":36,"id":{"name":"fnv","disambiguator":[1034934705931276423,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","num":37,"id":{"name":"bytes","disambiguator":[4391728918271824596,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":38,"id":{"name":"url","disambiguator":[13973205569234405850,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":39,"id":{"name":"matches","disambiguator":[1320243471544008448,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":40,"id":{"name":"form_urlencoded","disambiguator":[14756630579861573883,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":41,"id":{"name":"percent_encoding","disambiguator":[10788573655109857407,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":42,"id":{"name":"idna","disambiguator":[14462775927040156581,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":43,"id":{"name":"unicode_bidi","disambiguator":[3879225568574823278,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":44,"id":{"name":"unicode_normalization","disambiguator":[7686984899695165001,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":45,"id":{"name":"tinyvec","disambiguator":[11173113689500746751,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","num":46,"id":{"name":"tinyvec_macros","disambiguator":[7252632776325599366,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":47,"id":{"name":"futures","disambiguator":[2655071816687476317,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":48,"id":{"name":"futures_core","disambiguator":[836900170668578141,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":49,"id":{"name":"futures_util","disambiguator":[10528489083142936782,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":50,"id":{"name":"pin_utils","disambiguator":[2380289198110952421,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":51,"id":{"name":"futures_macro","disambiguator":[3310905799135672943,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":52,"id":{"name":"futures_task","disambiguator":[22578915694261954,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":53,"id":{"name":"futures_sink","disambiguator":[18108613614654560089,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":54,"id":{"name":"pin_project_lite","disambiguator":[13850998262773622920,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":55,"id":{"name":"futures_channel","disambiguator":[4662495715904756966,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":56,"id":{"name":"slab","disambiguator":[15250121243094389956,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":57,"id":{"name":"futures_io","disambiguator":[17178648694822136275,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":58,"id":{"name":"memchr","disambiguator":[12044271279222310692,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":59,"id":{"name":"futures_executor","disambiguator":[13515928642106020483,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","num":60,"id":{"name":"matchit","disambiguator":[9412627760847422852,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","num":61,"id":{"name":"worker_macros","disambiguator":[4779226631894883673,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":62,"id":{"name":"chrono","disambiguator":[12534628545019425638,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":63,"id":{"name":"time","disambiguator":[15192896353979217682,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":64,"id":{"name":"libc","disambiguator":[14621565643060686160,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":65,"id":{"name":"num_integer","disambiguator":[9850306937509709045,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":66,"id":{"name":"num_traits","disambiguator":[16438191234303804155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","num":67,"id":{"name":"chrono_tz","disambiguator":[17400611172879190588,0]}}],"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":0,"byte_end":949,"line_start":1,"line_end":47,"column_start":1,"column_end":20}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":288,"byte_end":292,"line_start":20,"line_end":20,"column_start":23,"column_end":27},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":294,"byte_end":302,"line_start":20,"line_end":20,"column_start":29,"column_end":37},"alias_span":null,"name":"DateInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":325,"byte_end":328,"line_start":21,"line_end":21,"column_start":21,"column_end":24},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":352,"byte_end":357,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":384,"byte_end":385,"line_start":23,"line_end":23,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"FormData","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":410,"byte_end":415,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":441,"byte_end":448,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"alias_span":null,"name":"Headers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":441,"byte_end":448,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"alias_span":null,"name":"Headers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":471,"byte_end":477,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":503,"byte_end":510,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":541,"byte_end":542,"line_start":28,"line_end":28,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"RequestInit","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":569,"byte_end":577,"line_start":29,"line_end":29,"column_start":26,"column_end":34},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":603,"byte_end":615,"line_start":30,"line_end":30,"column_start":25,"column_end":37},"alias_span":null,"name":"RouteContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":617,"byte_end":628,"line_start":30,"line_end":30,"column_start":39,"column_end":50},"alias_span":null,"name":"RouteParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":630,"byte_end":636,"line_start":30,"line_end":30,"column_start":52,"column_end":58},"alias_span":null,"name":"Router","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":651,"byte_end":653,"line_start":31,"line_end":31,"column_start":13,"column_end":15},"alias_span":null,"name":"Cf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":66},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":676,"byte_end":687,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"alias_span":null,"name":"console_log","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":714,"byte_end":715,"line_start":35,"line_end":35,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":61,"index":82},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":741,"byte_end":755,"line_start":36,"line_end":36,"column_start":25,"column_end":39},"alias_span":null,"name":"durable_object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":61,"index":83},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":757,"byte_end":762,"line_start":36,"line_end":36,"column_start":41,"column_end":46},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":32,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":789,"byte_end":800,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":825,"byte_end":831,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"alias_span":null,"name":"js_sys","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":856,"byte_end":868,"line_start":43,"line_end":43,"column_start":9,"column_end":21},"alias_span":null,"name":"wasm_bindgen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":893,"byte_end":913,"line_start":45,"line_end":45,"column_start":9,"column_end":29},"alias_span":null,"name":"wasm_bindgen_futures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":938,"byte_end":948,"line_start":47,"line_end":47,"column_start":9,"column_end":19},"alias_span":null,"name":"worker_sys","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":0,"byte_end":949,"line_start":1,"line_end":47,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":47},{"krate":0,"index":62},{"krate":0,"index":291},{"krate":0,"index":345},{"krate":0,"index":374},{"krate":0,"index":442},{"krate":0,"index":483},{"krate":0,"index":577},{"krate":0,"index":588},{"krate":0,"index":686},{"krate":0,"index":753},{"krate":0,"index":819},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1344,"byte_end":1346,"line_start":8,"line_end":8,"column_start":12,"column_end":14},"name":"Cf","qualname":"::cf::Cf","value":"Cf {  }","parent":null,"children":[{"krate":0,"index":1045}],"decl_id":null,"docs":" In addition to the methods on the `Request` struct, the `Cf` struct on an inbound Request contains information about the request provided by Cloudflare’s edge.","sig":null,"attributes":[{"value":"/ In addition to the methods on the `Request` struct, the `Cf` struct on an inbound Request contains information about the request provided by Cloudflare’s edge.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1040,"byte_end":1205,"line_start":4,"line_end":4,"column_start":1,"column_end":164}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1206,"byte_end":1209,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [Details](https://developers.cloudflare.com/workers/runtime-apis/request#incomingrequestcfproperties)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1210,"byte_end":1315,"line_start":6,"line_end":6,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1513,"byte_end":1517,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"colo","qualname":"<Cf>::colo","value":"pub fn colo(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The three-letter airport code (e.g. `ATX`, `LUX`) representing\n the colocation which processed the request\n","sig":null,"attributes":[{"value":"/ The three-letter airport code (e.g. `ATX`, `LUX`) representing","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1384,"byte_end":1450,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ the colocation which processed the request","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1455,"byte_end":1501,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1654,"byte_end":1657,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"asn","qualname":"<Cf>::asn","value":"pub fn asn(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The Autonomous System Number (ASN) of the request, e.g. `395747`\n","sig":null,"attributes":[{"value":"/ The Autonomous System Number (ASN) of the request, e.g. `395747`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1574,"byte_end":1642,"line_start":19,"line_end":19,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1869,"byte_end":1876,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"country","qualname":"<Cf>::country","value":"pub fn country(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" The two-letter country code of origin for the request.\n This is the same value as that provided in the CF-IPCountry header, e.g.  `\"US\"`\n","sig":null,"attributes":[{"value":"/ The two-letter country code of origin for the request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1710,"byte_end":1768,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ This is the same value as that provided in the CF-IPCountry header, e.g.  `\"US\"`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1773,"byte_end":1857,"line_start":25,"line_end":25,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":2013,"byte_end":2026,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"http_protocol","qualname":"<Cf>::http_protocol","value":"pub fn http_protocol(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The HTTP Protocol (e.g. \"HTTP/2\") used by the request\n","sig":null,"attributes":[{"value":"/ The HTTP Protocol (e.g. \"HTTP/2\") used by the request","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1944,"byte_end":2001,"line_start":30,"line_end":30,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":2342,"byte_end":2358,"line_start":38,"line_end":38,"column_start":12,"column_end":28},"name":"request_priority","qualname":"<Cf>::request_priority","value":"pub fn request_priority(&Self) -> Option<RequestPriority>","parent":null,"children":[],"decl_id":null,"docs":" The browser-requested prioritization information in the request object,","sig":null,"attributes":[{"value":"/ The browser-requested prioritization information in the request object,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":2092,"byte_end":2167,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":2172,"byte_end":2175,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ See [this blog post](https://blog.cloudflare.com/better-http-2-prioritization-for-a-faster-web/#customizingprioritizationwithworkers) for details.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":2180,"byte_end":2330,"line_start":37,"line_end":37,"column_start":5,"column_end":155}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":3719,"byte_end":3729,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"tls_cipher","qualname":"<Cf>::tls_cipher","value":"pub fn tls_cipher(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The cipher for the connection to Cloudflare, e.g. \"AEAD-AES128-GCM-SHA256\".\n","sig":null,"attributes":[{"value":"/ The cipher for the connection to Cloudflare, e.g. \"AEAD-AES128-GCM-SHA256\".","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":3628,"byte_end":3707,"line_start":76,"line_end":76,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":3914,"byte_end":3929,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"tls_client_auth","qualname":"<Cf>::tls_client_auth","value":"pub fn tls_client_auth(&Self) -> Option<TlsClientAuth>","parent":null,"children":[],"decl_id":null,"docs":" Information about the client's authorization.\n Only set when using Cloudflare Access or API Shield.\n","sig":null,"attributes":[{"value":"/ Information about the client's authorization.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":3792,"byte_end":3841,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/ Only set when using Cloudflare Access or API Shield.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":3846,"byte_end":3902,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4106,"byte_end":4117,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"tls_version","qualname":"<Cf>::tls_version","value":"pub fn tls_version(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The TLS version of the connection to Cloudflare, e.g. TLSv1.3.\n","sig":null,"attributes":[{"value":"/ The TLS version of the connection to Cloudflare, e.g. TLSv1.3.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4028,"byte_end":4094,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4310,"byte_end":4314,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"city","qualname":"<Cf>::city","value":"pub fn city(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" City of the incoming request, e.g. \"Austin\".\n","sig":null,"attributes":[{"value":"/ City of the incoming request, e.g. \"Austin\".","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4250,"byte_end":4298,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4439,"byte_end":4448,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"continent","qualname":"<Cf>::continent","value":"pub fn continent(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Continent of the incoming request, e.g. \"NA\"\n","sig":null,"attributes":[{"value":"/ Continent of the incoming request, e.g. \"NA\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4379,"byte_end":4427,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4608,"byte_end":4619,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"coordinates","qualname":"<Cf>::coordinates","value":"pub fn coordinates(&Self) -> Option<(f32, f32)>","parent":null,"children":[],"decl_id":null,"docs":" Latitude and longitude of the incoming request, e.g. (30.27130, -97.74260)\n","sig":null,"attributes":[{"value":"/ Latitude and longitude of the incoming request, e.g. (30.27130, -97.74260)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":4518,"byte_end":4596,"line_start":103,"line_end":103,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5136,"byte_end":5147,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"postal_code","qualname":"<Cf>::postal_code","value":"pub fn postal_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Postal code of the incoming request, e.g. \"78701\"\n","sig":null,"attributes":[{"value":"/ Postal code of the incoming request, e.g. \"78701\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5071,"byte_end":5124,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5287,"byte_end":5297,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"metro_code","qualname":"<Cf>::metro_code","value":"pub fn metro_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Metro code (DMA) of the incoming request, e.g. \"635\"\n","sig":null,"attributes":[{"value":"/ Metro code (DMA) of the incoming request, e.g. \"635\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5219,"byte_end":5275,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5554,"byte_end":5560,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"region","qualname":"<Cf>::region","value":"pub fn region(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) name for the first level region associated with the IP address of the incoming request, e.g. \"Texas\".\n","sig":null,"attributes":[{"value":"/ If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) name for the first level region associated with the IP address of the incoming request, e.g. \"Texas\".","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5368,"byte_end":5542,"line_start":128,"line_end":128,"column_start":5,"column_end":179}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5810,"byte_end":5821,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"region_code","qualname":"<Cf>::region_code","value":"pub fn region_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the first level region associated with the IP address of the incoming request, e.g. \"TX\".\n","sig":null,"attributes":[{"value":"/ If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the first level region associated with the IP address of the incoming request, e.g. \"TX\".","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5627,"byte_end":5798,"line_start":133,"line_end":133,"column_start":5,"column_end":176}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5941,"byte_end":5949,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Cf>::timezone","value":"pub fn timezone(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Timezone of the incoming request\n","sig":null,"attributes":[{"value":"/ Timezone of the incoming request","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":5893,"byte_end":5929,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1048},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6169,"byte_end":6184,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"RequestPriority","qualname":"::cf::RequestPriority","value":"RequestPriority { weight, exclusive, group, group_weight }","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" Browser-requested prioritization information.\n","sig":null,"attributes":[{"value":"/ Browser-requested prioritization information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6078,"byte_end":6127,"line_start":145,"line_end":145,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1049},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6262,"byte_end":6268,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"weight","qualname":"::cf::RequestPriority::weight","value":"usize","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" The browser-requested weight for the HTTP/2 prioritization\n","sig":null,"attributes":[{"value":"/ The browser-requested weight for the HTTP/2 prioritization","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6191,"byte_end":6253,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1050},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6392,"byte_end":6401,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"exclusive","qualname":"::cf::RequestPriority::exclusive","value":"bool","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" The browser-requested HTTP/2 exclusive flag (true for Chromium-based browsers, false for others).\n","sig":null,"attributes":[{"value":"/ The browser-requested HTTP/2 exclusive flag (true for Chromium-based browsers, false for others).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6282,"byte_end":6383,"line_start":151,"line_end":151,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1051},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6493,"byte_end":6498,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"group","qualname":"::cf::RequestPriority::group","value":"usize","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" HTTP/2 stream ID for the request group (only non-zero for Firefox)\n","sig":null,"attributes":[{"value":"/ HTTP/2 stream ID for the request group (only non-zero for Firefox)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6414,"byte_end":6484,"line_start":154,"line_end":154,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1052},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6588,"byte_end":6600,"line_start":158,"line_end":158,"column_start":9,"column_end":21},"name":"group_weight","qualname":"::cf::RequestPriority::group_weight","value":"usize","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" HTTP/2 weight for the request group (only non-zero for Firefox)\n","sig":null,"attributes":[{"value":"/ HTTP/2 weight for the request group (only non-zero for Firefox)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6512,"byte_end":6579,"line_start":157,"line_end":157,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6790,"byte_end":6803,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"TlsClientAuth","qualname":"::cf::TlsClientAuth","value":"TlsClientAuth {  }","parent":null,"children":[{"krate":0,"index":1059}],"decl_id":null,"docs":" Only set when using Cloudflare Access or API Shield\n","sig":null,"attributes":[{"value":"/ Only set when using Cloudflare Access or API Shield","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6706,"byte_end":6761,"line_start":167,"line_end":167,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6870,"byte_end":6891,"line_start":174,"line_end":174,"column_start":12,"column_end":33},"name":"cert_issuer_dn_legacy","qualname":"<TlsClientAuth>::cert_issuer_dn_legacy","value":"pub fn cert_issuer_dn_legacy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6972,"byte_end":6986,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"cert_issuer_dn","qualname":"<TlsClientAuth>::cert_issuer_dn","value":"pub fn cert_issuer_dn(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7060,"byte_end":7082,"line_start":182,"line_end":182,"column_start":12,"column_end":34},"name":"cert_issuer_dn_rfc2253","qualname":"<TlsClientAuth>::cert_issuer_dn_rfc2253","value":"pub fn cert_issuer_dn_rfc2253(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7164,"byte_end":7186,"line_start":186,"line_end":186,"column_start":12,"column_end":34},"name":"cert_subject_dn_legacy","qualname":"<TlsClientAuth>::cert_subject_dn_legacy","value":"pub fn cert_subject_dn_legacy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7268,"byte_end":7281,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"cert_verified","qualname":"<TlsClientAuth>::cert_verified","value":"pub fn cert_verified(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7354,"byte_end":7368,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"cert_not_after","qualname":"<TlsClientAuth>::cert_not_after","value":"pub fn cert_not_after(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7442,"byte_end":7457,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"cert_subject_dn","qualname":"<TlsClientAuth>::cert_subject_dn","value":"pub fn cert_subject_dn(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7532,"byte_end":7553,"line_start":202,"line_end":202,"column_start":12,"column_end":33},"name":"cert_fingerprint_sha1","qualname":"<TlsClientAuth>::cert_fingerprint_sha1","value":"pub fn cert_fingerprint_sha1(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7634,"byte_end":7649,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"cert_not_before","qualname":"<TlsClientAuth>::cert_not_before","value":"pub fn cert_not_before(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7724,"byte_end":7735,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"cert_serial","qualname":"<TlsClientAuth>::cert_serial","value":"pub fn cert_serial(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7806,"byte_end":7820,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"cert_presented","qualname":"<TlsClientAuth>::cert_presented","value":"pub fn cert_presented(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":7894,"byte_end":7916,"line_start":218,"line_end":218,"column_start":12,"column_end":34},"name":"cert_subject_dn_rfc225","qualname":"<TlsClientAuth>::cert_subject_dn_rfc225","value":"pub fn cert_subject_dn_rfc225(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8536,"byte_end":8540,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1063}],"decl_id":null,"docs":" The equivalent to a JavaScript `Date` Object.\n ```no_run\n let now = Date::now();\n let millis = now.as_millis();\n // or use a specific point in time:\n let t1: Date = DateInit::Millis(1630611511000).into();\n let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();\n ```\n","sig":null,"attributes":[{"value":"/ The equivalent to a JavaScript `Date` Object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8172,"byte_end":8221,"line_start":4,"line_end":4,"column_start":1,"column_end":50}},{"value":"/ ```no_run","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8222,"byte_end":8235,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/ let now = Date::now();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8236,"byte_end":8262,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/ let millis = now.as_millis();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8263,"byte_end":8296,"line_start":7,"line_end":7,"column_start":1,"column_end":34}},{"value":"/ // or use a specific point in time:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8297,"byte_end":8336,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"/ let t1: Date = DateInit::Millis(1630611511000).into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8337,"byte_end":8395,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/ let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8396,"byte_end":8484,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8485,"byte_end":8492,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1074},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8829,"byte_end":8835,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Millis","qualname":"::date::DateInit::Millis","value":"DateInit::Millis(u64)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8846,"byte_end":8852,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"String","qualname":"::date::DateInit::String","value":"DateInit::String(String)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1073},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8814,"byte_end":8822,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"DateInit","qualname":"::date::DateInit","value":"pub enum DateInit { Millis(u64), String(String), }","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1077}],"decl_id":null,"docs":" Initialize a `Date` by constructing this enum.\n ```no_run\n let t1: Date = DateInit::Millis(1630611511000).into();\n let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();\n ```\n","sig":null,"attributes":[{"value":"/ Initialize a `Date` by constructing this enum.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8567,"byte_end":8617,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/ ```no_run","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8618,"byte_end":8631,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ let t1: Date = DateInit::Millis(1630611511000).into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8632,"byte_end":8690,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8691,"byte_end":8779,"line_start":20,"line_end":20,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8780,"byte_end":8787,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9079,"byte_end":9082,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"pub fn new(DateInit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Date, which requires being initialized from a known DateInit value.\n","sig":null,"attributes":[{"value":"/ Create a new Date, which requires being initialized from a known DateInit value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8983,"byte_end":9067,"line_start":35,"line_end":35,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9410,"byte_end":9413,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the current time, represented by a Date.\n","sig":null,"attributes":[{"value":"/ Get the current time, represented by a Date.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9350,"byte_end":9398,"line_start":47,"line_end":47,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9584,"byte_end":9593,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"as_millis","qualname":"<Date>::as_millis","value":"pub fn as_millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Convert a Date into its number of milliseconds since the Unix epoch.\n","sig":null,"attributes":[{"value":"/ Convert a Date into its number of milliseconds since the Unix epoch.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9500,"byte_end":9572,"line_start":54,"line_end":54,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"durable","qualname":"::durable","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":273},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":1096}],"decl_id":null,"docs":" Durable Objects provide low-latency coordination and consistent storage for the Workers platform.\n A given namespace can support essentially unlimited Durable Objects, with each Object having\n access to a transactional, key-value storage API.","sig":null,"attributes":[{"value":"/ Durable Objects provide low-latency coordination and consistent storage for the Workers platform.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":9768,"byte_end":9869,"line_start":1,"line_end":1,"column_start":1,"column_end":102}},{"value":"/ A given namespace can support essentially unlimited Durable Objects, with each Object having","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":9870,"byte_end":9966,"line_start":2,"line_end":2,"column_start":1,"column_end":97}},{"value":"/ access to a transactional, key-value storage API.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":9967,"byte_end":10020,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10021,"byte_end":10024,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Durable Objects consist of two components: a class that defines a template for creating Durable","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10025,"byte_end":10124,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ Objects and a Workers script that instantiates and uses those Durable Objects.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10125,"byte_end":10207,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10208,"byte_end":10211,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The class and the Workers script are linked together with a binding.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10212,"byte_end":10284,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10285,"byte_end":10288,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [Learn more](https://developers.cloudflare.com/workers/learning/using-durable-objects) about","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10289,"byte_end":10385,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ using Durable Objects.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":10386,"byte_end":10412,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11117,"byte_end":11121,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Stub","qualname":"::durable::Stub","value":"Stub {  }","parent":null,"children":[{"krate":0,"index":135}],"decl_id":null,"docs":" A Durable Object stub is a client object used to send requests to a remote Durable Object.\n","sig":null,"attributes":[{"value":"/ A Durable Object stub is a client object used to send requests to a remote Durable Object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11011,"byte_end":11105,"line_start":38,"line_end":38,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11260,"byte_end":11278,"line_start":45,"line_end":45,"column_start":18,"column_end":36},"name":"fetch_with_request","qualname":"<Stub>::fetch_with_request","value":"pub async fn fetch_with_request<'_>(&'_ Self, Request) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send an internal Request to the Durable Object to which the stub points.\n","sig":null,"attributes":[{"value":"/ Send an internal Request to the Durable Object to which the stub points.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11166,"byte_end":11242,"line_start":44,"line_end":44,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11619,"byte_end":11633,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"name":"fetch_with_str","qualname":"<Stub>::fetch_with_str","value":"pub async fn fetch_with_str<'_, '_>(&'_ Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Construct a Request from a URL to the Durable Object to which the stub points.\n","sig":null,"attributes":[{"value":"/ Construct a Request from a URL to the Durable Object to which the stub points.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11519,"byte_end":11601,"line_start":51,"line_end":51,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12119,"byte_end":12134,"line_start":62,"line_end":62,"column_start":12,"column_end":27},"name":"ObjectNamespace","qualname":"::durable::ObjectNamespace","value":"ObjectNamespace {  }","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" Use an ObjectNamespace to get access to Stubs for communication with a Durable Object instance.\n A given namespace can support essentially unlimited Durable Objects, with each Object having\n access to a transactional, key-value storage API.\n","sig":null,"attributes":[{"value":"/ Use an ObjectNamespace to get access to Stubs for communication with a Durable Object instance.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11857,"byte_end":11956,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/ A given namespace can support essentially unlimited Durable Objects, with each Object having","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11957,"byte_end":12053,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ access to a transactional, key-value storage API.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12054,"byte_end":12107,"line_start":61,"line_end":61,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12358,"byte_end":12370,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"id_from_name","qualname":"<ObjectNamespace>::id_from_name","value":"pub fn id_from_name(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" This method derives a unique object ID from the given name string. It will always return the\n same ID when given the same name as input.\n","sig":null,"attributes":[{"value":"/ This method derives a unique object ID from the given name string. It will always return the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12199,"byte_end":12295,"line_start":67,"line_end":67,"column_start":5,"column_end":101}},{"value":"/ same ID when given the same name as input.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12300,"byte_end":12346,"line_start":68,"line_end":68,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13199,"byte_end":13213,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"id_from_string","qualname":"<ObjectNamespace>::id_from_string","value":"pub fn id_from_string(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" This method parses an ID that was previously stringified. This is useful in particular with\n IDs created using `unique_id(&self)`, as these IDs need to be stored somewhere, probably as","sig":null,"attributes":[{"value":"/ This method parses an ID that was previously stringified. This is useful in particular with","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12631,"byte_end":12726,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ IDs created using `unique_id(&self)`, as these IDs need to be stored somewhere, probably as","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12731,"byte_end":12826,"line_start":80,"line_end":80,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12851,"byte_end":12854,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A stringified object ID is a 64-digit hexadecimal number. However, not all 64-digit hex","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12859,"byte_end":12950,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ numbers are valid IDs. This method will throw if it is passed an ID that was not originally","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12955,"byte_end":13050,"line_start":84,"line_end":84,"column_start":5,"column_end":100}},{"value":"/ created by newUniqueId() or idFromName(). It will also throw if the ID was originally","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13055,"byte_end":13144,"line_start":85,"line_end":85,"column_start":5,"column_end":94}},{"value":"/ created for a different namespace.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13149,"byte_end":13187,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13709,"byte_end":13718,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"unique_id","qualname":"<ObjectNamespace>::unique_id","value":"pub fn unique_id(&Self) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ID randomly. This method will never return the same ID twice, and thus\n it is guaranteed that the object does not yet exist and has never existed at the time the\n method returns.\n","sig":null,"attributes":[{"value":"/ Creates a new object ID randomly. This method will never return the same ID twice, and thus","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13480,"byte_end":13575,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ it is guaranteed that the object does not yet exist and has never existed at the time the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13580,"byte_end":13673,"line_start":98,"line_end":98,"column_start":5,"column_end":98}},{"value":"/ method returns.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13678,"byte_end":13697,"line_start":99,"line_end":99,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14564,"byte_end":14591,"line_start":119,"line_end":119,"column_start":12,"column_end":39},"name":"unique_id_with_jurisdiction","qualname":"<ObjectNamespace>::unique_id_with_jurisdiction","value":"pub fn unique_id_with_jurisdiction(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Durable Objects can be created so that they only run and store data within a specific\n jurisdiction to comply with local regulations. You must specify the jurisdiction when\n generating the Durable Object's id.","sig":null,"attributes":[{"value":"/ Durable Objects can be created so that they only run and store data within a specific","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":13964,"byte_end":14053,"line_start":110,"line_end":110,"column_start":5,"column_end":94}},{"value":"/ jurisdiction to comply with local regulations. You must specify the jurisdiction when","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14058,"byte_end":14147,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ generating the Durable Object's id.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14152,"byte_end":14191,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14196,"byte_end":14199,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Jurisdiction constraints can only be used with ids created by `unique_id()` and are not","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14204,"byte_end":14295,"line_start":114,"line_end":114,"column_start":5,"column_end":96}},{"value":"/ currently compatible with ids created by `id_from_name()`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14300,"byte_end":14362,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14367,"byte_end":14370,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ See supported jurisdictions and more documentation at:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14375,"byte_end":14433,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ <https://developers.cloudflare.com/workers/runtime-apis/durable-objects#restricting-objects-to-a-jurisdiction>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":14438,"byte_end":14552,"line_start":118,"line_end":118,"column_start":5,"column_end":119}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15170,"byte_end":15178,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"ObjectId","qualname":"::durable::ObjectId","value":"ObjectId {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" An ObjectId is used to identify, locate, and access a Durable Object via interaction with its\n Stub.\n","sig":null,"attributes":[{"value":"/ An ObjectId is used to identify, locate, and access a Durable Object via interaction with its","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15051,"byte_end":15148,"line_start":135,"line_end":135,"column_start":1,"column_end":98}},{"value":"/ Stub.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15149,"byte_end":15158,"line_start":136,"line_end":136,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15366,"byte_end":15374,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"get_stub","qualname":"<ObjectId>::get_stub","value":"pub fn get_stub(&Self) -> Result<Stub>","parent":null,"children":[],"decl_id":null,"docs":" Get a Stub for the Durable Object instance identified by this ObjectId.\n","sig":null,"attributes":[{"value":"/ Get a Stub for the Durable Object instance identified by this ObjectId.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15279,"byte_end":15354,"line_start":143,"line_end":143,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15962,"byte_end":15967,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"State","qualname":"::durable::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" Passed from the runtime to provide access to the Durable Object's storage as well as various\n metadata about the Object.\n","sig":null,"attributes":[{"value":"/ Passed from the runtime to provide access to the Durable Object's storage as well as various","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15823,"byte_end":15919,"line_start":162,"line_end":162,"column_start":1,"column_end":97}},{"value":"/ metadata about the Object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15920,"byte_end":15950,"line_start":163,"line_end":163,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16140,"byte_end":16142,"line_start":171,"line_end":171,"column_start":12,"column_end":14},"name":"id","qualname":"<State>::id","value":"pub fn id(&Self) -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" The ID of this Durable Object which can be converted into a hex string using its `to_string()`\n method.\n","sig":null,"attributes":[{"value":"/ The ID of this Durable Object which can be converted into a hex string using its `to_string()`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16014,"byte_end":16112,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ method.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16117,"byte_end":16128,"line_start":170,"line_end":170,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16546,"byte_end":16553,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"storage","qualname":"<State>::storage","value":"pub fn storage(&Self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" Contains methods for accessing persistent storage via the transactional storage API. See\n [Transactional Storage API](https://developers.cloudflare.com/workers/runtime-apis/durable-objects#transactional-storage-api) for a detailed reference.\n","sig":null,"attributes":[{"value":"/ Contains methods for accessing persistent storage via the transactional storage API. See","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16282,"byte_end":16374,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ [Transactional Storage API](https://developers.cloudflare.com/workers/runtime-apis/durable-objects#transactional-storage-api) for a detailed reference.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16379,"byte_end":16534,"line_start":179,"line_end":179,"column_start":5,"column_end":160}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16749,"byte_end":16755,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"_inner","qualname":"<State>::_inner","value":"pub fn _inner(Self) -> ObjectState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17160,"byte_end":17167,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"Storage","qualname":"::durable::Storage","value":"Storage {  }","parent":null,"children":[{"krate":0,"index":173}],"decl_id":null,"docs":" Access a Durable Object's Storage API. Each method is implicitly wrapped inside a transaction,\n such that its results are atomic and isolated from all other storage operations, even when\n accessing multiple key-value pairs.\n","sig":null,"attributes":[{"value":"/ Access a Durable Object's Storage API. Each method is implicitly wrapped inside a transaction,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16915,"byte_end":17013,"line_start":198,"line_end":198,"column_start":1,"column_end":99}},{"value":"/ such that its results are atomic and isolated from all other storage operations, even when","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17014,"byte_end":17108,"line_start":199,"line_end":199,"column_start":1,"column_end":95}},{"value":"/ accessing multiple key-value pairs.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17109,"byte_end":17148,"line_start":200,"line_end":200,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17422,"byte_end":17425,"line_start":208,"line_end":208,"column_start":18,"column_end":21},"name":"get","qualname":"<Storage>::get","value":"pub async fn get<T: for<'a> Deserialize, '_, '_>(&'_ Self, &'_ str)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value associated with the given key. The type of the returned value will be\n whatever was previously written for the key, or undefined if the key does not exist.\n","sig":null,"attributes":[{"value":"/ Retrieves the value associated with the given key. The type of the returned value will be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17218,"byte_end":17311,"line_start":206,"line_end":206,"column_start":5,"column_end":98}},{"value":"/ whatever was previously written for the key, or undefined if the key does not exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17316,"byte_end":17404,"line_start":207,"line_end":207,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17965,"byte_end":17977,"line_start":222,"line_end":222,"column_start":18,"column_end":30},"name":"get_multiple","qualname":"<Storage>::get_multiple","value":"pub async fn get_multiple<'_, impl Deref<Target = str>: Deref<Target =\n                          str>>(&'_ Self, Vec<impl Deref<Target = str>>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the values associated with each of the provided keys.\n","sig":null,"attributes":[{"value":"/ Retrieves the values associated with each of the provided keys.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17880,"byte_end":17947,"line_start":221,"line_end":221,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":18403,"byte_end":18406,"line_start":233,"line_end":233,"column_start":18,"column_end":21},"name":"put","qualname":"<Storage>::put","value":"pub async fn put<T: Serialize, '_, '_>(&'_ mut Self, &'_ str, T)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Stores the value and associates it with the given key.\n","sig":null,"attributes":[{"value":"/ Stores the value and associates it with the given key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":18327,"byte_end":18385,"line_start":232,"line_end":232,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":18742,"byte_end":18754,"line_start":241,"line_end":241,"column_start":18,"column_end":30},"name":"put_multiple","qualname":"<Storage>::put_multiple","value":"pub async fn put_multiple<T: Serialize, '_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Takes a serializable struct and stores each of its keys and values to storage.\n","sig":null,"attributes":[{"value":"/ Takes a serializable struct and stores each of its keys and values to storage.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":18642,"byte_end":18724,"line_start":240,"line_end":240,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":19244,"byte_end":19250,"line_start":253,"line_end":253,"column_start":18,"column_end":24},"name":"delete","qualname":"<Storage>::delete","value":"pub async fn delete<'_, '_>(&'_ mut Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Deletes the key and associated value. Returns true if the key existed or false if it didn't.\n","sig":null,"attributes":[{"value":"/ Deletes the key and associated value. Returns true if the key existed or false if it didn't.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":19130,"byte_end":19226,"line_start":252,"line_end":252,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":19721,"byte_end":19736,"line_start":265,"line_end":265,"column_start":18,"column_end":33},"name":"delete_multiple","qualname":"<Storage>::delete_multiple","value":"pub async fn delete_multiple<'_, impl Deref<Target = str>: Deref<Target =\n                             str>>(&'_ mut Self,\n                                   Vec<impl Deref<Target = str>>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Deletes the provided keys and their associated values. Returns a count of the number of\n key-value pairs deleted.\n","sig":null,"attributes":[{"value":"/ Deletes the provided keys and their associated values. Returns a count of the number of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":19579,"byte_end":19670,"line_start":263,"line_end":263,"column_start":5,"column_end":96}},{"value":"/ key-value pairs deleted.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":19675,"byte_end":19703,"line_start":264,"line_end":264,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20586,"byte_end":20596,"line_start":286,"line_end":286,"column_start":18,"column_end":28},"name":"delete_all","qualname":"<Storage>::delete_all","value":"pub async fn delete_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Deletes all keys and associated values, effectively deallocating all storage used by the\n Durable Object. In the event of a failure while the operation is still in flight, it may be\n that only a subset of the data is properly deleted.\n","sig":null,"attributes":[{"value":"/ Deletes all keys and associated values, effectively deallocating all storage used by the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20316,"byte_end":20408,"line_start":283,"line_end":283,"column_start":5,"column_end":97}},{"value":"/ Durable Object. In the event of a failure while the operation is still in flight, it may be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20413,"byte_end":20508,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ that only a subset of the data is properly deleted.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20513,"byte_end":20568,"line_start":285,"line_end":285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21302,"byte_end":21306,"line_start":298,"line_end":298,"column_start":18,"column_end":22},"name":"list","qualname":"<Storage>::list","value":"pub async fn list<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns all keys and values associated with the current Durable Object in ascending\n lexicographic sorted order.","sig":null,"attributes":[{"value":"/ Returns all keys and values associated with the current Durable Object in ascending","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20756,"byte_end":20843,"line_start":291,"line_end":291,"column_start":5,"column_end":92}},{"value":"/ lexicographic sorted order.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20848,"byte_end":20879,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20884,"byte_end":20887,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Be aware of how much data may be stored in your Durable Object before calling this version","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20892,"byte_end":20986,"line_start":294,"line_end":294,"column_start":5,"column_end":99}},{"value":"/ of list without options, because it will all be loaded into the Durable Object's memory,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":20991,"byte_end":21083,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ potentially hitting its [limit](https://developers.cloudflare.com/workers/platform/limits#durable-objects-limits).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21088,"byte_end":21206,"line_start":296,"line_end":296,"column_start":5,"column_end":123}},{"value":"/ If that is a concern, use the alternate `list_with_options()` method.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21211,"byte_end":21284,"line_start":297,"line_end":297,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21647,"byte_end":21664,"line_start":307,"line_end":307,"column_start":18,"column_end":35},"name":"list_with_options","qualname":"<Storage>::list_with_options","value":"pub async fn list_with_options<'_, '_>(&'_ Self, ListOptions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns keys associated with the current Durable Object according to the parameters in the\n provided options object.\n","sig":null,"attributes":[{"value":"/ Returns keys associated with the current Durable Object according to the parameters in the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21502,"byte_end":21596,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ provided options object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":21601,"byte_end":21629,"line_start":306,"line_end":306,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1082},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":26281,"byte_end":26292,"line_start":444,"line_end":444,"column_start":12,"column_end":23},"name":"ListOptions","qualname":"::durable::ListOptions","value":"ListOptions {  }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27232,"byte_end":27235,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"new","qualname":"<ListOptions>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new ListOptions struct with no options set.\n","sig":null,"attributes":[{"value":"/ Create a new ListOptions struct with no options set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27122,"byte_end":27178,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27183,"byte_end":27220,"line_start":465,"line_end":465,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27480,"byte_end":27485,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"start","qualname":"<ListOptions>::start","value":"pub fn start(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Key at which the list results should start, inclusive.\n","sig":null,"attributes":[{"value":"/ Key at which the list results should start, inclusive.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27410,"byte_end":27468,"line_start":476,"line_end":476,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27644,"byte_end":27647,"line_start":483,"line_end":483,"column_start":12,"column_end":15},"name":"end","qualname":"<ListOptions>::end","value":"pub fn end(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Key at which the list results should end, exclusive.\n","sig":null,"attributes":[{"value":"/ Key at which the list results should end, exclusive.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27576,"byte_end":27632,"line_start":482,"line_end":482,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27835,"byte_end":27841,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"prefix","qualname":"<ListOptions>::prefix","value":"pub fn prefix(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restricts results to only include key-value pairs whose keys begin with the prefix.\n","sig":null,"attributes":[{"value":"/ Restricts results to only include key-value pairs whose keys begin with the prefix.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27736,"byte_end":27823,"line_start":488,"line_end":488,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28054,"byte_end":28061,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"reverse","qualname":"<ListOptions>::reverse","value":"pub fn reverse(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If true, return results in descending lexicographic order instead of the default ascending\n order.\n","sig":null,"attributes":[{"value":"/ If true, return results in descending lexicographic order instead of the default ascending","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27933,"byte_end":28027,"line_start":494,"line_end":494,"column_start":5,"column_end":99}},{"value":"/ order.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28032,"byte_end":28042,"line_start":495,"line_end":495,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28211,"byte_end":28216,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"limit","qualname":"<ListOptions>::limit","value":"pub fn limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of key-value pairs to return.\n","sig":null,"attributes":[{"value":"/ Maximum number of key-value pairs to return.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28151,"byte_end":28199,"line_start":501,"line_end":501,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1096},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":29946,"byte_end":29959,"line_start":575,"line_end":575,"column_start":11,"column_end":24},"name":"DurableObject","qualname":"::durable::DurableObject","value":"DurableObject","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"decl_id":null,"docs":"**Note:** Implement this trait with a standard `impl DurableObject for YourType` block, but in order to\nintegrate them with the Workers Runtime, you must also add the **`#[durable_object]`** attribute\nmacro to both the impl block and the struct type definition.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":29969,"byte_end":29972,"line_start":576,"line_end":576,"column_start":8,"column_end":11},"name":"new","qualname":"::durable::DurableObject::new","value":"pub fn new(State, Env) -> Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":30019,"byte_end":30024,"line_start":577,"line_end":577,"column_start":14,"column_end":19},"name":"fetch","qualname":"::durable::DurableObject::fetch","value":"pub fn fetch<'life0, 'async_trait>(&'life0 mut Self, Request)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Response>> + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":29914,"byte_end":29935,"line_start":574,"line_end":574,"column_start":1,"column_end":22}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":29914,"byte_end":29935,"line_start":574,"line_end":574,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30384,"byte_end":30387,"line_start":12,"line_end":12,"column_start":14,"column_end":17},"name":"Env","qualname":"::env::Env","value":"Env {  }","parent":null,"children":[{"krate":0,"index":1102}],"decl_id":null,"docs":" Env contains any bindings you have associated with the Worker when you uploaded it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30250,"byte_end":30265,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30250,"byte_end":30265,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30250,"byte_end":30265,"line_start":9,"line_end":9,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31332,"byte_end":31338,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"secret","qualname":"<Env>::secret","value":"pub fn secret(&Self, &str) -> Result<Secret>","parent":null,"children":[],"decl_id":null,"docs":" Access Secret value bindings added to your Worker via the UI or `wrangler`:\n <https://developers.cloudflare.com/workers/cli-wrangler/commands#secret>\n","sig":null,"attributes":[{"value":"/ Access Secret value bindings added to your Worker via the UI or `wrangler`:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31160,"byte_end":31239,"line_start":32,"line_end":32,"column_start":5,"column_end":84}},{"value":"/ <https://developers.cloudflare.com/workers/cli-wrangler/commands#secret>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31244,"byte_end":31320,"line_start":33,"line_end":33,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31584,"byte_end":31587,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"var","qualname":"<Env>::var","value":"pub fn var(&Self, &str) -> Result<Var>","parent":null,"children":[],"decl_id":null,"docs":" Environment variables are defined via the `[vars]` configuration in your wrangler.toml file\n and are always plaintext values.\n","sig":null,"attributes":[{"value":"/ Environment variables are defined via the `[vars]` configuration in your wrangler.toml file","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31436,"byte_end":31531,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"/ and are always plaintext values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31536,"byte_end":31572,"line_start":39,"line_end":39,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31783,"byte_end":31785,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"kv","qualname":"<Env>::kv","value":"pub fn kv(&Self, &str) -> Result<KvStore>","parent":null,"children":[],"decl_id":null,"docs":" Access a Workers KV namespace by the binding name configured in your wrangler.toml file.\n","sig":null,"attributes":[{"value":"/ Access a Workers KV namespace by the binding name configured in your wrangler.toml file.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31679,"byte_end":31771,"line_start":44,"line_end":44,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32011,"byte_end":32025,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"durable_object","qualname":"<Env>::durable_object","value":"pub fn durable_object(&Self, &str) -> Result<ObjectNamespace>","parent":null,"children":[],"decl_id":null,"docs":" Access a Durable Object namespace by the binding name configured in your wrangler.toml file.\n","sig":null,"attributes":[{"value":"/ Access a Durable Object namespace by the binding name configured in your wrangler.toml file.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":31903,"byte_end":31999,"line_start":49,"line_end":49,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32506,"byte_end":32519,"line_start":68,"line_end":68,"column_start":12,"column_end":25},"name":"StringBinding","qualname":"::env::StringBinding","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1178},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33811,"byte_end":33822,"line_start":7,"line_end":7,"column_start":5,"column_end":16},"name":"BadEncoding","qualname":"::error::Error::BadEncoding","value":"Error::BadEncoding","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1180},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33828,"byte_end":33836,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"BodyUsed","qualname":"::error::Error::BodyUsed","value":"Error::BodyUsed","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33842,"byte_end":33846,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Json","qualname":"::error::Error::Json","value":"Error::Json((String, u16))","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33867,"byte_end":33874,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"JsError","qualname":"::error::Error::JsError","value":"Error::JsError(String)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33888,"byte_end":33896,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Internal","qualname":"::error::Error::Internal","value":"Error::Internal(JsValue)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33911,"byte_end":33923,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"BindingError","qualname":"::error::Error::BindingError","value":"Error::BindingError(String)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33937,"byte_end":33953,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"RouteInsertError","qualname":"::error::Error::RouteInsertError","value":"Error::RouteInsertError(matchit::InsertError)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33981,"byte_end":33997,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"RouteNoDataError","qualname":"::error::Error::RouteNoDataError","value":"Error::RouteNoDataError","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34003,"byte_end":34012,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"RustError","qualname":"::error::Error::RustError","value":"Error::RustError(String)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34026,"byte_end":34040,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"SerdeJsonError","qualname":"::error::Error::SerdeJsonError","value":"Error::SerdeJsonError(serde_json::Error)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1177},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33799,"byte_end":33804,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    BadEncoding,\n    BodyUsed,\n    Json((String, u16)),\n    JsError(String),\n    Internal(JsValue),\n    BindingError(String),\n    RouteInsertError(matchit::InsertError),\n    RouteNoDataError,\n    RustError(String),\n    SerdeJsonError(serde_json::Error),\n}","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1202}],"decl_id":null,"docs":" All possible Error variants that might be encountered while working with a Worker.\n","sig":null,"attributes":[{"value":"/ All possible Error variants that might be encountered while working with a Worker.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33668,"byte_end":33754,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":33772,"byte_end":33789,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36522,"byte_end":36527,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Field","qualname":"::formdata::FormEntry::Field","value":"FormEntry::Field(String)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36541,"byte_end":36545,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"File","qualname":"::formdata::FormEntry::File","value":"FormEntry::File(File)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":407},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36506,"byte_end":36515,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"FormEntry","qualname":"::formdata::FormEntry","value":"pub enum FormEntry { Field(String), File(File), }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":411}],"decl_id":null,"docs":" Representing the options any FormData value can be, a field or a file.\n","sig":null,"attributes":[{"value":"/ Representing the options any FormData value can be, a field or a file.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36422,"byte_end":36496,"line_start":15,"line_end":15,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1207},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36751,"byte_end":36759,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"FormData","qualname":"::formdata::FormData","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) representation of the\n request body, providing access to form encoded fields and files.\n","sig":null,"attributes":[{"value":"/ A [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) representation of the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36556,"byte_end":36653,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ request body, providing access to form encoded fields and files.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36654,"byte_end":36722,"line_start":22,"line_end":22,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36803,"byte_end":36806,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FormData>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36973,"byte_end":36976,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"get","qualname":"<FormData>::get","value":"pub fn get(&Self, &str) -> Option<FormEntry>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first value associated with a given key from within a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Returns the first value associated with a given key from within a `FormData` object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36873,"byte_end":36961,"line_start":31,"line_end":31,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":37488,"byte_end":37495,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_all","qualname":"<FormData>::get_all","value":"pub fn get_all(&Self, &str) -> Option<Vec<FormEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vec of all the values associated with a given key from within a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Returns a vec of all the values associated with a given key from within a `FormData` object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":37380,"byte_end":37476,"line_start":49,"line_end":49,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38249,"byte_end":38252,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"has","qualname":"<FormData>::has","value":"pub fn has(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean stating whether a `FormData` object contains a certain key.\n","sig":null,"attributes":[{"value":"/ Returns a boolean stating whether a `FormData` object contains a certain key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38156,"byte_end":38237,"line_start":74,"line_end":74,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38456,"byte_end":38462,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"append","qualname":"<FormData>::append","value":"pub fn append(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends a new value onto an existing key inside a `FormData` object, or adds the key if it\n does not already exist.\n","sig":null,"attributes":[{"value":"/ Appends a new value onto an existing key inside a `FormData` object, or adds the key if it","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38318,"byte_end":38412,"line_start":79,"line_end":79,"column_start":5,"column_end":99}},{"value":"/ does not already exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38417,"byte_end":38444,"line_start":80,"line_end":80,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38731,"byte_end":38734,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"set","qualname":"<FormData>::set","value":"pub fn set(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a new value for an existing key inside a `FormData` object, or adds the key/value if it\n does not already exist.\n","sig":null,"attributes":[{"value":"/ Sets a new value for an existing key inside a `FormData` object, or adds the key/value if it","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38591,"byte_end":38687,"line_start":85,"line_end":85,"column_start":5,"column_end":101}},{"value":"/ does not already exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38692,"byte_end":38719,"line_start":86,"line_end":86,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38926,"byte_end":38932,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"delete","qualname":"<FormData>::delete","value":"pub fn delete(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Deletes a key/value pair from a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Deletes a key/value pair from a `FormData` object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":38860,"byte_end":38914,"line_start":91,"line_end":91,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39597,"byte_end":39601,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"File","qualname":"::formdata::File","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [File](https://developer.mozilla.org/en-US/docs/Web/API/File) representation used with\n `FormData`.\n","sig":null,"attributes":[{"value":"/ A [File](https://developer.mozilla.org/en-US/docs/Web/API/File) representation used with","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39477,"byte_end":39569,"line_start":114,"line_end":114,"column_start":1,"column_end":93}},{"value":"/ `FormData`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39570,"byte_end":39585,"line_start":115,"line_end":115,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39687,"byte_end":39690,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<File>::new","value":"pub fn new(Vec<u8>, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new named file from a buffer.\n","sig":null,"attributes":[{"value":"/ Construct a new named file from a buffer.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39630,"byte_end":39675,"line_start":119,"line_end":119,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40003,"byte_end":40007,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the file name.\n","sig":null,"attributes":[{"value":"/ Get the file name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39969,"byte_end":39991,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40148,"byte_end":40153,"line_start":136,"line_end":136,"column_start":18,"column_end":23},"name":"bytes","qualname":"<File>::bytes","value":"pub async fn bytes<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Read the file from an internal buffer and get the resulting bytes.\n","sig":null,"attributes":[{"value":"/ Read the file from an internal buffer and get the resulting bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40060,"byte_end":40130,"line_start":135,"line_end":135,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40607,"byte_end":40620,"line_start":149,"line_end":149,"column_start":12,"column_end":25},"name":"last_modified","qualname":"<File>::last_modified","value":"pub fn last_modified(&Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the last_modified metadata property of the file.\n","sig":null,"attributes":[{"value":"/ Get the last_modified metadata property of the file.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40539,"byte_end":40595,"line_start":148,"line_end":148,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":467},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41166,"byte_end":41169,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"Url","qualname":"::global::Fetch::Url","value":"Fetch::Url(url::Url)","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":470},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41185,"byte_end":41192,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Request","qualname":"::global::Fetch::Request","value":"Fetch::Request(WorkerRequest)","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":466},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41154,"byte_end":41159,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Fetch","qualname":"::global::Fetch","value":"pub enum Fetch { Url(url::Url), Request(WorkerRequest), }","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":470}],"decl_id":null,"docs":" Construct a Fetch call from a URL string or a Request object. Call its `send` method to execute\n the request.\n","sig":null,"attributes":[{"value":"/ Construct a Fetch call from a URL string or a Request object. Call its `send` method to execute","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41028,"byte_end":41127,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ the request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41128,"byte_end":41144,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41295,"byte_end":41299,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"name":"send","qualname":"<Fetch>::send","value":"pub async fn send<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Execute a Fetch call and receive a Response.\n","sig":null,"attributes":[{"value":"/ Execute a Fetch call and receive a Response.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41229,"byte_end":41277,"line_start":15,"line_end":15,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42595,"byte_end":42602,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Headers","qualname":"::headers::Headers","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) representation used in\n Request and Response objects.\n","sig":null,"attributes":[{"value":"/ A [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) representation used in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42453,"byte_end":42549,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ Request and Response objects.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42550,"byte_end":42583,"line_start":15,"line_end":15,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42603,"byte_end":42618,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"name":"0","qualname":"::headers::Headers::0","value":"worker_sys::Headers","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43013,"byte_end":43016,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Headers>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Headers` struct.\n","sig":null,"attributes":[{"value":"/ Construct a new `Headers` struct.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42964,"byte_end":43001,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43355,"byte_end":43358,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"get","qualname":"<Headers>::get","value":"pub fn get(&Self, &str) -> Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the values of a header within a `Headers` object with a given name.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns all the values of a header within a `Headers` object with a given name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43189,"byte_end":43272,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43277,"byte_end":43343,"line_start":37,"line_end":37,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43629,"byte_end":43632,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"has","qualname":"<Headers>::has","value":"pub fn has(&Self, &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean stating whether a `Headers` object contains a certain header.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns a boolean stating whether a `Headers` object contains a certain header.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43463,"byte_end":43546,"line_start":42,"line_end":42,"column_start":5,"column_end":88}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43551,"byte_end":43617,"line_start":43,"line_end":43,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43805,"byte_end":43811,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"append","qualname":"<Headers>::append","value":"pub fn append(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43727,"byte_end":43793,"line_start":48,"line_end":48,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44133,"byte_end":44136,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"set","qualname":"<Headers>::set","value":"pub fn set(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":43931,"byte_end":44050,"line_start":53,"line_end":53,"column_start":5,"column_end":124}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44055,"byte_end":44121,"line_start":54,"line_end":54,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44470,"byte_end":44476,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"delete","qualname":"<Headers>::delete","value":"pub fn delete(&mut Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes a header from a `Headers` object.\n Returns an error if the name is invalid (e.g. contains spaces)\n or if the JS Headers objects's guard is immutable (e.g. for an incoming request)\n","sig":null,"attributes":[{"value":"/ Deletes a header from a `Headers` object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44253,"byte_end":44298,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44303,"byte_end":44369,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ or if the JS Headers objects's guard is immutable (e.g. for an incoming request)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44374,"byte_end":44458,"line_start":61,"line_end":61,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44680,"byte_end":44687,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"entries","qualname":"<Headers>::entries","value":"pub fn entries(&Self) -> HeaderIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing to go through all key/value pairs contained in this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing to go through all key/value pairs contained in this object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":44576,"byte_end":44668,"line_start":66,"line_end":66,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45429,"byte_end":45433,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"keys","qualname":"<Headers>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing you to go through all keys of the key/value pairs contained in\n this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing you to go through all keys of the key/value pairs contained in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45301,"byte_end":45396,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ this object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45401,"byte_end":45417,"line_start":80,"line_end":80,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45952,"byte_end":45958,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"values","qualname":"<Headers>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing you to go through all values of the key/value pairs contained\n in this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing you to go through all values of the key/value pairs contained","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45822,"byte_end":45916,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/ in this object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":45921,"byte_end":45940,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48690,"byte_end":48694,"line_start":5,"line_end":5,"column_start":5,"column_end":9},"name":"Head","qualname":"::http::Method::Head","value":"Method::Head","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48704,"byte_end":48707,"line_start":6,"line_end":6,"column_start":5,"column_end":8},"name":"Get","qualname":"::http::Method::Get","value":"Method::Get","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48713,"byte_end":48717,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Post","qualname":"::http::Method::Post","value":"Method::Post","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1220},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48723,"byte_end":48726,"line_start":8,"line_end":8,"column_start":5,"column_end":8},"name":"Put","qualname":"::http::Method::Put","value":"Method::Put","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48732,"byte_end":48737,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Patch","qualname":"::http::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1224},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48743,"byte_end":48749,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Delete","qualname":"::http::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1226},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48755,"byte_end":48762,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Options","qualname":"::http::Method::Options","value":"Method::Options","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48768,"byte_end":48775,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Connect","qualname":"::http::Method::Connect","value":"Method::Connect","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48781,"byte_end":48786,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Trace","qualname":"::http::Method::Trace","value":"Method::Trace","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1212},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48677,"byte_end":48683,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Method","qualname":"::http::Method","value":"pub enum Method {\n    Head = ,\n    Get,\n    Post,\n    Put,\n    Patch,\n    Delete,\n    Options,\n    Connect,\n    Trace,\n}","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230}],"decl_id":null,"docs":" A [`Method`](https://developer.mozilla.org/en-US/docs/Web/API/Request/method) representation\n used on Request objects.\n","sig":null,"attributes":[{"value":"/ A [`Method`](https://developer.mozilla.org/en-US/docs/Web/API/Request/method) representation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48497,"byte_end":48593,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ used on Request objects.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48594,"byte_end":48622,"line_start":2,"line_end":2,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48816,"byte_end":48819,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"all","qualname":"<Method>::all","value":"pub fn all() -> Vec<Method>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":50664,"byte_end":50671,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"decl_id":null,"docs":" A [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) representation for\n handling incoming and creating outbound HTTP requests.\n","sig":null,"attributes":[{"value":"/ A [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) representation for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":50501,"byte_end":50593,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ handling incoming and creating outbound HTTP requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":50594,"byte_end":50652,"line_start":10,"line_end":10,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":51545,"byte_end":51548,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new(&str, Method) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Request` with an HTTP Method.\n","sig":null,"attributes":[{"value":"/ Construct a new `Request` with an HTTP Method.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":51483,"byte_end":51533,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":52151,"byte_end":52164,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"new_with_init","qualname":"<Request>::new_with_init","value":"pub fn new_with_init(&str, &RequestInit) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Request` with a `RequestInit` configuration.\n","sig":null,"attributes":[{"value":"/ Construct a new `Request` with a `RequestInit` configuration.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":52074,"byte_end":52139,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":52722,"byte_end":52726,"line_start":77,"line_end":77,"column_start":18,"column_end":22},"name":"json","qualname":"<Request>::json","value":"pub async fn json<B: DeserializeOwned, '_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body encoded as JSON.\n","sig":null,"attributes":[{"value":"/ Access this request's body encoded as JSON.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":52657,"byte_end":52704,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":53345,"byte_end":53349,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"name":"text","qualname":"<Request>::text","value":"pub async fn text<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as plaintext.\n","sig":null,"attributes":[{"value":"/ Access this request's body as plaintext.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":53283,"byte_end":53327,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":53934,"byte_end":53939,"line_start":113,"line_end":113,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Request>::bytes","value":"pub async fn bytes<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as raw bytes.\n","sig":null,"attributes":[{"value":"/ Access this request's body as raw bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":53872,"byte_end":53916,"line_start":112,"line_end":112,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":54597,"byte_end":54606,"line_start":131,"line_end":131,"column_start":18,"column_end":27},"name":"form_data","qualname":"<Request>::form_data","value":"pub async fn form_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as a form-encoded payload and pull out fields and files.\n","sig":null,"attributes":[{"value":"/ Access this request's body as a form-encoded payload and pull out fields and files.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":54492,"byte_end":54579,"line_start":130,"line_end":130,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55176,"byte_end":55183,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"pub fn headers(&Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` for this reuqest.\n","sig":null,"attributes":[{"value":"/ Get the `Headers` for this reuqest.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55125,"byte_end":55164,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55401,"byte_end":55412,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"pub fn headers_mut(&mut Self) -> Result<&mut Headers>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this request's `Headers`.\n **Note:** they can only be modified if the request was created from scratch or cloned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this request's `Headers`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55238,"byte_end":55294,"line_start":153,"line_end":153,"column_start":5,"column_end":61}},{"value":"/ **Note:** they can only be modified if the request was created from scratch or cloned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55299,"byte_end":55389,"line_start":154,"line_end":154,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55742,"byte_end":55744,"line_start":165,"line_end":165,"column_start":12,"column_end":14},"name":"cf","qualname":"<Request>::cf","value":"pub fn cf(&Self) -> &Cf","parent":null,"children":[],"decl_id":null,"docs":" Access this request's Cloudflare-specific properties.\n","sig":null,"attributes":[{"value":"/ Access this request's Cloudflare-specific properties.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55673,"byte_end":55730,"line_start":164,"line_end":164,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55852,"byte_end":55858,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"pub fn method(&Self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" The HTTP Method associated with this `Request`.\n","sig":null,"attributes":[{"value":"/ The HTTP Method associated with this `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55789,"byte_end":55840,"line_start":169,"line_end":169,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55964,"byte_end":55968,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"path","qualname":"<Request>::path","value":"pub fn path(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The URL Path of this `Request`.\n","sig":null,"attributes":[{"value":"/ The URL Path of this `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":55917,"byte_end":55952,"line_start":174,"line_end":174,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":56083,"byte_end":56086,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"pub fn url(&Self) -> Result<Url>","parent":null,"children":[],"decl_id":null,"docs":" The parsed [`url::Url`] of this `Request`.\n","sig":null,"attributes":[{"value":"/ The parsed [`url::Url`] of this `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":56025,"byte_end":56071,"line_start":179,"line_end":179,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":56332,"byte_end":56337,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"clone","qualname":"<Request>::clone","value":"pub fn clone(&Self) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":56280,"byte_end":56320,"line_start":186,"line_end":186,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":56497,"byte_end":56502,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"inner","qualname":"<Request>::inner","value":"pub fn inner(&Self) -> &EdgeRequest","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":56810,"byte_end":56821,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"RequestInit","qualname":"::request_init::RequestInit","value":"RequestInit { body, headers, cf, method, redirect }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":" Optional options struct that contains settings to apply to the `Request`.\n","sig":null,"attributes":[{"value":"/ Optional options struct that contains settings to apply to the `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":56721,"byte_end":56798,"line_start":9,"line_end":9,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":56928,"byte_end":56932,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"body","qualname":"::request_init::RequestInit::body","value":"std::option::Option<wasm_bindgen::JsValue>","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Currently requires a manual conversion from your data into a [`wasm_bindgen::JsValue`].\n","sig":null,"attributes":[{"value":"/ Currently requires a manual conversion from your data into a [`wasm_bindgen::JsValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":56828,"byte_end":56919,"line_start":11,"line_end":11,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57015,"byte_end":57022,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"headers","qualname":"::request_init::RequestInit::headers","value":"headers::Headers","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Headers associated with the outbound `Request`.\n","sig":null,"attributes":[{"value":"/ Headers associated with the outbound `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":56955,"byte_end":57006,"line_start":13,"line_end":13,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57179,"byte_end":57181,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"cf","qualname":"::request_init::RequestInit::cf","value":"request_init::CfProperties","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Cloudflare-specific properties that can be set on the `Request` that control how Cloudflare’s\n edge handles the request.\n","sig":null,"attributes":[{"value":"/ Cloudflare-specific properties that can be set on the `Request` that control how Cloudflare’s","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57037,"byte_end":57136,"line_start":15,"line_end":15,"column_start":5,"column_end":102}},{"value":"/ edge handles the request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57141,"byte_end":57170,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57254,"byte_end":57260,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"method","qualname":"::request_init::RequestInit::method","value":"http::Method","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" The HTTP Method used for this `Request`.\n","sig":null,"attributes":[{"value":"/ The HTTP Method used for this `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57201,"byte_end":57245,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57500,"byte_end":57508,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"name":"redirect","qualname":"::request_init::RequestInit::redirect","value":"request_init::RequestRedirect","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" The redirect mode to use: follow, error, or manual. The default for a new Request object is\n follow. Note, however, that the incoming Request property of a FetchEvent will have redirect\n mode manual.\n","sig":null,"attributes":[{"value":"/ The redirect mode to use: follow, error, or manual. The default for a new Request object is","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57274,"byte_end":57369,"line_start":20,"line_end":20,"column_start":5,"column_end":100}},{"value":"/ follow. Note, however, that the incoming Request property of a FetchEvent will have redirect","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57374,"byte_end":57470,"line_start":21,"line_end":21,"column_start":5,"column_end":101}},{"value":"/ mode manual.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57475,"byte_end":57491,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57560,"byte_end":57563,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<RequestInit>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57621,"byte_end":57633,"line_start":31,"line_end":31,"column_start":12,"column_end":24},"name":"with_headers","qualname":"<RequestInit>::with_headers","value":"pub fn with_headers(&mut Self, Headers) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57741,"byte_end":57752,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"with_method","qualname":"<RequestInit>::with_method","value":"pub fn with_method(&mut Self, Method) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57856,"byte_end":57869,"line_start":41,"line_end":41,"column_start":12,"column_end":25},"name":"with_redirect","qualname":"<RequestInit>::with_redirect","value":"pub fn with_redirect(&mut Self, RequestRedirect) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57988,"byte_end":57997,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"with_body","qualname":"<RequestInit>::with_body","value":"pub fn with_body(&mut Self, Option<JsValue>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":58104,"byte_end":58122,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"with_cf_properties","qualname":"<RequestInit>::with_cf_properties","value":"pub fn with_cf_properties(&mut Self, CfProperties) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59412,"byte_end":59424,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"CfProperties","qualname":"::request_init::CfProperties","value":"CfProperties { apps, cache_everything, cache_key, cache_ttl, cache_ttl_by_status, minify, mirage, polish, resolve_override, scrape_shield }","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"decl_id":null,"docs":" <https://developers.cloudflare.com/workers/runtime-apis/request#requestinitcfproperties>\n","sig":null,"attributes":[{"value":"/ <https://developers.cloudflare.com/workers/runtime-apis/request#requestinitcfproperties>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59308,"byte_end":59400,"line_start":96,"line_end":96,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":726},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59523,"byte_end":59527,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"apps","qualname":"::request_init::CfProperties::apps","value":"std::option::Option<bool>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Whether Cloudflare Apps should be enabled for this request. Defaults to `true`.\n","sig":null,"attributes":[{"value":"/ Whether Cloudflare Apps should be enabled for this request. Defaults to `true`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59431,"byte_end":59514,"line_start":98,"line_end":98,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59810,"byte_end":59826,"line_start":103,"line_end":103,"column_start":9,"column_end":25},"name":"cache_everything","qualname":"::request_init::CfProperties::cache_everything","value":"std::option::Option<bool>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" This option forces Cloudflare to cache the response for this request, regardless of what\n headers are seen on the response. This is equivalent to setting the page rule “Cache Level”\n (to “Cache Everything”). Defaults to `false`.\n","sig":null,"attributes":[{"value":"/ This option forces Cloudflare to cache the response for this request, regardless of what","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59547,"byte_end":59639,"line_start":100,"line_end":100,"column_start":5,"column_end":97}},{"value":"/ headers are seen on the response. This is equivalent to setting the page rule “Cache Level”","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59644,"byte_end":59743,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ (to “Cache Everything”). Defaults to `false`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59748,"byte_end":59801,"line_start":102,"line_end":102,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60089,"byte_end":60098,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"cache_key","qualname":"::request_init::CfProperties::cache_key","value":"std::option::Option<bool>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" A request’s cache key is what determines if two requests are “the same” for caching\n purposes. If a request has the same cache key as some previous request, then we can serve\n the same cached response for both.\n","sig":null,"attributes":[{"value":"/ A request’s cache key is what determines if two requests are “the same” for caching","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59846,"byte_end":59939,"line_start":104,"line_end":104,"column_start":5,"column_end":92}},{"value":"/ purposes. If a request has the same cache key as some previous request, then we can serve","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59944,"byte_end":60037,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/ the same cached response for both.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60042,"byte_end":60080,"line_start":106,"line_end":106,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60505,"byte_end":60514,"line_start":112,"line_end":112,"column_start":9,"column_end":18},"name":"cache_ttl","qualname":"::request_init::CfProperties::cache_ttl","value":"std::option::Option<u32>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" This option forces Cloudflare to cache the response for this request, regardless of what\n headers are seen on the response. This is equivalent to setting two page rules: “Edge Cache\n TTL” and “Cache Level” (to “Cache Everything”). The value must be zero or a positive number.\n A value of 0 indicates that the cache asset expires immediately.\n","sig":null,"attributes":[{"value":"/ This option forces Cloudflare to cache the response for this request, regardless of what","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60118,"byte_end":60210,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ headers are seen on the response. This is equivalent to setting two page rules: “Edge Cache","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60215,"byte_end":60312,"line_start":109,"line_end":109,"column_start":5,"column_end":100}},{"value":"/ TTL” and “Cache Level” (to “Cache Everything”). The value must be zero or a positive number.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60317,"byte_end":60423,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ A value of 0 indicates that the cache asset expires immediately.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60428,"byte_end":60496,"line_start":111,"line_end":111,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":730},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61107,"byte_end":61126,"line_start":119,"line_end":119,"column_start":9,"column_end":28},"name":"cache_ttl_by_status","qualname":"::request_init::CfProperties::cache_ttl_by_status","value":"std::option::Option<std::collections::HashMap<std::string::String, u32>>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" This option is a version of the cacheTtl feature which chooses a TTL based on the response’s\n status code. If the response to this request has a status code that matches, Cloudflare will\n cache for the instructed time, and override cache instructives sent by the origin. For\n example: { \"200-299\": 86400, 404: 1, \"500-599\": 0 }. The value can be any integer, including\n zero and negative integers. A value of 0 indicates that the cache asset expires immediately.\n Any negative value instructs Cloudflare not to cache at all.\n","sig":null,"attributes":[{"value":"/ This option is a version of the cacheTtl feature which chooses a TTL based on the response’s","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60533,"byte_end":60631,"line_start":113,"line_end":113,"column_start":5,"column_end":101}},{"value":"/ status code. If the response to this request has a status code that matches, Cloudflare will","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60636,"byte_end":60732,"line_start":114,"line_end":114,"column_start":5,"column_end":101}},{"value":"/ cache for the instructed time, and override cache instructives sent by the origin. For","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60737,"byte_end":60827,"line_start":115,"line_end":115,"column_start":5,"column_end":95}},{"value":"/ example: { \"200-299\": 86400, 404: 1, \"500-599\": 0 }. The value can be any integer, including","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60832,"byte_end":60928,"line_start":116,"line_end":116,"column_start":5,"column_end":101}},{"value":"/ zero and negative integers. A value of 0 indicates that the cache asset expires immediately.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":60933,"byte_end":61029,"line_start":117,"line_end":117,"column_start":5,"column_end":101}},{"value":"/ Any negative value instructs Cloudflare not to cache at all.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61034,"byte_end":61098,"line_start":118,"line_end":118,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61298,"byte_end":61304,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"name":"minify","qualname":"::request_init::CfProperties::minify","value":"std::option::Option<request_init::MinifyConfig>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Enables or disables AutoMinify for various file types.\n For example: `{ javascript: true, css: true, html: false }`.\n","sig":null,"attributes":[{"value":"/ Enables or disables AutoMinify for various file types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61162,"byte_end":61220,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ For example: `{ javascript: true, css: true, html: false }`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61225,"byte_end":61289,"line_start":121,"line_end":121,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61460,"byte_end":61466,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"mirage","qualname":"::request_init::CfProperties::mirage","value":"std::option::Option<bool>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Whether Mirage should be enabled for this request, if otherwise configured for this zone.\n Defaults to true.\n","sig":null,"attributes":[{"value":"/ Whether Mirage should be enabled for this request, if otherwise configured for this zone.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61332,"byte_end":61425,"line_start":123,"line_end":123,"column_start":5,"column_end":98}},{"value":"/ Defaults to true.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61430,"byte_end":61451,"line_start":124,"line_end":124,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":733},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61564,"byte_end":61570,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"name":"polish","qualname":"::request_init::CfProperties::polish","value":"std::option::Option<request_init::PolishConfig>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Sets Polish mode. The possible values are lossy, lossless or off.\n","sig":null,"attributes":[{"value":"/ Sets Polish mode. The possible values are lossy, lossless or off.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61486,"byte_end":61555,"line_start":126,"line_end":126,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62829,"byte_end":62845,"line_start":142,"line_end":142,"column_start":9,"column_end":25},"name":"resolve_override","qualname":"::request_init::CfProperties::resolve_override","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Directs the request to an alternate origin server by overriding the DNS lookup. The value of\n `resolve_override` specifies an alternate hostname which will be used when determining the\n origin IP address, instead of using the hostname specified in the URL. The Host header of\n the request will still match what is in the URL. Thus, `resolve_override` allows a request  \n to be sent to a different server than the URL / Host header specifies. However,\n `resolve_override` will only take effect if both the URL host and the host specified by\n `resolve_override` are within your zone. If either specifies a host from a different zone /\n domain, then the option will be ignored for security reasons. If you need to direct a\n request to a host outside your zone (while keeping the Host header pointing within your\n zone), first create a CNAME record within your zone pointing to the outside host, and then\n set `resolve_override` to point at the CNAME record.","sig":null,"attributes":[{"value":"/ Directs the request to an alternate origin server by overriding the DNS lookup. The value of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61598,"byte_end":61694,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ `resolve_override` specifies an alternate hostname which will be used when determining the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61699,"byte_end":61793,"line_start":129,"line_end":129,"column_start":5,"column_end":99}},{"value":"/ origin IP address, instead of using the hostname specified in the URL. The Host header of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61798,"byte_end":61891,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/ the request will still match what is in the URL. Thus, `resolve_override` allows a request  ","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61896,"byte_end":61992,"line_start":131,"line_end":131,"column_start":5,"column_end":101}},{"value":"/ to be sent to a different server than the URL / Host header specifies. However,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":61997,"byte_end":62080,"line_start":132,"line_end":132,"column_start":5,"column_end":88}},{"value":"/ `resolve_override` will only take effect if both the URL host and the host specified by","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62085,"byte_end":62176,"line_start":133,"line_end":133,"column_start":5,"column_end":96}},{"value":"/ `resolve_override` are within your zone. If either specifies a host from a different zone /","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62181,"byte_end":62276,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/ domain, then the option will be ignored for security reasons. If you need to direct a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62281,"byte_end":62370,"line_start":135,"line_end":135,"column_start":5,"column_end":94}},{"value":"/ request to a host outside your zone (while keeping the Host header pointing within your","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62375,"byte_end":62466,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/ zone), first create a CNAME record within your zone pointing to the outside host, and then","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62471,"byte_end":62565,"line_start":137,"line_end":137,"column_start":5,"column_end":99}},{"value":"/ set `resolve_override` to point at the CNAME record.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62570,"byte_end":62626,"line_start":138,"line_end":138,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62631,"byte_end":62634,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that, for security reasons, it is not possible to set the Host header to specify a host","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62639,"byte_end":62735,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ outside of your zone unless the request is actually being sent to that host.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62740,"byte_end":62820,"line_start":141,"line_end":141,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":63003,"byte_end":63016,"line_start":145,"line_end":145,"column_start":9,"column_end":22},"name":"scrape_shield","qualname":"::request_init::CfProperties::scrape_shield","value":"std::option::Option<bool>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Whether ScrapeShield should be enabled for this request, if otherwise configured for this\n zone. Defaults to `true`.\n","sig":null,"attributes":[{"value":"/ Whether ScrapeShield should be enabled for this request, if otherwise configured for this","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62867,"byte_end":62960,"line_start":143,"line_end":143,"column_start":5,"column_end":98}},{"value":"/ zone. Defaults to `true`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":62965,"byte_end":62994,"line_start":144,"line_end":144,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66008,"byte_end":66011,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<CfProperties>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66662,"byte_end":66674,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"MinifyConfig","qualname":"::request_init::MinifyConfig","value":"MinifyConfig { js, html, css }","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":" Configuration options for Cloudflare's minification features:\n <https://www.cloudflare.com/website-optimization/>\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66685,"byte_end":66687,"line_start":281,"line_end":281,"column_start":9,"column_end":11},"name":"js","qualname":"::request_init::MinifyConfig::js","value":"bool","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1329},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66703,"byte_end":66707,"line_start":282,"line_end":282,"column_start":9,"column_end":13},"name":"html","qualname":"::request_init::MinifyConfig::html","value":"bool","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1330},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66723,"byte_end":66726,"line_start":283,"line_end":283,"column_start":9,"column_end":12},"name":"css","qualname":"::request_init::MinifyConfig::css","value":"bool","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1350},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66956,"byte_end":66959,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"Off","qualname":"::request_init::PolishConfig::Off","value":"PolishConfig::Off","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66965,"byte_end":66970,"line_start":292,"line_end":292,"column_start":5,"column_end":10},"name":"Lossy","qualname":"::request_init::PolishConfig::Lossy","value":"PolishConfig::Lossy","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66976,"byte_end":66984,"line_start":293,"line_end":293,"column_start":5,"column_end":13},"name":"Lossless","qualname":"::request_init::PolishConfig::Lossless","value":"PolishConfig::Lossless","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1349},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66937,"byte_end":66949,"line_start":290,"line_end":290,"column_start":10,"column_end":22},"name":"PolishConfig","qualname":"::request_init::PolishConfig","value":"pub enum PolishConfig { Off, Lossy, Lossless, }","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354}],"decl_id":null,"docs":" Configuration options for Cloudflare's image optimization feature:\n <https://blog.cloudflare.com/introducing-polish-automatic-image-optimizati/>\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67396,"byte_end":67401,"line_start":315,"line_end":315,"column_start":5,"column_end":10},"name":"Error","qualname":"::request_init::RequestRedirect::Error","value":"RequestRedirect::Error","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1375},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67407,"byte_end":67413,"line_start":316,"line_end":316,"column_start":5,"column_end":11},"name":"Follow","qualname":"::request_init::RequestRedirect::Follow","value":"RequestRedirect::Follow","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67419,"byte_end":67425,"line_start":317,"line_end":317,"column_start":5,"column_end":11},"name":"Manual","qualname":"::request_init::RequestRedirect::Manual","value":"RequestRedirect::Manual","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1372},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67374,"byte_end":67389,"line_start":314,"line_end":314,"column_start":10,"column_end":25},"name":"RequestRedirect","qualname":"::request_init::RequestRedirect","value":"pub enum RequestRedirect { Error, Follow, Manual, }","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68742,"byte_end":68750,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"decl_id":null,"docs":" A [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) representation for\n working with or returning a response to a `Request`.\n","sig":null,"attributes":[{"value":"/ A [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) representation for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68562,"byte_end":68656,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ working with or returning a response to a `Request`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68657,"byte_end":68713,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":69010,"byte_end":69019,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"from_json","qualname":"<Response>::from_json","value":"pub fn from_json<B: Serialize>(&B) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using `B` as the body encoded as JSON. Sets the associated\n `Content-Type` header for the `Response` as `application/json`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using `B` as the body encoded as JSON. Sets the associated","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68844,"byte_end":68926,"line_start":28,"line_end":28,"column_start":5,"column_end":87}},{"value":"/ `Content-Type` header for the `Response` as `application/json`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68931,"byte_end":68998,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":69638,"byte_end":69647,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"from_html","qualname":"<Response>::from_html","value":"pub fn from_html<impl AsRef<str>: AsRef<str>>(impl AsRef<str>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using the body encoded as HTML. Sets the associated `Content-Type`\n header for the `Response` as `text/html`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using the body encoded as HTML. Sets the associated `Content-Type`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":69486,"byte_end":69576,"line_start":45,"line_end":45,"column_start":5,"column_end":95}},{"value":"/ header for the `Response` as `text/html`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":69581,"byte_end":69626,"line_start":46,"line_end":46,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70139,"byte_end":70149,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Response>::from_bytes","value":"pub fn from_bytes(Vec<u8>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using unprocessed bytes provided. Sets the associated `Content-Type`\n header for the `Response` as `application/octet-stream`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using unprocessed bytes provided. Sets the associated `Content-Type`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":69970,"byte_end":70062,"line_start":59,"line_end":59,"column_start":5,"column_end":97}},{"value":"/ header for the `Response` as `application/octet-stream`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70067,"byte_end":70127,"line_start":60,"line_end":60,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70581,"byte_end":70583,"line_start":74,"line_end":74,"column_start":12,"column_end":14},"name":"ok","qualname":"<Response>::ok","value":"pub fn ok<impl Into<String>: Into<String>>(impl Into<String>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using unprocessed text provided. Sets the associated `Content-Type`\n header for the `Response` as `text/plain`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using unprocessed text provided. Sets the associated `Content-Type`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70427,"byte_end":70518,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ header for the `Response` as `text/plain`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70523,"byte_end":70569,"line_start":73,"line_end":73,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70941,"byte_end":70946,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"empty","qualname":"<Response>::empty","value":"pub fn empty() -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Response` with a 200 status code.\n","sig":null,"attributes":[{"value":"/ Create an empty `Response` with a 200 status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":70875,"byte_end":70929,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71286,"byte_end":71291,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"error","qualname":"<Response>::error","value":"pub fn error<impl Into<String>: Into<String>>(impl Into<String>, u16)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to send an error message to a client. Will return `Err` if the status code\n provided is outside the valid HTTP error range of 400-599.\n","sig":null,"attributes":[{"value":"/ A helper method to send an error message to a client. Will return `Err` if the status code","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71113,"byte_end":71207,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ provided is outside the valid HTTP error range of 400-599.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71212,"byte_end":71274,"line_start":95,"line_end":95,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71755,"byte_end":71766,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"status_code","qualname":"<Response>::status_code","value":"pub fn status_code(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP Status code of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP Status code of this `Response`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71695,"byte_end":71743,"line_start":110,"line_end":110,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71882,"byte_end":71886,"line_start":116,"line_end":116,"column_start":18,"column_end":22},"name":"text","qualname":"<Response>::text","value":"pub async fn text<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body as plaintext.\n","sig":null,"attributes":[{"value":"/ Access this response's body as plaintext.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":71819,"byte_end":71864,"line_start":115,"line_end":115,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":72435,"byte_end":72439,"line_start":130,"line_end":130,"column_start":18,"column_end":22},"name":"json","qualname":"<Response>::json","value":"pub async fn json<B: DeserializeOwned, '_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body encoded as JSON.\n","sig":null,"attributes":[{"value":"/ Access this response's body encoded as JSON.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":72369,"byte_end":72417,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":72832,"byte_end":72837,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Response>::bytes","value":"pub async fn bytes<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body encoded as raw bytes.\n","sig":null,"attributes":[{"value":"/ Access this response's body encoded as raw bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":72761,"byte_end":72814,"line_start":138,"line_end":138,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73286,"byte_end":73298,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"with_headers","qualname":"<Response>::with_headers","value":"pub fn with_headers(Self, Headers) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set this response's `Headers`.\n","sig":null,"attributes":[{"value":"/ Set this response's `Headers`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73240,"byte_end":73274,"line_start":150,"line_end":150,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73642,"byte_end":73653,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"with_status","qualname":"<Response>::with_status","value":"pub fn with_status(Self, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set this response's status code.\n The Workers platform will reject HTTP status codes outside the range of 200..599 inclusive,\n and will throw a JavaScript `RangeError`, returning a response with an HTTP 500 status code.\n","sig":null,"attributes":[{"value":"/ Set this response's status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73393,"byte_end":73429,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ The Workers platform will reject HTTP status codes outside the range of 200..599 inclusive,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73434,"byte_end":73529,"line_start":157,"line_end":157,"column_start":5,"column_end":100}},{"value":"/ and will throw a JavaScript `RangeError`, returning a response with an HTTP 500 status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73534,"byte_end":73630,"line_start":158,"line_end":158,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73808,"byte_end":73815,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Read the `Headers` on this response.\n","sig":null,"attributes":[{"value":"/ Read the `Headers` on this response.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73756,"byte_end":73796,"line_start":164,"line_end":164,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73944,"byte_end":73955,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut Headers","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` on this response.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` on this response.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":73870,"byte_end":73932,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74236,"byte_end":74248,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"ResponseInit","qualname":"::response::ResponseInit","value":"ResponseInit { status, headers }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74259,"byte_end":74265,"line_start":183,"line_end":183,"column_start":9,"column_end":15},"name":"status","qualname":"::response::ResponseInit::status","value":"u16","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74280,"byte_end":74287,"line_start":184,"line_end":184,"column_start":9,"column_end":16},"name":"headers","qualname":"::response::ResponseInit::headers","value":"headers::Headers","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76329,"byte_end":76340,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"RouteParams","qualname":"::router::RouteParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the URL parameters parsed from the path, e.g. a route with \"/user/:id\" pattern would\n contain a single \"id\" key.\n","sig":null,"attributes":[{"value":"/ Represents the URL parameters parsed from the path, e.g. a route with \"/user/:id\" pattern would","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76187,"byte_end":76286,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ contain a single \"id\" key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76287,"byte_end":76317,"line_start":22,"line_end":22,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76870,"byte_end":76876,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"Router","qualname":"::router::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"decl_id":null,"docs":" A path-based HTTP router supporting exact-match or wildcard placeholders and shared data.\n","sig":null,"attributes":[{"value":"/ A path-based HTTP router supporting exact-match or wildcard placeholders and shared data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76765,"byte_end":76858,"line_start":45,"line_end":45,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":897},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77173,"byte_end":77185,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"RouteContext","qualname":"::router::RouteContext","value":"RouteContext {  }","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" Container for a route's parsed parameters, data, and environment bindings from the Runtime (such\n as KV Stores, Durable Objects, Variables, and Secrets).\n","sig":null,"attributes":[{"value":"/ Container for a route's parsed parameters, data, and environment bindings from the Runtime (such","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77001,"byte_end":77101,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/ as KV Stores, Durable Objects, Variables, and Secrets).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77102,"byte_end":77161,"line_start":53,"line_end":53,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77364,"byte_end":77368,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"data","qualname":"<RouteContext<D>>::data","value":"pub fn data(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the generic associated data provided to the `Router`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the generic associated data provided to the `Router`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77276,"byte_end":77352,"line_start":61,"line_end":61,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77585,"byte_end":77592,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_env","qualname":"<RouteContext<D>>::get_env","value":"pub fn get_env(Self) -> Env","parent":null,"children":[],"decl_id":null,"docs":" Get the `Env` for this Worker. Typically users should opt for the `secret`, `var`, `kv` and\n `durable_object` methods on the `RouteContext` instead.\n","sig":null,"attributes":[{"value":"/ Get the `Env` for this Worker. Typically users should opt for the `secret`, `var`, `kv` and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77414,"byte_end":77509,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ `durable_object` methods on the `RouteContext` instead.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77514,"byte_end":77573,"line_start":67,"line_end":67,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77717,"byte_end":77723,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"secret","qualname":"<RouteContext<D>>::secret","value":"pub fn secret(&Self, &str) -> Result<Secret>","parent":null,"children":[],"decl_id":null,"docs":" Get a Secret value associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a Secret value associated with this Worker, should one exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77636,"byte_end":77705,"line_start":72,"line_end":72,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77906,"byte_end":77909,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"var","qualname":"<RouteContext<D>>::var","value":"pub fn var(&Self, &str) -> Result<Var>","parent":null,"children":[],"decl_id":null,"docs":" Get an Environment Variable value associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get an Environment Variable value associated with this Worker, should one exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77810,"byte_end":77894,"line_start":77,"line_end":77,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78071,"byte_end":78073,"line_start":83,"line_end":83,"column_start":12,"column_end":14},"name":"kv","qualname":"<RouteContext<D>>::kv","value":"pub fn kv(&Self, &str) -> Result<KvStore>","parent":null,"children":[],"decl_id":null,"docs":" Get a KV Namespace associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a KV Namespace associated with this Worker, should one exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77990,"byte_end":78059,"line_start":82,"line_end":82,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78288,"byte_end":78302,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"durable_object","qualname":"<RouteContext<D>>::durable_object","value":"pub fn durable_object(&Self, &str) -> Result<ObjectNamespace>","parent":null,"children":[],"decl_id":null,"docs":" Get a Durable Object Namespace associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a Durable Object Namespace associated with this Worker, should one exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78195,"byte_end":78276,"line_start":87,"line_end":87,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78514,"byte_end":78519,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"param","qualname":"<RouteContext<D>>::param","value":"pub fn param(&Self, &str) -> Option<&String>","parent":null,"children":[],"decl_id":null,"docs":" Get a URL parameter parsed by the router, by the name of its match or wildecard placeholder.\n","sig":null,"attributes":[{"value":"/ Get a URL parameter parsed by the router, by the name of its match or wildecard placeholder.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78406,"byte_end":78502,"line_start":92,"line_end":92,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78777,"byte_end":78780,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Router>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Router`. Or, call `Router::with_data(D)` to add arbitrary data that will be\n available to your various routes.\n","sig":null,"attributes":[{"value":"/ Construct a new `Router`. Or, call `Router::with_data(D)` to add arbitrary data that will be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78627,"byte_end":78723,"line_start":99,"line_end":99,"column_start":5,"column_end":101}},{"value":"/ available to your various routes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78728,"byte_end":78765,"line_start":100,"line_end":100,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78973,"byte_end":78982,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"with_data","qualname":"<Router>::with_data","value":"pub fn with_data(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Router` with arbitrary data that will be available to your various routes.\n","sig":null,"attributes":[{"value":"/ Construct a new `Router` with arbitrary data that will be available to your various routes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78866,"byte_end":78961,"line_start":107,"line_end":107,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79227,"byte_end":79231,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"head","qualname":"<Router>::head","value":"pub fn head(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to HEAD requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to HEAD requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79139,"byte_end":79215,"line_start":116,"line_end":116,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79474,"byte_end":79477,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<Router>::get","value":"pub fn get(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to GET requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to GET requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79387,"byte_end":79462,"line_start":122,"line_end":122,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79720,"byte_end":79724,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"post","qualname":"<Router>::post","value":"pub fn post(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to POST requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to POST requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79632,"byte_end":79708,"line_start":128,"line_end":128,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79967,"byte_end":79970,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"put","qualname":"<Router>::put","value":"pub fn put(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PUT requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PUT requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":79880,"byte_end":79955,"line_start":134,"line_end":134,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80214,"byte_end":80219,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"patch","qualname":"<Router>::patch","value":"pub fn patch(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PATCH requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PATCH requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80125,"byte_end":80202,"line_start":140,"line_end":140,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80466,"byte_end":80472,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"delete","qualname":"<Router>::delete","value":"pub fn delete(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to DELETE requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to DELETE requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80376,"byte_end":80454,"line_start":146,"line_end":146,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80721,"byte_end":80728,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"options","qualname":"<Router>::options","value":"pub fn options(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to OPTIONS requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to OPTIONS requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80630,"byte_end":80709,"line_start":152,"line_end":152,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80962,"byte_end":80964,"line_start":159,"line_end":159,"column_start":12,"column_end":14},"name":"on","qualname":"<Router>::on","value":"pub fn on(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to any requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to any requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":80887,"byte_end":80950,"line_start":158,"line_end":158,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81247,"byte_end":81265,"line_start":166,"line_end":166,"column_start":12,"column_end":30},"name":"or_else_any_method","qualname":"<Router>::or_else_any_method","value":"pub fn or_else_any_method(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to all methods that are not handled explicitly by\n other handlers.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to all methods that are not handled explicitly by","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81115,"byte_end":81211,"line_start":164,"line_end":164,"column_start":5,"column_end":101}},{"value":"/ other handlers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81216,"byte_end":81235,"line_start":165,"line_end":165,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81680,"byte_end":81690,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"head_async","qualname":"<Router>::head_async","value":"pub fn head_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to HEAD requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to HEAD requests. Enables the use of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81527,"byte_end":81622,"line_start":173,"line_end":173,"column_start":5,"column_end":100}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":81627,"byte_end":81668,"line_start":174,"line_end":174,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82182,"byte_end":82191,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"get_async","qualname":"<Router>::get_async","value":"pub fn get_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to GET requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to GET requests. Enables the use of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82030,"byte_end":82124,"line_start":187,"line_end":187,"column_start":5,"column_end":99}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82129,"byte_end":82170,"line_start":188,"line_end":188,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82683,"byte_end":82693,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"post_async","qualname":"<Router>::post_async","value":"pub fn post_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to POST requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to POST requests. Enables the use of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82530,"byte_end":82625,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":82630,"byte_end":82671,"line_start":202,"line_end":202,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83185,"byte_end":83194,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"put_async","qualname":"<Router>::put_async","value":"pub fn put_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PUT requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PUT requests. Enables the use of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83033,"byte_end":83127,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83132,"byte_end":83173,"line_start":216,"line_end":216,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83687,"byte_end":83698,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"patch_async","qualname":"<Router>::patch_async","value":"pub fn patch_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PATCH requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PATCH requests. Enables the use of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83533,"byte_end":83629,"line_start":229,"line_end":229,"column_start":5,"column_end":101}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":83634,"byte_end":83675,"line_start":230,"line_end":230,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84194,"byte_end":84206,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"delete_async","qualname":"<Router>::delete_async","value":"pub fn delete_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to DELETE requests. Enables the use\n of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to DELETE requests. Enables the use","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84039,"byte_end":84133,"line_start":243,"line_end":243,"column_start":5,"column_end":99}},{"value":"/ of `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84138,"byte_end":84182,"line_start":244,"line_end":244,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84704,"byte_end":84717,"line_start":259,"line_end":259,"column_start":12,"column_end":25},"name":"options_async","qualname":"<Router>::options_async","value":"pub fn options_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to OPTIONS requests. Enables the use\n of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to OPTIONS requests. Enables the use","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84548,"byte_end":84643,"line_start":257,"line_end":257,"column_start":5,"column_end":100}},{"value":"/ of `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":84648,"byte_end":84692,"line_start":258,"line_end":258,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85231,"byte_end":85239,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"on_async","qualname":"<Router>::on_async","value":"pub fn on_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to any requests. Enables the use of `async/await`\n syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to any requests. Enables the use of `async/await`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85091,"byte_end":85187,"line_start":275,"line_end":275,"column_start":5,"column_end":101}},{"value":"/ syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85192,"byte_end":85219,"line_start":276,"line_end":276,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85765,"byte_end":85789,"line_start":291,"line_end":291,"column_start":12,"column_end":36},"name":"or_else_any_method_async","qualname":"<Router>::or_else_any_method_async","value":"pub fn or_else_any_method_async<T>(Self, &str,\n                                   fn(: Request, : RouteContext<D>) -> T)\n-> Self where T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to all methods that are not handled explicitly by\n other handlers. Enables the use of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to all methods that are not handled explicitly by","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85576,"byte_end":85672,"line_start":289,"line_end":289,"column_start":5,"column_end":101}},{"value":"/ other handlers. Enables the use of `async/await` syntax in the callback.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":85677,"byte_end":85753,"line_start":290,"line_end":290,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":86878,"byte_end":86881,"line_start":324,"line_end":324,"column_start":18,"column_end":21},"name":"run","qualname":"<Router>::run","value":"pub async fn run(Self, Request, Env) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Handle the request provided to the `Router` and return a `Future`.\n","sig":null,"attributes":[{"value":"/ Handle the request provided to the `Router` and return a `Future`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":86790,"byte_end":86860,"line_start":323,"line_end":323,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":973},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":225,"byte_end":231,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"StdResult<T, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1375,"byte_end":1377,"line_start":12,"line_end":12,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6633,"byte_end":6635,"line_start":161,"line_end":161,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6843,"byte_end":6856,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":8021,"byte_end":8034,"line_start":223,"line_end":223,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8889,"byte_end":8893,"line_start":28,"line_end":28,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8972,"byte_end":8976,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9676,"byte_end":9680,"line_start":60,"line_end":60,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11155,"byte_end":11159,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12177,"byte_end":12192,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15260,"byte_end":15268,"line_start":142,"line_end":142,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15725,"byte_end":15733,"line_start":156,"line_end":156,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16002,"byte_end":16007,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16834,"byte_end":16839,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17204,"byte_end":17211,"line_start":205,"line_end":205,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":22892,"byte_end":22903,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27100,"byte_end":27111,"line_start":463,"line_end":463,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28323,"byte_end":28338,"line_start":508,"line_end":508,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28422,"byte_end":28437,"line_start":512,"line_end":512,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28788,"byte_end":28795,"line_start":526,"line_end":526,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28906,"byte_end":28921,"line_start":532,"line_end":532,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30397,"byte_end":30400,"line_start":15,"line_end":15,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32551,"byte_end":32564,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32632,"byte_end":32645,"line_start":74,"line_end":74,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32953,"byte_end":32966,"line_start":88,"line_end":88,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33099,"byte_end":33112,"line_start":94,"line_end":94,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33216,"byte_end":33223,"line_start":100,"line_end":100,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33309,"byte_end":33322,"line_start":106,"line_end":106,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34098,"byte_end":34103,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34247,"byte_end":34252,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34372,"byte_end":34377,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35239,"byte_end":35244,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35272,"byte_end":35277,"line_start":50,"line_end":50,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35569,"byte_end":35576,"line_start":62,"line_end":62,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35682,"byte_end":35687,"line_start":68,"line_end":68,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35792,"byte_end":35797,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35906,"byte_end":35911,"line_start":80,"line_end":80,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":36038,"byte_end":36043,"line_start":86,"line_end":86,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36781,"byte_end":36789,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39018,"byte_end":39026,"line_start":97,"line_end":97,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39162,"byte_end":39170,"line_start":103,"line_end":103,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39619,"byte_end":39623,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40734,"byte_end":40738,"line_start":154,"line_end":154,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41217,"byte_end":41222,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42647,"byte_end":42654,"line_start":18,"line_end":18,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42950,"byte_end":42957,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":46716,"byte_end":46723,"line_start":117,"line_end":117,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47042,"byte_end":47049,"line_start":127,"line_end":127,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47343,"byte_end":47350,"line_start":137,"line_end":137,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47439,"byte_end":47446,"line_start":143,"line_end":143,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47771,"byte_end":47778,"line_start":155,"line_end":155,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47874,"byte_end":47883,"line_start":161,"line_end":161,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":48227,"byte_end":48236,"line_start":175,"line_end":175,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":48329,"byte_end":48336,"line_start":181,"line_end":181,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48796,"byte_end":48802,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":49136,"byte_end":49142,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":49603,"byte_end":49609,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":50065,"byte_end":50071,"line_start":65,"line_end":65,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":50167,"byte_end":50173,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":50849,"byte_end":50856,"line_start":21,"line_end":21,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":51469,"byte_end":51476,"line_start":43,"line_end":43,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":651},{"krate":0,"index":658},{"krate":0,"index":664},{"krate":0,"index":670},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57535,"byte_end":57546,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":58257,"byte_end":58268,"line_start":57,"line_end":57,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59048,"byte_end":59059,"line_start":84,"line_end":84,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":63064,"byte_end":63071,"line_start":148,"line_end":148,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":65982,"byte_end":65994,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66077,"byte_end":66089,"line_start":259,"line_end":259,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67006,"byte_end":67018,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67447,"byte_end":67462,"line_start":320,"line_end":320,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67852,"byte_end":67867,"line_start":336,"line_end":336,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68829,"byte_end":68837,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":798},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74329,"byte_end":74345,"line_start":187,"line_end":187,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74577,"byte_end":74589,"line_start":196,"line_end":196,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":75378,"byte_end":75386,"line_start":222,"line_end":222,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76373,"byte_end":76384,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76571,"byte_end":76578,"line_start":36,"line_end":36,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77254,"byte_end":77266,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78606,"byte_end":78612,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78846,"byte_end":78852,"line_start":106,"line_end":106,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":88494,"byte_end":88500,"line_start":370,"line_end":370,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":88759,"byte_end":88770,"line_start":382,"line_end":382,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/lib.rs","byte_start":26,"byte_end":33,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":62}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":1375,"byte_end":1377,"line_start":12,"line_end":12,"column_start":6,"column_end":8},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6633,"byte_end":6635,"line_start":161,"line_end":161,"column_start":22,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":6843,"byte_end":6856,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/cf.rs","byte_start":8021,"byte_end":8034,"line_start":223,"line_end":223,"column_start":33,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8889,"byte_end":8893,"line_start":28,"line_end":28,"column_start":25,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":8972,"byte_end":8976,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/date.rs","byte_start":9676,"byte_end":9680,"line_start":60,"line_end":60,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1062},"to":{"krate":5,"index":5474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":11155,"byte_end":11159,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":12177,"byte_end":12192,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15260,"byte_end":15268,"line_start":142,"line_end":142,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":15725,"byte_end":15733,"line_start":156,"line_end":156,"column_start":19,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":154},"to":{"krate":5,"index":5474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16002,"byte_end":16007,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":16834,"byte_end":16839,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":17204,"byte_end":17211,"line_start":205,"line_end":205,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":22892,"byte_end":22903,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":27100,"byte_end":27111,"line_start":463,"line_end":463,"column_start":10,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28323,"byte_end":28338,"line_start":508,"line_end":508,"column_start":21,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":143},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28422,"byte_end":28437,"line_start":512,"line_end":512,"column_start":17,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":143},"to":{"krate":20,"index":442}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28788,"byte_end":28795,"line_start":526,"line_end":526,"column_start":32,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":20,"index":467},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/durable.rs","byte_start":28906,"byte_end":28921,"line_start":532,"line_end":532,"column_start":25,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":30397,"byte_end":30400,"line_start":15,"line_end":15,"column_start":6,"column_end":9},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32142,"byte_end":32147,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32150,"byte_end":32156,"line_start":55,"line_end":55,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":20,"index":442},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32551,"byte_end":32564,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32632,"byte_end":32645,"line_start":74,"line_end":74,"column_start":17,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":326},"to":{"krate":20,"index":442}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":32953,"byte_end":32966,"line_start":88,"line_end":88,"column_start":25,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33099,"byte_end":33112,"line_start":94,"line_end":94,"column_start":24,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33216,"byte_end":33223,"line_start":100,"line_end":100,"column_start":30,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":20,"index":467},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/env.rs","byte_start":33309,"byte_end":33322,"line_start":106,"line_end":106,"column_start":19,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":326},"to":{"krate":5,"index":5474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34098,"byte_end":34103,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34247,"byte_end":34252,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":34372,"byte_end":34377,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35239,"byte_end":35244,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1177},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35272,"byte_end":35277,"line_start":50,"line_end":50,"column_start":24,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35569,"byte_end":35576,"line_start":62,"line_end":62,"column_start":22,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":20,"index":467},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35682,"byte_end":35687,"line_start":68,"line_end":68,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35792,"byte_end":35797,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":35906,"byte_end":35911,"line_start":80,"line_end":80,"column_start":37,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/error.rs","byte_start":36038,"byte_end":36043,"line_start":86,"line_end":86,"column_start":34,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":36781,"byte_end":36789,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39018,"byte_end":39026,"line_start":97,"line_end":97,"column_start":24,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39162,"byte_end":39170,"line_start":103,"line_end":103,"column_start":60,"column_end":68},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":39619,"byte_end":39623,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/formdata.rs","byte_start":40734,"byte_end":40738,"line_start":154,"line_end":154,"column_start":25,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/global.rs","byte_start":41217,"byte_end":41222,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42647,"byte_end":42654,"line_start":18,"line_end":18,"column_start":26,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":42950,"byte_end":42957,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":46716,"byte_end":46723,"line_start":117,"line_end":117,"column_start":46,"column_end":53},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47042,"byte_end":47049,"line_start":127,"line_end":127,"column_start":54,"column_end":61},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47343,"byte_end":47350,"line_start":137,"line_end":137,"column_start":25,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47439,"byte_end":47446,"line_start":143,"line_end":143,"column_start":27,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47771,"byte_end":47778,"line_start":155,"line_end":155,"column_start":26,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":47874,"byte_end":47883,"line_start":161,"line_end":161,"column_start":25,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":35,"index":2381},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":48227,"byte_end":48236,"line_start":175,"line_end":175,"column_start":24,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":35,"index":2381},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/headers.rs","byte_start":48329,"byte_end":48336,"line_start":181,"line_end":181,"column_start":16,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":48796,"byte_end":48802,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":49136,"byte_end":49142,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":49603,"byte_end":49609,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":7314},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":50065,"byte_end":50071,"line_start":65,"line_end":65,"column_start":19,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1212},"to":{"krate":5,"index":5474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/http.rs","byte_start":50167,"byte_end":50173,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":50849,"byte_end":50856,"line_start":21,"line_end":21,"column_start":28,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request.rs","byte_start":51469,"byte_end":51476,"line_start":43,"line_end":43,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":57535,"byte_end":57546,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":58257,"byte_end":58268,"line_start":57,"line_end":57,"column_start":41,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":19,"index":1932},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":59048,"byte_end":59059,"line_start":84,"line_end":84,"column_start":18,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":63064,"byte_end":63071,"line_start":148,"line_end":148,"column_start":30,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":20,"index":467},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":65982,"byte_end":65994,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":66077,"byte_end":66089,"line_start":259,"line_end":259,"column_start":18,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67006,"byte_end":67018,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1349},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67447,"byte_end":67462,"line_start":320,"line_end":320,"column_start":18,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1372},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/request_init.rs","byte_start":67852,"byte_end":67867,"line_start":336,"line_end":336,"column_start":44,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":19,"index":1964},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":68829,"byte_end":68837,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74329,"byte_end":74345,"line_start":187,"line_end":187,"column_start":29,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":31,"index":1171},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":74577,"byte_end":74589,"line_start":196,"line_end":196,"column_start":25,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":19,"index":2143},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/response.rs","byte_start":75378,"byte_end":75386,"line_start":222,"line_end":222,"column_start":29,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76373,"byte_end":76384,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":76571,"byte_end":76578,"line_start":36,"line_end":36,"column_start":19,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":879},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":77254,"byte_end":77266,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78606,"byte_end":78612,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":78846,"byte_end":78852,"line_start":106,"line_end":106,"column_start":17,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":88494,"byte_end":88500,"line_start":370,"line_end":370,"column_start":17,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.6/src/router.rs","byte_start":88759,"byte_end":88770,"line_start":382,"line_end":382,"column_start":40,"column_end":51},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":2786}}]}