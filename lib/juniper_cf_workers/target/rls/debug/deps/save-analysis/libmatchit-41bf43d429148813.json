{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3","program":"/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","matchit","--edition=2018","/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=41bf43d429148813","-C","extra-filename=-41bf43d429148813","--out-dir","/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","-L","dependency=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libmatchit-41bf43d429148813.rmeta"},"prelude":{"crate_id":{"name":"matchit","disambiguator":[9412627760847422852,0]},"crate_root":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src","external_crates":[{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}}],"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":0,"byte_end":5483,"line_start":1,"line_end":122,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5184,"byte_end":5195,"line_start":108,"line_end":108,"column_start":17,"column_end":28},"alias_span":null,"name":"InsertError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5197,"byte_end":5207,"line_start":108,"line_end":108,"column_start":30,"column_end":40},"alias_span":null,"name":"MatchError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5227,"byte_end":5233,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"alias_span":null,"name":"Params","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5235,"byte_end":5245,"line_start":109,"line_end":109,"column_start":26,"column_end":36},"alias_span":null,"name":"ParamsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5263,"byte_end":5268,"line_start":110,"line_end":110,"column_start":16,"column_end":21},"alias_span":null,"name":"Match","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5270,"byte_end":5274,"line_start":110,"line_end":110,"column_start":23,"column_end":27},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":0,"byte_end":5483,"line_start":1,"line_end":122,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":22},{"krate":0,"index":84},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177}],"decl_id":null,"docs":" # MatchIt","sig":null,"attributes":[{"value":"deny(rust_2018_idioms)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/ # MatchIt","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":27,"byte_end":40,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":41,"byte_end":44,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [![Documentation](https://img.shields.io/badge/docs-0.4.3-4d76ae?style=for-the-badge)](https://docs.rs/matchit)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":45,"byte_end":160,"line_start":4,"line_end":4,"column_start":1,"column_end":116}},{"value":"/ [![Version](https://img.shields.io/crates/v/matchit?style=for-the-badge)](https://crates.io/crates/matchit)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":161,"byte_end":272,"line_start":5,"line_end":5,"column_start":1,"column_end":112}},{"value":"/ [![License](https://img.shields.io/crates/l/matchit?style=for-the-badge)](https://crates.io/crates/matchit)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":273,"byte_end":384,"line_start":6,"line_end":6,"column_start":1,"column_end":112}},{"value":"/ [![Actions](https://img.shields.io/github/workflow/status/ibraheemdev/matchit/Rust/master?style=for-the-badge)](https://github.com/ibraheemdev/matchit/actions)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":385,"byte_end":548,"line_start":7,"line_end":7,"column_start":1,"column_end":164}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":549,"byte_end":552,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A blazing fast URL router and path matcher.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":553,"byte_end":600,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":601,"byte_end":604,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":605,"byte_end":616,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use matchit::Node;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":617,"byte_end":639,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":640,"byte_end":643,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":644,"byte_end":701,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/     let mut matcher = Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":702,"byte_end":740,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/     matcher.insert(\"/home\", \"Welcome!\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":741,"byte_end":786,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/     matcher.insert(\"/users/:id\", \"A User\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":787,"byte_end":835,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":836,"byte_end":839,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     let matched = matcher.at(\"/users/978\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":840,"byte_end":888,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(matched.params.get(\"id\"), Some(\"978\"));","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":889,"byte_end":947,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/     assert_eq!(*matched.value, \"A User\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":948,"byte_end":993,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":994,"byte_end":997,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":998,"byte_end":1012,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1013,"byte_end":1018,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1019,"byte_end":1026,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1027,"byte_end":1030,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `matchit` relies on a tree structure which makes heavy use of *common prefixes*, effectively a [radix tree](https://en.wikipedia.org/wiki/Radix_tree). This makes lookups extremely fast. [See below for technical details](#how-does-it-work).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1031,"byte_end":1274,"line_start":27,"line_end":27,"column_start":1,"column_end":244}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1275,"byte_end":1278,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The tree is optimized for high performance and a small memory footprint. It scales well even with very long paths and a large number of routes. A compressing dynamic trie (radix tree) structure is used for efficient matching.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1279,"byte_end":1508,"line_start":29,"line_end":29,"column_start":1,"column_end":230}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ### Parameters","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1513,"byte_end":1531,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1532,"byte_end":1535,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ As you can see, `:id` is a *named parameter*. The values are accessible via [`Params`](https://docs.rs/matchit/0.2.0/matchit/tree/struct.Params.html), which stores a list of keys and values. You can get the value of a parameter by name, `params.get(\"id\")`, or by iterating through the list.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1536,"byte_end":1830,"line_start":33,"line_end":33,"column_start":1,"column_end":295}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1831,"byte_end":1834,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The registered path can contain two types of parameters:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1835,"byte_end":1895,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1896,"byte_end":1899,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1900,"byte_end":1911,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ Syntax    Type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1912,"byte_end":1930,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ :name     named parameter","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1931,"byte_end":1960,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ *name     catch-all parameter","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1961,"byte_end":1994,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":1995,"byte_end":2002,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2003,"byte_end":2006,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ### Named Parameters","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2007,"byte_end":2031,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2032,"byte_end":2035,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Named parameters are dynamic path segments. They match anything until the next `/` or the path end:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2036,"byte_end":2139,"line_start":45,"line_end":45,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ Pattern: /user/:user","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2156,"byte_end":2180,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2181,"byte_end":2184,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/  /user/gordon              match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2185,"byte_end":2221,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/  /user/you                 match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2222,"byte_end":2258,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/  /user/gordon/profile      no match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2259,"byte_end":2298,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/  /user/                    no match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2299,"byte_end":2338,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2339,"byte_end":2346,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2347,"byte_end":2350,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note:** Since the tree only supports explicit matches, you can not register static routes and parameters for the same path segment. For example you can not register the patterns `/user/new` and `/user/:user` at the same time. This is a limitation that will be addressed in the future.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2351,"byte_end":2641,"line_start":56,"line_end":56,"column_start":1,"column_end":291}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2642,"byte_end":2645,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Catch-All parameters","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2646,"byte_end":2674,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2675,"byte_end":2678,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The second type are *catch-all* parameters and have the form `*name`. Like the name suggests, they match everything. Therefore they must always be at the **end** of the pattern:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2679,"byte_end":2860,"line_start":60,"line_end":60,"column_start":1,"column_end":182}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2861,"byte_end":2864,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2865,"byte_end":2876,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ Pattern: /src/*filepath","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2877,"byte_end":2904,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/  /src/                     match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2909,"byte_end":2945,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/  /src/somefile.go          match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2946,"byte_end":2982,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/  /src/subdir/somefile.go   match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":2983,"byte_end":3019,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3020,"byte_end":3027,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3028,"byte_end":3031,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## How does it work?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3032,"byte_end":3056,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3057,"byte_end":3060,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The matcher relies on a tree structure which makes heavy use of *common prefixes*, it is basically a *compact* [*prefix tree*](https://en.wikipedia.org/wiki/Trie) (or [*Radix tree*](https://en.wikipedia.org/wiki/Radix_tree)). Nodes with a common prefix share a parent. Here is a short example what the routing tree for the `GET` request method could look like:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3061,"byte_end":3425,"line_start":72,"line_end":72,"column_start":1,"column_end":365}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3426,"byte_end":3429,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3430,"byte_end":3441,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ Priority   Path             Handle","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3442,"byte_end":3480,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/ 9          \\                *<1>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3481,"byte_end":3517,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ 3          ├s               None","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3518,"byte_end":3556,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ 2          |├earch\\         *<2>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3557,"byte_end":3595,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ 1          |└upport\\        *<3>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3596,"byte_end":3634,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ 2          ├blog\\           *<4>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3635,"byte_end":3673,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ 1          |    └:post      None","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3674,"byte_end":3712,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ 1          |         └\\     *<5>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3713,"byte_end":3751,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ 2          ├about-us\\       *<6>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3752,"byte_end":3790,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/ 1          |        └team\\  *<7>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3791,"byte_end":3829,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ 1          └contact\\        *<8>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3830,"byte_end":3868,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3869,"byte_end":3876,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3877,"byte_end":3880,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Every `*<num>` represents the memory address of a handler function (a pointer). If you follow a path trough the tree from the root to the leaf, you get the complete route path, e.g `/blog/:post`, where `:post` is just a placeholder ([*parameter*](#named-parameters)) for an actual post name. Unlike hash-maps, a tree structure also allows us to use dynamic parts like the `:post` parameter, since we actually match against the routing patterns instead of just comparing hashes. This works very efficiently.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":3881,"byte_end":4391,"line_start":88,"line_end":88,"column_start":1,"column_end":511}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":4392,"byte_end":4395,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Because URL paths have a hierarchical structure and make use only of a limited set of characters (byte values), it is very likely that there are a lot of common prefixes. Storing the routes in this structure allows us to easily reduce the routing into a very small number of branches.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":4396,"byte_end":4684,"line_start":90,"line_end":90,"column_start":1,"column_end":289}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":4685,"byte_end":4688,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ For even better scalability, the child nodes on each tree level are ordered by priority, where the priority is just the number of handles registered in child nodes. This means that nodes that are part of the most routing paths are always evaluated first, increasing the chance of reaching the correct route on our first try.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":4689,"byte_end":5017,"line_start":92,"line_end":92,"column_start":1,"column_end":329}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5018,"byte_end":5021,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```test","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5022,"byte_end":5033,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ ├------------","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5034,"byte_end":5053,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"/ ├---------","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5054,"byte_end":5070,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ ├-----","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5071,"byte_end":5083,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/ ├----","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5084,"byte_end":5095,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/ ├--","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5096,"byte_end":5105,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ├--","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5106,"byte_end":5115,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ └-","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5116,"byte_end":5124,"line_start":101,"line_end":101,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/lib.rs","byte_start":5125,"byte_end":5132,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6040,"byte_end":6048,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Conflict","qualname":"::error::InsertError::Conflict","value":"InsertError::Conflict { with }","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" The inserted path conflicts with an existing route.","sig":null,"attributes":[{"value":"/ The inserted path conflicts with an existing route.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5686,"byte_end":5741,"line_start":8,"line_end":8,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5746,"byte_end":5749,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ This error may unexpectedly come up when registering routes like the following:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5754,"byte_end":5837,"line_start":10,"line_end":10,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5842,"byte_end":5845,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5850,"byte_end":5861,"line_start":12,"line_end":12,"column_start":5,"column_end":16}},{"value":"/ /user/:id","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5866,"byte_end":5879,"line_start":13,"line_end":13,"column_start":5,"column_end":18}},{"value":"/ /user/get","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5884,"byte_end":5897,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5902,"byte_end":5909,"line_start":15,"line_end":15,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5914,"byte_end":5917,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This is due to the strict requirements of the internal radix tree,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5922,"byte_end":5992,"line_start":17,"line_end":17,"column_start":5,"column_end":75}},{"value":"/ and should be fixed in the future.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5997,"byte_end":6035,"line_start":18,"line_end":18,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6211,"byte_end":6224,"line_start":24,"line_end":24,"column_start":5,"column_end":18},"name":"TooManyParams","qualname":"::error::InsertError::TooManyParams","value":"InsertError::TooManyParams","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Only one parameter per path segment is allowed.\n","sig":null,"attributes":[{"value":"/ Only one parameter per path segment is allowed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6155,"byte_end":6206,"line_start":23,"line_end":23,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6281,"byte_end":6293,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"UnnamedParam","qualname":"::error::InsertError::UnnamedParam","value":"InsertError::UnnamedParam","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Parameters must be registered with a name.\n","sig":null,"attributes":[{"value":"/ Parameters must be registered with a name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6230,"byte_end":6276,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6367,"byte_end":6382,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"InvalidCatchAll","qualname":"::error::InsertError::InvalidCatchAll","value":"InsertError::InvalidCatchAll","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Catch-all parameters are only allowed at the end of a path.\n","sig":null,"attributes":[{"value":"/ Catch-all parameters are only allowed at the end of a path.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6299,"byte_end":6362,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6433,"byte_end":6446,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"MalformedPath","qualname":"::error::InsertError::MalformedPath","value":"InsertError::MalformedPath","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Invalid tokens in the inserted path.\n","sig":null,"attributes":[{"value":"/ Invalid tokens in the inserted path.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6388,"byte_end":6428,"line_start":29,"line_end":29,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":180},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5668,"byte_end":5679,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"InsertError","qualname":"::error::InsertError","value":"pub enum InsertError {\n    Conflict {\n        with: String,\n    },\n    TooManyParams,\n    UnnamedParam,\n    InvalidCatchAll,\n    MalformedPath,\n}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189}],"decl_id":null,"docs":" Represents errors that can occur when inserting a new route.\n","sig":null,"attributes":[{"value":"/ Represents errors that can occur when inserting a new route.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5514,"byte_end":5578,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":5579,"byte_end":5596,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8070,"byte_end":8080,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"MatchError","qualname":"::error::MatchError","value":"MatchError {  }","parent":null,"children":[{"krate":0,"index":210}],"decl_id":null,"docs":" A failed match attempt, with trailing slash redirect information.\n","sig":null,"attributes":[{"value":"/ A failed match attempt, with trailing slash redirect information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":7944,"byte_end":8013,"line_start":73,"line_end":73,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8970,"byte_end":8973,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"tsr","qualname":"<MatchError>::tsr","value":"pub fn tsr(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a route exists at the same path with/without a trailing slash.\n ```rust\n # use matchit::Node;","sig":null,"attributes":[{"value":"/ Indicates whether a route exists at the same path with/without a trailing slash.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8123,"byte_end":8207,"line_start":80,"line_end":80,"column_start":5,"column_end":89}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8212,"byte_end":8223,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use matchit::Node;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8228,"byte_end":8252,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8257,"byte_end":8260,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8265,"byte_end":8324,"line_start":84,"line_end":84,"column_start":5,"column_end":64}},{"value":"/ let mut matcher = Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8329,"byte_end":8363,"line_start":85,"line_end":85,"column_start":5,"column_end":39}},{"value":"/ matcher.insert(\"/home\", \"Welcome!\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8368,"byte_end":8409,"line_start":86,"line_end":86,"column_start":5,"column_end":46}},{"value":"/ matcher.insert(\"/blog/\", \"Our blog.\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8414,"byte_end":8457,"line_start":87,"line_end":87,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8462,"byte_end":8465,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // a route exists without the trailing slash","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8470,"byte_end":8518,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ if let Err(err) = matcher.at(\"/home/\") {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8523,"byte_end":8567,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/     assert!(err.tsr());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8572,"byte_end":8599,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8604,"byte_end":8609,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8614,"byte_end":8617,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // a route exists with a trailing slash","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8622,"byte_end":8665,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ if let Err(err) = matcher.at(\"/blog\") {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8670,"byte_end":8713,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/     assert!(err.tsr());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8718,"byte_end":8745,"line_start":96,"line_end":96,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8750,"byte_end":8755,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8760,"byte_end":8763,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // no routes match, with or without a trailing slash","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8768,"byte_end":8824,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/ if let Err(err) = matcher.at(\"/foobar\") {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8829,"byte_end":8874,"line_start":100,"line_end":100,"column_start":5,"column_end":50}},{"value":"/     assert!(!err.tsr());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8879,"byte_end":8907,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8912,"byte_end":8917,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8922,"byte_end":8934,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8939,"byte_end":8946,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8951,"byte_end":8958,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10467,"byte_end":10473,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Params","qualname":"::params::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":269}],"decl_id":null,"docs":" A list of parameters returned by a route match.","sig":null,"attributes":[{"value":"/ A list of parameters returned by a route match.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9830,"byte_end":9881,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9882,"byte_end":9885,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9886,"byte_end":9897,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9898,"byte_end":9957,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ # let mut matcher = matchit::Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9958,"byte_end":10003,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ # matcher.insert(\"/users/:id\", true).unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10004,"byte_end":10054,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ let matched = matcher.at(\"/users/1\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10055,"byte_end":10097,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10098,"byte_end":10101,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // you can iterate through the keys and values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10102,"byte_end":10152,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/ for (key, value) in matched.params.iter() {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10153,"byte_end":10200,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     println!(\"key: {}, value: {}\", key, value);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10201,"byte_end":10252,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10253,"byte_end":10258,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10259,"byte_end":10262,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // or get a specific value by key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10263,"byte_end":10300,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ let id = matched.params.get(\"id\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10301,"byte_end":10339,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(id, Some(\"1\"));","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10340,"byte_end":10370,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10371,"byte_end":10383,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10384,"byte_end":10391,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10392,"byte_end":10399,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":11027,"byte_end":11030,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"get","qualname":"<Params>::get","value":"pub fn get<impl AsRef<str>: AsRef<str>>(&Self, impl AsRef<str>)\n-> Option<&'v str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the first parameter registered under the given key.\n","sig":null,"attributes":[{"value":"/ Returns the value of the first parameter registered under the given key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10939,"byte_end":11015,"line_start":63,"line_end":63,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":11634,"byte_end":11638,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"iter","qualname":"<Params>::iter","value":"pub fn iter(&Self) -> ParamsIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the parameters in the list.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the parameters in the list.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":11566,"byte_end":11622,"line_start":79,"line_end":79,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":11785,"byte_end":11793,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Params>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no parameters in the list.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are no parameters in the list.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":11715,"byte_end":11773,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":13070,"byte_end":13080,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"ParamsIter","qualname":"::params::ParamsIter","value":"ParamsIter {  }","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" An iterator over the keys and values of a route's [parameters](crate::Params).\n","sig":null,"attributes":[{"value":"/ An iterator over the keys and values of a route's [parameters](crate::Params).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":12976,"byte_end":13058,"line_start":121,"line_end":121,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15792,"byte_end":15797,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Match","qualname":"::tree::Match","value":"Match { value, params }","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"decl_id":null,"docs":" A successful match consisting of the registered value and the URL parameters, returned by\n [`Node::at`](crate::Node::at).\n","sig":null,"attributes":[{"value":"/ A successful match consisting of the registered value and the URL parameters, returned by","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15635,"byte_end":15728,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ [`Node::at`](crate::Node::at).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15729,"byte_end":15763,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":350},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15868,"byte_end":15873,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"value","qualname":"::tree::Match::value","value":"V","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":" The value stored under the matched node.\n","sig":null,"attributes":[{"value":"/ The value stored under the matched node.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15815,"byte_end":15859,"line_start":12,"line_end":12,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":351},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15969,"byte_end":15975,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"params","qualname":"::tree::Match::params","value":"params::Params<'k, 'v>","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":" The route parameters. See [parameters](crate#parameters) for more details.\n","sig":null,"attributes":[{"value":"/ The route parameters. See [parameters](crate#parameters) for more details.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":15882,"byte_end":15960,"line_start":14,"line_end":14,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16475,"byte_end":16479,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Node","qualname":"::tree::Node","value":"Node {  }","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" A node in a radix tree ordered by priority.","sig":null,"attributes":[{"value":"/ A node in a radix tree ordered by priority.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16302,"byte_end":16349,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16350,"byte_end":16353,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Priority is just the number of values registered in sub nodes","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16354,"byte_end":16419,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ (children, grandchildren, and so on..).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16420,"byte_end":16463,"line_start":34,"line_end":34,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17839,"byte_end":17842,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Node<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Node`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Node`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17800,"byte_end":17827,"line_start":86,"line_end":86,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18240,"byte_end":18246,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"insert","qualname":"<Node<T>>::insert","value":"pub fn insert<impl Into<String>: Into<String>>(&mut Self, impl Into<String>,\n                                               T) -> Result<(), InsertError>","parent":null,"children":[],"decl_id":null,"docs":" Register a value in the tree under the given path.\n ```rust\n # use matchit::Node;\n # fn main() -> Result<(), Box<dyn std::error::Error>> {\n let mut matcher = Node::new();\n matcher.insert(\"/home\", \"Welcome!\")?;\n matcher.insert(\"/users/:id\", \"A User\")?;\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Register a value in the tree under the given path.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17890,"byte_end":17944,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17949,"byte_end":17960,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use matchit::Node;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17965,"byte_end":17989,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17994,"byte_end":18053,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/ let mut matcher = Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18058,"byte_end":18092,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/ matcher.insert(\"/home\", \"Welcome!\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18097,"byte_end":18138,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/ matcher.insert(\"/users/:id\", \"A User\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18143,"byte_end":18187,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18192,"byte_end":18204,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18209,"byte_end":18216,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":18221,"byte_end":18228,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28285,"byte_end":28287,"line_start":388,"line_end":388,"column_start":12,"column_end":14},"name":"at","qualname":"<Node<T>>::at","value":"pub fn at<'n, 'p>(&'n Self, &'p str) -> Result<Match, MatchError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to find a value in the router matching the given path.\n If no value can be found it returns a trailing slash redirect recommendation, see [`tsr`](crate::MatchError::tsr).\n ```rust\n # use matchit::Node;\n # fn main() -> Result<(), Box<dyn std::error::Error>> {\n let mut matcher = Node::new();\n matcher.insert(\"/home\", \"Welcome!\")?;","sig":null,"attributes":[{"value":"/ Tries to find a value in the router matching the given path.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":27743,"byte_end":27807,"line_start":375,"line_end":375,"column_start":5,"column_end":69}},{"value":"/ If no value can be found it returns a trailing slash redirect recommendation, see [`tsr`](crate::MatchError::tsr).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":27812,"byte_end":27930,"line_start":376,"line_end":376,"column_start":5,"column_end":123}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":27935,"byte_end":27946,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/ # use matchit::Node;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":27951,"byte_end":27975,"line_start":378,"line_end":378,"column_start":5,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":27980,"byte_end":28039,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/ let mut matcher = Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28044,"byte_end":28078,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/ matcher.insert(\"/home\", \"Welcome!\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28083,"byte_end":28124,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28129,"byte_end":28132,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let matched = matcher.at(\"/home\").unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28137,"byte_end":28184,"line_start":383,"line_end":383,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(*matched.value, \"Welcome!\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28189,"byte_end":28232,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28237,"byte_end":28249,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28254,"byte_end":28261,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28266,"byte_end":28273,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28911,"byte_end":28917,"line_start":402,"line_end":402,"column_start":12,"column_end":18},"name":"at_mut","qualname":"<Node<T>>::at_mut","value":"pub fn at_mut<'n, 'p>(&'n mut Self, &'p str) -> Result<Match, MatchError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to find a value in the router matching the given path, and returns a mutable\n reference to it. If no value can be found it returns a trailing slash redirect\n recommendation, see [`tsr`](crate::MatchError::tsr).\n","sig":null,"attributes":[{"value":"/ Tries to find a value in the router matching the given path, and returns a mutable","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28665,"byte_end":28751,"line_start":399,"line_end":399,"column_start":5,"column_end":91}},{"value":"/ reference to it. If no value can be found it returns a trailing slash redirect","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28756,"byte_end":28838,"line_start":400,"line_end":400,"column_start":5,"column_end":87}},{"value":"/ recommendation, see [`tsr`](crate::MatchError::tsr).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":28843,"byte_end":28899,"line_start":401,"line_end":401,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35545,"byte_end":35561,"line_start":552,"line_end":552,"column_start":12,"column_end":28},"name":"path_ignore_case","qualname":"<Node<T>>::path_ignore_case","value":"pub fn path_ignore_case<impl AsRef<str>: AsRef<str>>(&Self, impl AsRef<str>,\n                                                     bool) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Makes a case-insensitive match of the given path and tries to find a handler.\n It can optionally also fix trailing slashes.\n If the match is successful, it returns the case corrected path.\n ```rust\n # use matchit::Node;","sig":null,"attributes":[{"value":"/ Makes a case-insensitive match of the given path and tries to find a handler.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":34970,"byte_end":35051,"line_start":537,"line_end":537,"column_start":5,"column_end":86}},{"value":"/ It can optionally also fix trailing slashes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35056,"byte_end":35104,"line_start":538,"line_end":538,"column_start":5,"column_end":53}},{"value":"/ If the match is successful, it returns the case corrected path.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35109,"byte_end":35176,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35181,"byte_end":35192,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/ # use matchit::Node;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35197,"byte_end":35221,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35226,"byte_end":35229,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35234,"byte_end":35293,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/ let mut matcher = Node::new();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35298,"byte_end":35332,"line_start":544,"line_end":544,"column_start":5,"column_end":39}},{"value":"/ matcher.insert(\"/home\", \"Welcome!\")?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35337,"byte_end":35378,"line_start":545,"line_end":545,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35383,"byte_end":35386,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ let path = matcher.path_ignore_case(\"/HoMe/\", true).unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35391,"byte_end":35456,"line_start":547,"line_end":547,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(path, \"/home\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35461,"byte_end":35491,"line_start":548,"line_end":548,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35496,"byte_end":35508,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35513,"byte_end":35520,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ ````","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":35525,"byte_end":35533,"line_start":551,"line_end":551,"column_start":5,"column_end":13}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6473,"byte_end":6484,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":7261,"byte_end":7272,"line_start":54,"line_end":54,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":7282,"byte_end":7293,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8106,"byte_end":8116,"line_start":79,"line_end":79,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":9109,"byte_end":9119,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":9283,"byte_end":9293,"line_start":121,"line_end":121,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9555,"byte_end":9560,"line_start":12,"line_end":12,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10818,"byte_end":10824,"line_start":57,"line_end":57,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":13156,"byte_end":13166,"line_start":126,"line_end":126,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":13709,"byte_end":13719,"line_start":143,"line_end":143,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16842,"byte_end":16846,"line_start":47,"line_end":47,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16883,"byte_end":16887,"line_start":48,"line_end":48,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16913,"byte_end":16917,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17486,"byte_end":17490,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17786,"byte_end":17790,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":6473,"byte_end":6484,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":7261,"byte_end":7272,"line_start":54,"line_end":54,"column_start":28,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":7282,"byte_end":7293,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":8106,"byte_end":8116,"line_start":79,"line_end":79,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":9109,"byte_end":9119,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/error.rs","byte_start":9283,"byte_end":9293,"line_start":121,"line_end":121,"column_start":28,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":9555,"byte_end":9560,"line_start":12,"line_end":12,"column_start":14,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":10818,"byte_end":10824,"line_start":57,"line_end":57,"column_start":14,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":13156,"byte_end":13166,"line_start":126,"line_end":126,"column_start":19,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/params.rs","byte_start":13709,"byte_end":13719,"line_start":143,"line_end":143,"column_start":32,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16842,"byte_end":16846,"line_start":47,"line_end":47,"column_start":31,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16883,"byte_end":16887,"line_start":48,"line_end":48,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":16913,"byte_end":16917,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17486,"byte_end":17490,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/matchit-0.4.3/src/tree.rs","byte_start":17786,"byte_end":17790,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}}]}