{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3","program":"/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bson","--edition=2018","/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=3bdca42bbf74f591","-C","extra-filename=-3bdca42bbf74f591","--out-dir","/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","-L","dependency=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","--extern","base64=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libbase64-89b7f5717bf11c0b.rmeta","--extern","chrono=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libchrono-9fb3c0fc9ddd18d1.rmeta","--extern","hex=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libhex-452219a28118440f.rmeta","--extern","lazy_static=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/liblazy_static-cc03ae82f95c691d.rmeta","--extern","linked_hash_map=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/liblinked_hash_map-662a8eeb7409eb81.rmeta","--extern","rand=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/librand-487888b6667bed48.rmeta","--extern","serde=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libserde-25d844114842cc56.rmeta","--extern","serde_json=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libserde_json-465e9cc1f0c47f78.rmeta","--extern","uuid=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libuuid-7665403f68e0965a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libbson-3bdca42bbf74f591.rmeta"},"prelude":{"crate_id":{"name":"bson","disambiguator":[4708868057083958565,0]},"crate_root":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src","external_crates":[{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":19,"id":{"name":"chrono","disambiguator":[12534628545019425638,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":20,"id":{"name":"time","disambiguator":[15192896353979217682,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":21,"id":{"name":"libc","disambiguator":[14621565643060686160,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":22,"id":{"name":"num_integer","disambiguator":[9850306937509709045,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":23,"id":{"name":"num_traits","disambiguator":[16438191234303804155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":24,"id":{"name":"serde_json","disambiguator":[16530989952377641469,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","num":25,"id":{"name":"serde","disambiguator":[15044552807878504357,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","num":26,"id":{"name":"serde_derive","disambiguator":[9091749140381624389,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":27,"id":{"name":"indexmap","disambiguator":[11946919589315910912,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":28,"id":{"name":"hashbrown","disambiguator":[14574037096241616493,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":29,"id":{"name":"itoa","disambiguator":[1263167040257272176,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":30,"id":{"name":"ryu","disambiguator":[1063338513761980397,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","num":31,"id":{"name":"linked_hash_map","disambiguator":[5540240555593687275,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":32,"id":{"name":"hex","disambiguator":[4608570551788100756,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":33,"id":{"name":"rand","disambiguator":[18309387610641454924,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":34,"id":{"name":"rand_core","disambiguator":[17732946245065726229,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":35,"id":{"name":"getrandom","disambiguator":[8844515948851829404,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":36,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":37,"id":{"name":"rand_chacha","disambiguator":[5309236619809351512,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":38,"id":{"name":"ppv_lite86","disambiguator":[4149523023593181222,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","num":39,"id":{"name":"lazy_static","disambiguator":[18257175922802125800,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","num":40,"id":{"name":"uuid","disambiguator":[900265749509948164,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","num":41,"id":{"name":"base64","disambiguator":[2184188811219505079,0]}}],"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1148,"byte_end":8154,"line_start":22,"line_end":218,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7656,"byte_end":7661,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7671,"byte_end":7677,"line_start":190,"line_end":190,"column_start":9,"column_end":15},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1733},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7687,"byte_end":7691,"line_start":191,"line_end":191,"column_start":9,"column_end":13},"alias_span":null,"name":"Bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7701,"byte_end":7709,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1824},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7701,"byte_end":7709,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1878},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7719,"byte_end":7728,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"alias_span":null,"name":"DbPointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2094},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7738,"byte_end":7746,"line_start":194,"line_end":194,"column_start":9,"column_end":17},"alias_span":null,"name":"Document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1856},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7756,"byte_end":7779,"line_start":195,"line_end":195,"column_start":9,"column_end":32},"alias_span":null,"name":"JavaScriptCodeWithScope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7789,"byte_end":7794,"line_start":196,"line_end":196,"column_start":9,"column_end":14},"alias_span":null,"name":"Regex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7804,"byte_end":7813,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7831,"byte_end":7840,"line_start":199,"line_end":199,"column_start":10,"column_end":19},"alias_span":null,"name":"from_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7842,"byte_end":7855,"line_start":199,"line_end":199,"column_start":21,"column_end":34},"alias_span":null,"name":"from_document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7857,"byte_end":7869,"line_start":199,"line_end":199,"column_start":36,"column_end":48},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7888,"byte_end":7898,"line_start":200,"line_end":200,"column_start":17,"column_end":27},"alias_span":null,"name":"Decimal128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7910,"byte_end":7917,"line_start":201,"line_end":201,"column_start":11,"column_end":18},"alias_span":null,"name":"to_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7919,"byte_end":7930,"line_start":201,"line_end":201,"column_start":20,"column_end":31},"alias_span":null,"name":"to_document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7932,"byte_end":7942,"line_start":201,"line_end":201,"column_start":33,"column_end":43},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7932,"byte_end":7942,"line_start":201,"line_end":201,"column_start":33,"column_end":43},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1889},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":54049,"byte_end":54054,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":271}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":54056,"byte_end":54062,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":271}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":54076,"byte_end":54088,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":271}},{"kind":"Use","ref_id":{"krate":0,"index":2973},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":153157,"byte_end":153162,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1132}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":153164,"byte_end":153170,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1132}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":153184,"byte_end":153194,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":1132}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":153184,"byte_end":153194,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":1132}},{"kind":"Use","ref_id":{"krate":0,"index":1596},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":175758,"byte_end":175769,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_bson_datetime_from_iso_string","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1600},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":175820,"byte_end":175829,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_bson_datetime_as_iso_string","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":175923,"byte_end":175934,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_chrono_datetime_from_bson_datetime","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":175990,"byte_end":175999,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_chrono_datetime_as_bson_datetime","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1566},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176093,"byte_end":176104,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_iso_string_from_bson_datetime","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176155,"byte_end":176164,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_iso_string_as_bson_datetime","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176242,"byte_end":176253,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_timestamp_from_u32","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1689},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176293,"byte_end":176302,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_timestamp_as_u32","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1666},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176369,"byte_end":176380,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_u32_from_timestamp","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176420,"byte_end":176429,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_u32_as_timestamp","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1636},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176494,"byte_end":176505,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_uuid_from_binary","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1634},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176543,"byte_end":176552,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_uuid_as_binary","value":"","parent":{"krate":0,"index":1436}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1148,"byte_end":8154,"line_start":22,"line_end":218,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":232},{"krate":0,"index":271},{"krate":0,"index":668},{"krate":0,"index":676},{"krate":0,"index":924},{"krate":0,"index":1040},{"krate":0,"index":1132},{"krate":0,"index":1436},{"krate":0,"index":1694}],"decl_id":null,"docs":" BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.\n Like JSON, BSON supports the embedding of documents and arrays within other documents\n and arrays. BSON also contains extensions that allow representation of data types that\n are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","sig":null,"attributes":[{"value":"/ BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1148,"byte_end":1238,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/ Like JSON, BSON supports the embedding of documents and arrays within other documents","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1239,"byte_end":1328,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ and arrays. BSON also contains extensions that allow representation of data types that","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1329,"byte_end":1419,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1420,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1517,"byte_end":1520,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1521,"byte_end":1532,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ // JSON equivalent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1533,"byte_end":1555,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ {\"hello\": \"world\"}","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1556,"byte_end":1578,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1579,"byte_end":1582,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // BSON encoding","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1583,"byte_end":1603,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/ \\x16\\x00\\x00\\x00                   // total document size","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1604,"byte_end":1665,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ \\x02                               // 0x02 = type String","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1666,"byte_end":1726,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/ hello\\x00                          // field name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1727,"byte_end":1779,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ \\x06\\x00\\x00\\x00world\\x00          // field value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1780,"byte_end":1833,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/ \\x00                               // 0x00 = type EOO ('end of object')","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1834,"byte_end":1909,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1910,"byte_end":1917,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1918,"byte_end":1921,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ BSON is the primary data representation for [MongoDB](https://www.mongodb.com/), and this crate is used in the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":1922,"byte_end":2036,"line_start":39,"line_end":39,"column_start":1,"column_end":115}},{"value":"/ [`mongodb`](https://docs.rs/mongodb/0.10.0/mongodb/) driver crate in its API and implementation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2037,"byte_end":2137,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2138,"byte_end":2141,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For more information about BSON itself, see [bsonspec.org](http://bsonspec.org).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2142,"byte_end":2226,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2227,"byte_end":2230,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## BSON values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2231,"byte_end":2249,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2250,"byte_end":2253,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Many different types can be represented as a BSON value, including 32-bit and 64-bit signed","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2254,"byte_end":2349,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ integers, 64 bit floating point numbers, strings, datetimes, embedded documents, and more. To","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2350,"byte_end":2447,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ see a full list of possible BSON values, see the [BSON specification](http://bsonspec.org/spec.html). The various","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2448,"byte_end":2565,"line_start":48,"line_end":48,"column_start":1,"column_end":118}},{"value":"/ possible BSON values are modeled in this crate by the [`Bson`](enum.Bson.html) enum.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2566,"byte_end":2654,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2655,"byte_end":2658,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Creating [`Bson`](enum.Bson.html) instances","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2659,"byte_end":2710,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2711,"byte_end":2714,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`Bson`](enum.Bson.html) values can be instantiated directly or via the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2715,"byte_end":2790,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ [`bson!`](macro.bson.html) macro:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2791,"byte_end":2828,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2829,"byte_end":2832,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2833,"byte_end":2844,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2845,"byte_end":2874,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ let string = Bson::String(\"hello world\".to_string());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2875,"byte_end":2932,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/ let int = Bson::Int32(5);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2933,"byte_end":2962,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/ let array = Bson::Array(vec![Bson::Int32(5), Bson::Boolean(false)]);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":2963,"byte_end":3035,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3036,"byte_end":3039,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let string: Bson = \"hello world\".into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3040,"byte_end":3084,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ let int: Bson = 5i32.into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3085,"byte_end":3117,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3118,"byte_end":3121,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let string = bson!(\"hello world\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3122,"byte_end":3160,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/ let int = bson!(5);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3161,"byte_end":3184,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/ let array = bson!([5, false]);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3185,"byte_end":3219,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3220,"byte_end":3227,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ [`bson!`](macro.bson.html) has supports both array and object literals, and it automatically","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3228,"byte_end":3324,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ converts any values specified to [`Bson`](enum.Bson.html), provided they are `Into<Bson>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3325,"byte_end":3419,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3420,"byte_end":3423,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### [`Bson`](enum.Bson.html) value unwrapping","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3424,"byte_end":3473,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3474,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`Bson`](enum.Bson.html) has a number of helper methods for accessing the underlying native Rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3478,"byte_end":3578,"line_start":74,"line_end":74,"column_start":1,"column_end":101}},{"value":"/ types. These helpers can be useful in circumstances in which the specific type of a BSON value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3579,"byte_end":3677,"line_start":75,"line_end":75,"column_start":1,"column_end":99}},{"value":"/ is known ahead of time.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3678,"byte_end":3705,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3706,"byte_end":3709,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ e.g.:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3710,"byte_end":3719,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3720,"byte_end":3731,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3732,"byte_end":3761,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/ let value = Bson::Int32(5);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3762,"byte_end":3793,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/ let int = value.as_i32(); // Some(5)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3794,"byte_end":3834,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ let bool = value.as_bool(); // None","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3835,"byte_end":3874,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let value = bson!([true]);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3879,"byte_end":3909,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/ let array = value.as_array(); // Some(&Vec<Bson>)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3910,"byte_end":3963,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3964,"byte_end":3971,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3972,"byte_end":3975,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## BSON documents","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3976,"byte_end":3997,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":3998,"byte_end":4001,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ BSON documents are ordered maps of UTF-8 encoded strings to BSON values. They are logically","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4002,"byte_end":4097,"line_start":91,"line_end":91,"column_start":1,"column_end":96}},{"value":"/ similar to JSON objects in that they can contain subdocuments, arrays, and values of several","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4098,"byte_end":4194,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ different types. This crate models BSON documents via the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4195,"byte_end":4256,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/ [`Document`](document/struct.Document.html) struct.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4257,"byte_end":4312,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4313,"byte_end":4316,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ### Creating [`Document`](document/struct.Document.html)s","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4317,"byte_end":4378,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4379,"byte_end":4382,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`Document`](document/struct.Document.html)s can be created directly either from a byte","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4383,"byte_end":4474,"line_start":98,"line_end":98,"column_start":1,"column_end":92}},{"value":"/ reader containing BSON data or via the `doc!` macro:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4475,"byte_end":4531,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4532,"byte_end":4543,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/ # use bson::{doc, Document};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4544,"byte_end":4576,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/ # use std::io::Read;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4577,"byte_end":4601,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ let mut bytes = hex::decode(\"0C0000001069000100000000\").unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4602,"byte_end":4671,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ let doc = Document::from_reader(&mut bytes.as_slice()).unwrap(); // { \"i\": 1 }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4672,"byte_end":4754,"line_start":104,"line_end":104,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4755,"byte_end":4758,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let doc = doc! {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4759,"byte_end":4779,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"/    \"hello\": \"world\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4780,"byte_end":4804,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"/    \"int\": 5,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4805,"byte_end":4821,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"/    \"subdoc\": { \"cat\": true },","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4822,"byte_end":4855,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4856,"byte_end":4862,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4863,"byte_end":4870,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ [`doc!`](macro.doc.html) works similarly to [`bson!`](macro.bson.html), except that it always","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4871,"byte_end":4968,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/ returns a [`Document`](document/struct.Document.html) rather than a [`Bson`](enum.Bson.html).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":4969,"byte_end":5066,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5067,"byte_end":5070,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### [`Document`](document/struct.Document.html) member access","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5071,"byte_end":5136,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5137,"byte_end":5140,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Document`](document/struct.Document.html) has a number of methods on it to facilitate member","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5141,"byte_end":5239,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ access:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5240,"byte_end":5251,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5252,"byte_end":5255,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5256,"byte_end":5267,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/ # use bson::doc;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5268,"byte_end":5288,"line_start":121,"line_end":121,"column_start":1,"column_end":21}},{"value":"/ let doc = doc! {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5289,"byte_end":5309,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/    \"string\": \"string\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5310,"byte_end":5336,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/    \"bool\": true,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5337,"byte_end":5357,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/    \"i32\": 5,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5358,"byte_end":5374,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"/    \"doc\": { \"x\": true },","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5375,"byte_end":5403,"line_start":126,"line_end":126,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5404,"byte_end":5410,"line_start":127,"line_end":127,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5411,"byte_end":5414,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // attempt get values as untyped Bson","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5415,"byte_end":5456,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"/ let none = doc.get(\"asdfadsf\"); // None","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5457,"byte_end":5500,"line_start":130,"line_end":130,"column_start":1,"column_end":44}},{"value":"/ let value = doc.get(\"string\"); // Some(&Bson::String(\"string\"))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5501,"byte_end":5568,"line_start":131,"line_end":131,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5569,"byte_end":5572,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ // attempt to get values with explicit typing","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5573,"byte_end":5622,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"/ let string = doc.get_str(\"string\"); // Ok(\"string\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5623,"byte_end":5678,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ let subdoc = doc.get_document(\"doc\"); // Some(Document({ \"x\": true }))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5679,"byte_end":5753,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ let error = doc.get_i64(\"i32\"); // Err(...)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5754,"byte_end":5801,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5802,"byte_end":5809,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5810,"byte_end":5813,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ## Modeling BSON with strongly typed data structures","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5814,"byte_end":5870,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5871,"byte_end":5874,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ While it is possible to work with documents and BSON values directly, it will often introduce a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5875,"byte_end":5974,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ lot of boilerplate for verifying the necessary keys are present and their values are the correct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":5975,"byte_end":6075,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"/ types. [`serde`](https://serde.rs/) provides a powerful way of mapping BSON data into Rust data structures largely","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6076,"byte_end":6194,"line_start":143,"line_end":143,"column_start":1,"column_end":119}},{"value":"/ automatically, removing the need for all that boilerplate.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6195,"byte_end":6257,"line_start":144,"line_end":144,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6258,"byte_end":6261,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ e.g.:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6262,"byte_end":6271,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6272,"byte_end":6283,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6284,"byte_end":6326,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6327,"byte_end":6356,"line_start":149,"line_end":149,"column_start":1,"column_end":30}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6357,"byte_end":6394,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/ struct Person {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6395,"byte_end":6414,"line_start":151,"line_end":151,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6415,"byte_end":6436,"line_start":152,"line_end":152,"column_start":1,"column_end":22}},{"value":"/     age: i32,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6437,"byte_end":6454,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/     phones: Vec<String>,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6455,"byte_end":6483,"line_start":154,"line_end":154,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6484,"byte_end":6489,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // Some BSON input data as a `Bson`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6494,"byte_end":6534,"line_start":157,"line_end":157,"column_start":1,"column_end":41}},{"value":"/ let bson_data: Bson = bson!({","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6535,"byte_end":6568,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/     \"name\": \"John Doe\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6569,"byte_end":6596,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/     \"age\": 43,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6597,"byte_end":6615,"line_start":160,"line_end":160,"column_start":1,"column_end":19}},{"value":"/     \"phones\": [","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6616,"byte_end":6635,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/         \"+44 1234567\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6636,"byte_end":6662,"line_start":162,"line_end":162,"column_start":1,"column_end":27}},{"value":"/         \"+44 2345678\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6663,"byte_end":6688,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"/     ]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6689,"byte_end":6698,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6699,"byte_end":6706,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6707,"byte_end":6710,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Deserialize the Person struct from the BSON data, automatically","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6711,"byte_end":6781,"line_start":167,"line_end":167,"column_start":1,"column_end":71}},{"value":"/ // verifying that the necessary keys are present and that they are of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6782,"byte_end":6855,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ // the correct types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6856,"byte_end":6881,"line_start":169,"line_end":169,"column_start":1,"column_end":26}},{"value":"/ let mut person: Person = bson::from_bson(bson_data).unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6882,"byte_end":6947,"line_start":170,"line_end":170,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6948,"byte_end":6951,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ // Do things just like with any other Rust data structure.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":6952,"byte_end":7014,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"/ println!(\"Redacting {}'s record.\", person.name);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7015,"byte_end":7067,"line_start":173,"line_end":173,"column_start":1,"column_end":53}},{"value":"/ person.name = \"REDACTED\".to_string();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7068,"byte_end":7109,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7110,"byte_end":7113,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Get a serialized version of the input data as a `Bson`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7114,"byte_end":7176,"line_start":176,"line_end":176,"column_start":1,"column_end":63}},{"value":"/ let redacted_bson = bson::to_bson(&person).unwrap();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7177,"byte_end":7233,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7234,"byte_end":7241,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7242,"byte_end":7245,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Any types that implement `Serialize` and `Deserialize` can be used in this way. Doing so helps","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7246,"byte_end":7344,"line_start":180,"line_end":180,"column_start":1,"column_end":99}},{"value":"/ separate the \"business logic\" that operates over the data from the (de)serialization logic that","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7345,"byte_end":7444,"line_start":181,"line_end":181,"column_start":1,"column_end":100}},{"value":"/ translates the data to/from its serialized form. This can lead to more clear and concise code","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7445,"byte_end":7542,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"/ that is also less error prone.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7543,"byte_end":7577,"line_start":183,"line_end":183,"column_start":1,"column_end":35}},{"value":"allow(clippy :: cognitive_complexity)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7579,"byte_end":7618,"line_start":185,"line_end":185,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1734},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16683,"byte_end":16689,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Double","qualname":"::bson::Bson::Double","value":"Bson::Double(f64)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16646,"byte_end":16678,"line_start":43,"line_end":43,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1737},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16721,"byte_end":16727,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"String","qualname":"::bson::Bson::String","value":"Bson::String(String)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16700,"byte_end":16716,"line_start":45,"line_end":45,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1740},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16755,"byte_end":16760,"line_start":48,"line_end":48,"column_start":5,"column_end":10},"name":"Array","qualname":"::bson::Bson::Array","value":"Bson::Array(Array)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16741,"byte_end":16750,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16799,"byte_end":16807,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"Document","qualname":"::bson::Bson::Document","value":"Bson::Document(Document)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16773,"byte_end":16794,"line_start":49,"line_end":49,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16845,"byte_end":16852,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::bson::Bson::Boolean","value":"Bson::Boolean(bool)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Boolean value\n","sig":null,"attributes":[{"value":"/ Boolean value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16823,"byte_end":16840,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16883,"byte_end":16887,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Null","qualname":"::bson::Bson::Null","value":"Bson::Null","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16864,"byte_end":16878,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1751},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16920,"byte_end":16937,"line_start":56,"line_end":56,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::bson::Bson::RegularExpression","value":"Bson::RegularExpression(Regex)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Regular expression\n","sig":null,"attributes":[{"value":"/ Regular expression","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16893,"byte_end":16915,"line_start":55,"line_end":55,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1754},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16974,"byte_end":16988,"line_start":58,"line_end":58,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::bson::Bson::JavaScriptCode","value":"Bson::JavaScriptCode(String)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16950,"byte_end":16969,"line_start":57,"line_end":57,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1757},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17035,"byte_end":17058,"line_start":60,"line_end":60,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::bson::Bson::JavaScriptCodeWithScope","value":"Bson::JavaScriptCodeWithScope(JavaScriptCodeWithScope)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17002,"byte_end":17030,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1760},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17119,"byte_end":17124,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"Int32","qualname":"::bson::Bson::Int32","value":"Bson::Int32(i32)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" 32-bit signed integer\n","sig":null,"attributes":[{"value":"/ 32-bit signed integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17089,"byte_end":17114,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1763},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17165,"byte_end":17170,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"Int64","qualname":"::bson::Bson::Int64","value":"Bson::Int64(i64)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17135,"byte_end":17160,"line_start":63,"line_end":63,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17199,"byte_end":17208,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::bson::Bson::Timestamp","value":"Bson::Timestamp(Timestamp)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17181,"byte_end":17194,"line_start":65,"line_end":65,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1769},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17245,"byte_end":17251,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"Binary","qualname":"::bson::Bson::Binary","value":"Bson::Binary(Binary)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17225,"byte_end":17240,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1772},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17326,"byte_end":17334,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::bson::Bson::ObjectId","value":"Bson::ObjectId(oid::ObjectId)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17265,"byte_end":17321,"line_start":69,"line_end":69,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1775},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17376,"byte_end":17384,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::bson::Bson::DateTime","value":"Bson::DateTime(chrono::DateTime<Utc>)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17355,"byte_end":17371,"line_start":71,"line_end":71,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17441,"byte_end":17447,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::bson::Bson::Symbol","value":"Bson::Symbol(String)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Symbol (Deprecated)\n","sig":null,"attributes":[{"value":"/ Symbol (Deprecated)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17413,"byte_end":17436,"line_start":73,"line_end":73,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1781},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17595,"byte_end":17605,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::bson::Bson::Decimal128","value":"Bson::Decimal128(Decimal128)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17461,"byte_end":17590,"line_start":75,"line_end":75,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17660,"byte_end":17669,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::bson::Bson::Undefined","value":"Bson::Undefined","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Undefined value (Deprecated)\n","sig":null,"attributes":[{"value":"/ Undefined value (Deprecated)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17623,"byte_end":17655,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1786},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17691,"byte_end":17697,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::bson::Bson::MaxKey","value":"Bson::MaxKey","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Max key\n","sig":null,"attributes":[{"value":"/ Max key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17675,"byte_end":17686,"line_start":79,"line_end":79,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1788},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17719,"byte_end":17725,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::bson::Bson::MinKey","value":"Bson::MinKey","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Min key\n","sig":null,"attributes":[{"value":"/ Min key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17703,"byte_end":17714,"line_start":81,"line_end":81,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1790},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17762,"byte_end":17771,"line_start":84,"line_end":84,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::bson::Bson::DbPointer","value":"Bson::DbPointer(DbPointer)","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" DBPointer (Deprecated)\n","sig":null,"attributes":[{"value":"/ DBPointer (Deprecated)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17731,"byte_end":17757,"line_start":83,"line_end":83,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1733},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16635,"byte_end":16639,"line_start":42,"line_end":42,"column_start":10,"column_end":14},"name":"Bson","qualname":"::bson::Bson","value":"pub enum Bson {\n    Double(f64),\n    String(String),\n    Array(Array),\n    Document(Document),\n    Boolean(bool),\n    Null,\n    RegularExpression(Regex),\n    JavaScriptCode(String),\n    JavaScriptCodeWithScope(JavaScriptCodeWithScope),\n    Int32(i32),\n    Int64(i64),\n    Timestamp(Timestamp),\n    Binary(Binary),\n    ObjectId(oid::ObjectId),\n    DateTime(chrono::DateTime<Utc>),\n    Symbol(String),\n    Decimal128(Decimal128),\n    Undefined,\n    MaxKey,\n    MinKey,\n    DbPointer(DbPointer),\n}","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790}],"decl_id":null,"docs":" Possible BSON value types.\n","sig":null,"attributes":[{"value":"/ Possible BSON value types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":16560,"byte_end":16590,"line_start":40,"line_end":40,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17823,"byte_end":17828,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Array","qualname":"::bson::Array","value":"Vec<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Vec<Bson>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Vec<Bson>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17787,"byte_end":17813,"line_start":87,"line_end":87,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":24152,"byte_end":24172,"line_start":326,"line_end":326,"column_start":12,"column_end":32},"name":"into_relaxed_extjson","qualname":"<Bson>::into_relaxed_extjson","value":"pub fn into_relaxed_extjson(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23770,"byte_end":23912,"line_start":321,"line_end":321,"column_start":5,"column_end":147}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23917,"byte_end":23920,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23925,"byte_end":24010,"line_start":323,"line_end":323,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":24015,"byte_end":24097,"line_start":324,"line_end":324,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":24102,"byte_end":24140,"line_start":325,"line_end":325,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":28265,"byte_end":28287,"line_start":430,"line_end":430,"column_start":12,"column_end":34},"name":"into_canonical_extjson","qualname":"<Bson>::into_canonical_extjson","value":"pub fn into_canonical_extjson(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":27881,"byte_end":28025,"line_start":425,"line_end":425,"column_start":5,"column_end":149}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":28030,"byte_end":28033,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":28038,"byte_end":28123,"line_start":427,"line_end":427,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":28128,"byte_end":28210,"line_start":428,"line_end":428,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":28215,"byte_end":28253,"line_start":429,"line_end":429,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":29713,"byte_end":29725,"line_start":468,"line_end":468,"column_start":12,"column_end":24},"name":"element_type","qualname":"<Bson>::element_type","value":"pub fn element_type(&Self) -> ElementType","parent":null,"children":[],"decl_id":null,"docs":" Get the `ElementType` of this value.\n","sig":null,"attributes":[{"value":"/ Get the `ElementType` of this value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":29661,"byte_end":29701,"line_start":467,"line_end":467,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42364,"byte_end":42370,"line_start":823,"line_end":823,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Bson>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42271,"byte_end":42352,"line_start":822,"line_end":822,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42594,"byte_end":42600,"line_start":831,"line_end":831,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Bson>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42501,"byte_end":42582,"line_start":830,"line_end":830,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42859,"byte_end":42869,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"as_str_mut","qualname":"<Bson>::as_str_mut","value":"pub fn as_str_mut(&mut Self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42736,"byte_end":42829,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42834,"byte_end":42847,"line_start":839,"line_end":839,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43097,"byte_end":43105,"line_start":848,"line_end":848,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Bson>::as_array","value":"pub fn as_array(&Self) -> Option<&Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43017,"byte_end":43085,"line_start":847,"line_end":847,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43345,"byte_end":43357,"line_start":856,"line_end":856,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Bson>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43242,"byte_end":43333,"line_start":855,"line_end":855,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43589,"byte_end":43600,"line_start":864,"line_end":864,"column_start":12,"column_end":23},"name":"as_document","qualname":"<Bson>::as_document","value":"pub fn as_document(&Self) -> Option<&Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43506,"byte_end":43577,"line_start":863,"line_end":863,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43849,"byte_end":43864,"line_start":872,"line_end":872,"column_start":12,"column_end":27},"name":"as_document_mut","qualname":"<Bson>::as_document_mut","value":"pub fn as_document_mut(&mut Self) -> Option<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":43743,"byte_end":43837,"line_start":871,"line_end":871,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44098,"byte_end":44105,"line_start":880,"line_end":880,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Bson>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Bool`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Bool`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44019,"byte_end":44086,"line_start":879,"line_end":879,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44316,"byte_end":44322,"line_start":888,"line_end":888,"column_start":12,"column_end":18},"name":"as_i32","qualname":"<Bson>::as_i32","value":"pub fn as_i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I32`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I32`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44238,"byte_end":44304,"line_start":887,"line_end":887,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44530,"byte_end":44536,"line_start":896,"line_end":896,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Bson>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I64`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I64`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44452,"byte_end":44518,"line_start":895,"line_end":895,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44749,"byte_end":44761,"line_start":904,"line_end":904,"column_start":12,"column_end":24},"name":"as_object_id","qualname":"<Bson>::as_object_id","value":"pub fn as_object_id(&Self) -> Option<&oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44666,"byte_end":44737,"line_start":903,"line_end":903,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45015,"byte_end":45031,"line_start":912,"line_end":912,"column_start":12,"column_end":28},"name":"as_object_id_mut","qualname":"<Bson>::as_object_id_mut","value":"pub fn as_object_id_mut(&mut Self) -> Option<&mut oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":44909,"byte_end":45003,"line_start":911,"line_end":911,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45274,"byte_end":45285,"line_start":920,"line_end":920,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Bson>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45191,"byte_end":45262,"line_start":919,"line_end":919,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45555,"byte_end":45570,"line_start":929,"line_end":929,"column_start":12,"column_end":27},"name":"as_datetime_mut","qualname":"<Bson>::as_datetime_mut","value":"pub fn as_datetime_mut(&mut Self) -> Option<&mut chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45441,"byte_end":45525,"line_start":927,"line_end":927,"column_start":5,"column_end":89}},{"value":"/ otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45530,"byte_end":45543,"line_start":928,"line_end":928,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45819,"byte_end":45828,"line_start":937,"line_end":937,"column_start":12,"column_end":21},"name":"as_symbol","qualname":"<Bson>::as_symbol","value":"pub fn as_symbol(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45738,"byte_end":45807,"line_start":936,"line_end":936,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46068,"byte_end":46081,"line_start":945,"line_end":945,"column_start":12,"column_end":25},"name":"as_symbol_mut","qualname":"<Bson>::as_symbol_mut","value":"pub fn as_symbol_mut(&mut Self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":45964,"byte_end":46056,"line_start":944,"line_end":944,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46313,"byte_end":46325,"line_start":953,"line_end":953,"column_start":12,"column_end":24},"name":"as_timestamp","qualname":"<Bson>::as_timestamp","value":"pub fn as_timestamp(&Self) -> Option<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Timestamp`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Timestamp`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46229,"byte_end":46301,"line_start":952,"line_end":952,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46560,"byte_end":46567,"line_start":961,"line_end":961,"column_start":12,"column_end":19},"name":"as_null","qualname":"<Bson>::as_null","value":"pub fn as_null(&Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Null`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Null`, return its value. Returns `None` otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46481,"byte_end":46548,"line_start":960,"line_end":960,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46700,"byte_end":46713,"line_start":968,"line_end":968,"column_start":12,"column_end":25},"name":"as_db_pointer","qualname":"<Bson>::as_db_pointer","value":"pub fn as_db_pointer(&Self) -> Option<&DbPointer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46991,"byte_end":47000,"line_start":978,"line_end":978,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::bson::Timestamp","value":"Timestamp { time, increment }","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803}],"decl_id":null,"docs":" Represents a BSON timestamp value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON timestamp value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":46873,"byte_end":46911,"line_start":976,"line_end":976,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47063,"byte_end":47067,"line_start":980,"line_end":980,"column_start":9,"column_end":13},"name":"time","qualname":"::bson::Timestamp::time","value":"u32","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" The number of seconds since the Unix epoch.\n","sig":null,"attributes":[{"value":"/ The number of seconds since the Unix epoch.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47007,"byte_end":47054,"line_start":979,"line_end":979,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47194,"byte_end":47203,"line_start":984,"line_end":984,"column_start":9,"column_end":18},"name":"increment","qualname":"::bson::Timestamp::increment","value":"u32","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" An incrementing value to order timestamps with the same number of seconds in the `time`\n field.\n","sig":null,"attributes":[{"value":"/ An incrementing value to order timestamps with the same number of seconds in the `time`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47079,"byte_end":47170,"line_start":982,"line_end":982,"column_start":5,"column_end":96}},{"value":"/ field.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47175,"byte_end":47185,"line_start":983,"line_end":983,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47997,"byte_end":48005,"line_start":1019,"line_end":1019,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::bson::DateTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `DateTime` representation in struct for serde serialization","sig":null,"attributes":[{"value":"/ `DateTime` representation in struct for serde serialization","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47633,"byte_end":47696,"line_start":1005,"line_end":1005,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47697,"byte_end":47700,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ Just a helper for convenience","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47701,"byte_end":47734,"line_start":1007,"line_end":1007,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47735,"byte_end":47738,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47739,"byte_end":47750,"line_start":1009,"line_end":1009,"column_start":1,"column_end":12}},{"value":"/ use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47751,"byte_end":47791,"line_start":1010,"line_end":1010,"column_start":1,"column_end":41}},{"value":"/ use bson::DateTime;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47792,"byte_end":47815,"line_start":1011,"line_end":1011,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47816,"byte_end":47819,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47820,"byte_end":47857,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47858,"byte_end":47874,"line_start":1014,"line_end":1014,"column_start":1,"column_end":17}},{"value":"/     date_time: DateTime,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47875,"byte_end":47903,"line_start":1015,"line_end":1015,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47904,"byte_end":47909,"line_start":1016,"line_end":1016,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47910,"byte_end":47917,"line_start":1017,"line_end":1017,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1825},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":48006,"byte_end":48031,"line_start":1019,"line_end":1019,"column_start":21,"column_end":46},"name":"0","qualname":"::bson::DateTime::0","value":"chrono::DateTime<chrono::Utc>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1845},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49827,"byte_end":49832,"line_start":1080,"line_end":1080,"column_start":12,"column_end":17},"name":"Regex","qualname":"::bson::Regex","value":"Regex { pattern, options }","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847}],"decl_id":null,"docs":" Represents a BSON regular expression value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON regular expression value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49733,"byte_end":49780,"line_start":1078,"line_end":1078,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1846},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49879,"byte_end":49886,"line_start":1082,"line_end":1082,"column_start":9,"column_end":16},"name":"pattern","qualname":"::bson::Regex::pattern","value":"std::string::String","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":" The regex pattern to match.\n","sig":null,"attributes":[{"value":"/ The regex pattern to match.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49839,"byte_end":49870,"line_start":1081,"line_end":1081,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1847},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50306,"byte_end":50313,"line_start":1091,"line_end":1091,"column_start":9,"column_end":16},"name":"options","qualname":"::bson::Regex::options","value":"std::string::String","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":" The options for the regex.","sig":null,"attributes":[{"value":"/ The options for the regex.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49901,"byte_end":49931,"line_start":1084,"line_end":1084,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49936,"byte_end":49939,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ Options are identified by characters, which must be stored in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49944,"byte_end":50009,"line_start":1086,"line_end":1086,"column_start":5,"column_end":70}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50014,"byte_end":50098,"line_start":1087,"line_end":1087,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50103,"byte_end":50191,"line_start":1088,"line_end":1088,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50196,"byte_end":50280,"line_start":1089,"line_end":1089,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50285,"byte_end":50297,"line_start":1090,"line_end":1090,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50417,"byte_end":50440,"line_start":1096,"line_end":1096,"column_start":12,"column_end":35},"name":"JavaScriptCodeWithScope","qualname":"::bson::JavaScriptCodeWithScope","value":"JavaScriptCodeWithScope { code, scope }","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858}],"decl_id":null,"docs":" Represents a BSON code with scope value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON code with scope value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50326,"byte_end":50370,"line_start":1094,"line_end":1094,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1857},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50451,"byte_end":50455,"line_start":1097,"line_end":1097,"column_start":9,"column_end":13},"name":"code","qualname":"::bson::JavaScriptCodeWithScope::code","value":"std::string::String","parent":{"krate":0,"index":1856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1858},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50473,"byte_end":50478,"line_start":1098,"line_end":1098,"column_start":9,"column_end":14},"name":"scope","qualname":"::bson::JavaScriptCodeWithScope::scope","value":"document::Document","parent":{"krate":0,"index":1856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1867},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50575,"byte_end":50581,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18},"name":"Binary","qualname":"::bson::Binary","value":"Binary { subtype, bytes }","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869}],"decl_id":null,"docs":" Represents a BSON binary value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON binary value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50493,"byte_end":50528,"line_start":1101,"line_end":1101,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1868},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50626,"byte_end":50633,"line_start":1105,"line_end":1105,"column_start":9,"column_end":16},"name":"subtype","qualname":"::bson::Binary::subtype","value":"spec::BinarySubtype","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The subtype of the bytes.\n","sig":null,"attributes":[{"value":"/ The subtype of the bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50588,"byte_end":50617,"line_start":1104,"line_end":1104,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1869},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50685,"byte_end":50690,"line_start":1108,"line_end":1108,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bson::Binary::bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The binary bytes.\n","sig":null,"attributes":[{"value":"/ The binary bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50655,"byte_end":50676,"line_start":1107,"line_end":1107,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":51318,"byte_end":51327,"line_start":1132,"line_end":1132,"column_start":12,"column_end":21},"name":"DbPointer","qualname":"::bson::DbPointer","value":"DbPointer {  }","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"decl_id":null,"docs":" Represents a DBPointer. (Deprecated)\n","sig":null,"attributes":[{"value":"/ Represents a DBPointer. (Deprecated)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":51231,"byte_end":51271,"line_start":1130,"line_end":1130,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":232},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compat","qualname":"::compat","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/mod.rs","parent":null,"children":[{"krate":0,"index":233}],"decl_id":null,"docs":" Backward compatibility\n","sig":null,"attributes":[{"value":"/ Backward compatibility","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/mod.rs","byte_start":51401,"byte_end":51427,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u2f","qualname":"::compat::u2f","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"decl_id":null,"docs":" Convert unsigned types to/from `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Convert unsigned types to/from `Bson::Double`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51443,"byte_end":51492,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51604,"byte_end":51609,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"ToF64","qualname":"::compat::u2f::ToF64","value":"ToF64","parent":null,"children":[{"krate":0,"index":245}],"decl_id":null,"docs":" Converts primitive unsigned types to `f64`\n","sig":null,"attributes":[{"value":"/ Converts primitive unsigned types to `f64`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51547,"byte_end":51593,"line_start":5,"line_end":5,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51651,"byte_end":51657,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::compat::u2f::ToF64::to_f64","value":"pub fn to_f64(&Self) -> f64","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Converts to `f64` value\n","sig":null,"attributes":[{"value":"/ Converts to `f64` value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51616,"byte_end":51643,"line_start":7,"line_end":7,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52053,"byte_end":52062,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"serialize","qualname":"::compat::u2f::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: ToF64,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Serialize unsigned types to `Bson::Double`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":51999,"byte_end":52045,"line_start":35,"line_end":35,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":257},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52225,"byte_end":52232,"line_start":45,"line_end":45,"column_start":11,"column_end":18},"name":"FromF64","qualname":"::compat::u2f::FromF64","value":"FromF64","parent":null,"children":[{"krate":0,"index":258}],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52185,"byte_end":52214,"line_start":44,"line_end":44,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52276,"byte_end":52284,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::compat::u2f::FromF64::from_f64","value":"pub fn from_f64(f64) -> Self","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52239,"byte_end":52268,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52686,"byte_end":52697,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::compat::u2f::deserialize","value":"pub fn deserialize<'de, T, D>(D) -> Result<T, D::Error> where D: Deserializer,\nT: FromF64","parent":null,"children":[],"decl_id":null,"docs":" Deserialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Deserialize unsigned types to `Bson::Double`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/u2f.rs","byte_start":52630,"byte_end":52678,"line_start":74,"line_end":74,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":271},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":314},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":664},{"krate":0,"index":666}],"decl_id":null,"docs":" Deserializer\n","sig":null,"attributes":[{"value":"/ Deserializer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":53980,"byte_end":53996,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1890},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65557,"byte_end":65564,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::de::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65443,"byte_end":65552,"line_start":11,"line_end":11,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1893},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65758,"byte_end":65771,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"FromUtf8Error","qualname":"::de::error::Error::FromUtf8Error","value":"Error::FromUtf8Error(string::FromUtf8Error)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered\n while decoding a UTF-8 String from the input data.\n","sig":null,"attributes":[{"value":"/ A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65582,"byte_end":65694,"line_start":14,"line_end":14,"column_start":5,"column_end":117}},{"value":"/ while decoding a UTF-8 String from the input data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65699,"byte_end":65753,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":1896},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65916,"byte_end":65947,"line_start":20,"line_end":20,"column_start":5,"column_end":36},"name":"UnrecognizedDocumentElementType","qualname":"::de::error::Error::UnrecognizedDocumentElementType","value":"Error::UnrecognizedDocumentElementType { key, element_type }","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" While decoding a `Document` from bytes, an unexpected or unsupported element type was\n encountered.\n","sig":null,"attributes":[{"value":"/ While decoding a `Document` from bytes, an unexpected or unsupported element type was","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65801,"byte_end":65890,"line_start":18,"line_end":18,"column_start":5,"column_end":94}},{"value":"/ encountered.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65895,"byte_end":65911,"line_start":19,"line_end":19,"column_start":5,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":1899},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66208,"byte_end":66219,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::de::error::Error::SyntaxError","value":"Error::SyntaxError { message }","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" There was an error with the syntactical structure of the BSON.\n","sig":null,"attributes":[{"value":"/ There was an error with the syntactical structure of the BSON.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66137,"byte_end":66203,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66302,"byte_end":66313,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"EndOfStream","qualname":"::de::error::Error::EndOfStream","value":"Error::EndOfStream","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" The end of the BSON input was reached too soon.\n","sig":null,"attributes":[{"value":"/ The end of the BSON input was reached too soon.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66246,"byte_end":66297,"line_start":31,"line_end":31,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1903},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66381,"byte_end":66397,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"InvalidTimestamp","qualname":"::de::error::Error::InvalidTimestamp","value":"Error::InvalidTimestamp(i64)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" An invalid timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An invalid timestamp was encountered while decoding.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66320,"byte_end":66376,"line_start":34,"line_end":34,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1906},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66472,"byte_end":66490,"line_start":38,"line_end":38,"column_start":5,"column_end":23},"name":"AmbiguousTimestamp","qualname":"::de::error::Error::AmbiguousTimestamp","value":"Error::AmbiguousTimestamp(i64)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" An ambiguous timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An ambiguous timestamp was encountered while decoding.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66409,"byte_end":66467,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":1909},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66623,"byte_end":66643,"line_start":42,"line_end":42,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::de::error::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66502,"byte_end":66557,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66562,"byte_end":66618,"line_start":41,"line_end":41,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1889},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65431,"byte_end":65436,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::error::Error","value":"pub enum Error {\n    IoError(io::Error),\n    FromUtf8Error(string::FromUtf8Error),\n    UnrecognizedDocumentElementType {\n        key: String,\n        element_type: u8,\n    },\n    SyntaxError {\n        message: String,\n    },\n    EndOfStream,\n    InvalidTimestamp(i64),\n    AmbiguousTimestamp(i64),\n    DeserializationError {\n        message: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909}],"decl_id":null,"docs":" Possible errors that can arise during decoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during decoding.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65335,"byte_end":65386,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":65404,"byte_end":65421,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":310},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68355,"byte_end":68361,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Result","qualname":"::de::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68312,"byte_end":68345,"line_start":100,"line_end":100,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":456},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":75488,"byte_end":75500,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::serde::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":457}],"decl_id":null,"docs":" Serde Deserializer\n","sig":null,"attributes":[{"value":"/ Serde Deserializer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":75454,"byte_end":75476,"line_start":242,"line_end":242,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":75562,"byte_end":75565,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(Bson) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":64907,"byte_end":64916,"line_start":369,"line_end":369,"column_start":8,"column_end":17},"name":"from_bson","qualname":"::de::from_bson","value":"pub fn from_bson<T>(Bson) -> Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Decode a BSON `Value` into a `T` Deserializable.\n","sig":null,"attributes":[{"value":"/ Decode a BSON `Value` into a `T` Deserializable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":64847,"byte_end":64899,"line_start":368,"line_end":368,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":666},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":65115,"byte_end":65128,"line_start":378,"line_end":378,"column_start":8,"column_end":21},"name":"from_document","qualname":"::de::from_document","value":"pub fn from_document<T>(Document) -> Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Decode a BSON `Document` into a `T` Deserializable.\n","sig":null,"attributes":[{"value":"/ Decode a BSON `Document` into a `T` Deserializable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/mod.rs","byte_start":65052,"byte_end":65107,"line_start":377,"line_end":377,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":668},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decimal128","qualname":"::decimal128","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":672},{"krate":0,"index":674}],"decl_id":null,"docs":" [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation\n","sig":null,"attributes":[{"value":"/ [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91012,"byte_end":91151,"line_start":1,"line_end":1,"column_start":1,"column_end":140}}]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91965,"byte_end":91975,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Decimal128","qualname":"::decimal128::Decimal128","value":"Decimal128 {  }","parent":null,"children":[{"krate":0,"index":2076}],"decl_id":null,"docs":" Decimal128 type.","sig":null,"attributes":[{"value":"/ Decimal128 type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91218,"byte_end":91238,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91239,"byte_end":91242,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, this type does not have any functionality and can only be serialized and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91243,"byte_end":91330,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/ deserialized from existing documents that contain BSON decimal128s.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91331,"byte_end":91402,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91403,"byte_end":91406,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Experimental functionality can be enabled through the usage of the `\"decimal128\"`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91407,"byte_end":91492,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ feature flag. The flag is not recommended for use however, as it causes `Decimal128` values to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91493,"byte_end":91591,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ serialize to BSON incorrectly. See [this issue](https://github.com/mongodb/bson-rust/issues/282#issuecomment-889958970) for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91592,"byte_end":91719,"line_start":14,"line_end":14,"column_start":1,"column_end":128}},{"value":"/ more information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91720,"byte_end":91741,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91742,"byte_end":91745,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that the API and behavior of the feature-gated functionality are unstable and subject to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91746,"byte_end":91843,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ change, and the feature flag will be removed completely in 2.0.0.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":91844,"byte_end":91913,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"document","qualname":"::document","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":2086},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":822},{"krate":0,"index":826},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":838},{"krate":0,"index":842},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":921}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"/ A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100074,"byte_end":100156,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101018,"byte_end":101028,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"NotPresent","qualname":"::document::ValueAccessError::NotPresent","value":"ValueAccessError::NotPresent","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Cannot find the expected field with the specified key\n","sig":null,"attributes":[{"value":"/ Cannot find the expected field with the specified key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100956,"byte_end":101013,"line_start":33,"line_end":33,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101116,"byte_end":101130,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"UnexpectedType","qualname":"::document::ValueAccessError::UnexpectedType","value":"ValueAccessError::UnexpectedType","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Found a Bson value with the specified key, but not with the expected type\n","sig":null,"attributes":[{"value":"/ Found a Bson value with the specified key, but not with the expected type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101034,"byte_end":101111,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":2086},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100933,"byte_end":100949,"line_start":32,"line_end":32,"column_start":10,"column_end":26},"name":"ValueAccessError","qualname":"::document::ValueAccessError","value":"pub enum ValueAccessError { NotPresent, UnexpectedType, }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2089}],"decl_id":null,"docs":" Error to indicate that either a value was empty or it contained an unexpected\n type, for use with the direct getters.\n","sig":null,"attributes":[{"value":"/ Error to indicate that either a value was empty or it contained an unexpected","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100760,"byte_end":100841,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ type, for use with the direct getters.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100842,"byte_end":100884,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":100906,"byte_end":100923,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":787},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101179,"byte_end":101196,"line_start":40,"line_end":40,"column_start":10,"column_end":27},"name":"ValueAccessResult","qualname":"::document::ValueAccessResult","value":"Result<T, ValueAccessError>","parent":null,"children":[],"decl_id":null,"docs":" Result of accessing Bson value\n","sig":null,"attributes":[{"value":"/ Result of accessing Bson value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101135,"byte_end":101169,"line_start":39,"line_end":39,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2094},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102082,"byte_end":102090,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"Document","qualname":"::document::Document","value":"Document {  }","parent":null,"children":[{"krate":0,"index":2095}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"/ A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101960,"byte_end":102042,"line_start":64,"line_end":64,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102870,"byte_end":102890,"line_start":103,"line_end":103,"column_start":12,"column_end":32},"name":"DocumentIntoIterator","qualname":"::document::DocumentIntoIterator","value":"DocumentIntoIterator {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" An iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An iterator over Document entries.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102820,"byte_end":102858,"line_start":102,"line_end":102,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102993,"byte_end":103009,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"DocumentIterator","qualname":"::document::DocumentIterator","value":"DocumentIterator {  }","parent":null,"children":[{"krate":0,"index":804}],"decl_id":null,"docs":" An owning iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over Document entries.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102936,"byte_end":102981,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103210,"byte_end":103214,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"Keys","qualname":"::document::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" An iterator over an Document's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's keys.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103158,"byte_end":103198,"line_start":114,"line_end":114,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103318,"byte_end":103324,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"Values","qualname":"::document::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":813}],"decl_id":null,"docs":" An iterator over an Document's values.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103264,"byte_end":103306,"line_start":119,"line_end":119,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104788,"byte_end":104791,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<Document>::new","value":"pub fn new() -> Document","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty Document.\n","sig":null,"attributes":[{"value":"/ Creates a new empty Document.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104743,"byte_end":104776,"line_start":187,"line_end":187,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104950,"byte_end":104954,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"iter","qualname":"<Document>::iter","value":"pub fn iter(&Self) -> DocumentIterator","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104889,"byte_end":104938,"line_start":194,"line_end":194,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105077,"byte_end":105082,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"clear","qualname":"<Document>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the document, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the document, removing all values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105020,"byte_end":105065,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105208,"byte_end":105211,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"get","qualname":"<Document>::get","value":"pub fn get(&Self, &str) -> Option<&Bson>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the Bson corresponding to the key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the Bson corresponding to the key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105135,"byte_end":105196,"line_start":204,"line_end":204,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105365,"byte_end":105372,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Document>::get_mut","value":"pub fn get_mut(&mut Self, &str) -> Option<&mut Bson>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the Bson corresponding to the key\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the Bson corresponding to the key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105288,"byte_end":105353,"line_start":209,"line_end":209,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105563,"byte_end":105570,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_f64","qualname":"<Document>::get_f64","value":"pub fn get_f64(&Self, &str) -> ValueAccessResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a floating point value for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105461,"byte_end":105525,"line_start":214,"line_end":214,"column_start":5,"column_end":69}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105530,"byte_end":105551,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105955,"byte_end":105966,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"get_f64_mut","qualname":"<Document>::get_f64_mut","value":"pub fn get_f64_mut(&mut Self, &str) -> ValueAccessResult<&mut f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a floating point value for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105830,"byte_end":105917,"line_start":224,"line_end":224,"column_start":5,"column_end":92}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":105922,"byte_end":105943,"line_start":225,"line_end":225,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107167,"byte_end":107174,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Document>::get_str","value":"pub fn get_str(&Self, &str) -> ValueAccessResult<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a string slice this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107085,"byte_end":107155,"line_start":254,"line_end":254,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107529,"byte_end":107540,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"get_str_mut","qualname":"<Document>::get_str_mut","value":"pub fn get_str_mut(&mut Self, &str) -> ValueAccessResult<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable string slice this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107439,"byte_end":107517,"line_start":263,"line_end":263,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107928,"byte_end":107937,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"get_array","qualname":"<Document>::get_array","value":"pub fn get_array(&Self, &str) -> ValueAccessResult<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an array for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107825,"byte_end":107890,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":107895,"byte_end":107916,"line_start":273,"line_end":273,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108314,"byte_end":108327,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"get_array_mut","qualname":"<Document>::get_array_mut","value":"pub fn get_array_mut(&mut Self, &str) -> ValueAccessResult<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an array for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108203,"byte_end":108276,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108281,"byte_end":108302,"line_start":283,"line_end":283,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108718,"byte_end":108730,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"get_document","qualname":"<Document>::get_document","value":"pub fn get_document(&Self, &str) -> ValueAccessResult<&Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a document for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108613,"byte_end":108680,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":108685,"byte_end":108706,"line_start":293,"line_end":293,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109115,"byte_end":109131,"line_start":304,"line_end":304,"column_start":12,"column_end":28},"name":"get_document_mut","qualname":"<Document>::get_document_mut","value":"pub fn get_document_mut(&mut Self, &str) -> ValueAccessResult<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a document for this key if it exists and has","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109002,"byte_end":109077,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109082,"byte_end":109103,"line_start":303,"line_end":303,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109507,"byte_end":109515,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Document>::get_bool","value":"pub fn get_bool(&Self, &str) -> ValueAccessResult<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a bool value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109423,"byte_end":109495,"line_start":312,"line_end":312,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109884,"byte_end":109896,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"get_bool_mut","qualname":"<Document>::get_bool_mut","value":"pub fn get_bool_mut(&mut Self, &str) -> ValueAccessResult<&mut bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a bool value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":109777,"byte_end":109872,"line_start":321,"line_end":321,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110239,"byte_end":110246,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Document>::is_null","value":"pub fn is_null(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns wether this key has a null value\n","sig":null,"attributes":[{"value":"/ Returns wether this key has a null value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110183,"byte_end":110227,"line_start":330,"line_end":330,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110413,"byte_end":110420,"line_start":336,"line_end":336,"column_start":12,"column_end":19},"name":"get_i32","qualname":"<Document>::get_i32","value":"pub fn get_i32(&Self, &str) -> ValueAccessResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i32 value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110329,"byte_end":110401,"line_start":335,"line_end":335,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110786,"byte_end":110797,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"get_i32_mut","qualname":"<Document>::get_i32_mut","value":"pub fn get_i32_mut(&mut Self, &str) -> ValueAccessResult<&mut i32>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i32 value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":110679,"byte_end":110774,"line_start":344,"line_end":344,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111165,"byte_end":111172,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"get_i64","qualname":"<Document>::get_i64","value":"pub fn get_i64(&Self, &str) -> ValueAccessResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i64 value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111081,"byte_end":111153,"line_start":353,"line_end":353,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111538,"byte_end":111549,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"get_i64_mut","qualname":"<Document>::get_i64_mut","value":"pub fn get_i64_mut(&mut Self, &str) -> ValueAccessResult<&mut i64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i64 value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111431,"byte_end":111526,"line_start":362,"line_end":362,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111923,"byte_end":111936,"line_start":372,"line_end":372,"column_start":12,"column_end":25},"name":"get_timestamp","qualname":"<Document>::get_timestamp","value":"pub fn get_timestamp(&Self, &str) -> ValueAccessResult<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a time stamp value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a time stamp value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":111833,"byte_end":111911,"line_start":371,"line_end":371,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112342,"byte_end":112359,"line_start":382,"line_end":382,"column_start":12,"column_end":29},"name":"get_timestamp_mut","qualname":"<Document>::get_timestamp_mut","value":"pub fn get_timestamp_mut(&mut Self, &str) -> ValueAccessResult<&mut Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a time stamp value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a time stamp value for this key if it exists and has the correct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112221,"byte_end":112316,"line_start":380,"line_end":380,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112321,"byte_end":112330,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112786,"byte_end":112804,"line_start":392,"line_end":392,"column_start":12,"column_end":30},"name":"get_binary_generic","qualname":"<Document>::get_binary_generic","value":"pub fn get_binary_generic(&Self, &str) -> ValueAccessResult<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a generic binary value for this key if it exists and has the correct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112669,"byte_end":112760,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":112765,"byte_end":112774,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":113290,"byte_end":113312,"line_start":405,"line_end":405,"column_start":12,"column_end":34},"name":"get_binary_generic_mut","qualname":"<Document>::get_binary_generic_mut","value":"pub fn get_binary_generic_mut(&mut Self, &str)\n-> ValueAccessResult<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference generic binary value for this key if it exists and has the correct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":113170,"byte_end":113264,"line_start":403,"line_end":403,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":113269,"byte_end":113278,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":113803,"byte_end":113816,"line_start":417,"line_end":417,"column_start":12,"column_end":25},"name":"get_object_id","qualname":"<Document>::get_object_id","value":"pub fn get_object_id(&Self, &str) -> ValueAccessResult<&ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an object id value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an object id value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":113698,"byte_end":113791,"line_start":416,"line_end":416,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114209,"byte_end":114226,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"get_object_id_mut","qualname":"<Document>::get_object_id_mut","value":"pub fn get_object_id_mut(&mut Self, &str) -> ValueAccessResult<&mut ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an object id value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an object id value for this key if it exists and has the correct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114088,"byte_end":114183,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114188,"byte_end":114197,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114625,"byte_end":114637,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Document>::get_datetime","value":"pub fn get_datetime(&Self, &str) -> ValueAccessResult<&DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a UTC datetime value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a UTC datetime value for this key if it exists and has the correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114518,"byte_end":114613,"line_start":435,"line_end":435,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115037,"byte_end":115053,"line_start":446,"line_end":446,"column_start":12,"column_end":28},"name":"get_datetime_mut","qualname":"<Document>::get_datetime_mut","value":"pub fn get_datetime_mut(&mut Self, &str)\n-> ValueAccessResult<&mut DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a UTC datetime value for this key if it exists and has the\n correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a UTC datetime value for this key if it exists and has the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":114914,"byte_end":115003,"line_start":444,"line_end":444,"column_start":5,"column_end":94}},{"value":"/ correct type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115008,"byte_end":115025,"line_start":445,"line_end":445,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115429,"byte_end":115441,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Document>::contains_key","value":"pub fn contains_key(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115350,"byte_end":115417,"line_start":454,"line_end":454,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115580,"byte_end":115584,"line_start":460,"line_end":460,"column_start":12,"column_end":16},"name":"keys","qualname":"<Document>::keys","value":"pub fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all keys in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all keys in the document.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115518,"byte_end":115568,"line_start":459,"line_end":459,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115896,"byte_end":115902,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"values","qualname":"<Document>::values","value":"pub fn values<'a>(&'a Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all values in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all values in the document.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":115832,"byte_end":115884,"line_start":471,"line_end":471,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116219,"byte_end":116222,"line_start":484,"line_end":484,"column_start":12,"column_end":15},"name":"len","qualname":"<Document>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the document.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the document.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116156,"byte_end":116207,"line_start":483,"line_end":483,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116342,"byte_end":116350,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Document>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the document contains no elements\n","sig":null,"attributes":[{"value":"/ Returns true if the document contains no elements","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116277,"byte_end":116330,"line_start":488,"line_end":488,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116583,"byte_end":116589,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"insert","qualname":"<Document>::insert","value":"pub fn insert<KT: Into<String>, BT: Into<Bson>>(&mut Self, KT, BT)\n-> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the OccupiedEntry's key,\n and returns the entry's old value. Accepts any type that\n can be converted into Bson.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the OccupiedEntry's key,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116409,"byte_end":116470,"line_start":493,"line_end":493,"column_start":5,"column_end":66}},{"value":"/ and returns the entry's old value. Accepts any type that","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116475,"byte_end":116535,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ can be converted into Bson.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116540,"byte_end":116571,"line_start":495,"line_end":495,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116813,"byte_end":116819,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"remove","qualname":"<Document>::remove","value":"pub fn remove(&mut Self, &str) -> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the document, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the document, and returns it.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116732,"byte_end":116801,"line_start":500,"line_end":500,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":116909,"byte_end":116914,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"entry","qualname":"<Document>::entry","value":"pub fn entry(&mut Self, String) -> Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":117097,"byte_end":117106,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<Document>::to_writer","value":"pub fn to_writer<W: Write + ?Sized>(&Self, &mut W) -> crate::ser::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize the `Document` into a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize the `Document` into a byte stream.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":117025,"byte_end":117085,"line_start":511,"line_end":511,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118645,"byte_end":118656,"line_start":563,"line_end":563,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Document>::from_reader","value":"pub fn from_reader<R: Read + ?Sized>(&mut R) -> crate::de::Result<Document>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to deserialize a `Document` from a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a `Document` from a byte stream.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118573,"byte_end":118633,"line_start":562,"line_end":562,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119170,"byte_end":119192,"line_start":573,"line_end":573,"column_start":12,"column_end":34},"name":"from_reader_utf8_lossy","qualname":"<Document>::from_reader_utf8_lossy","value":"pub fn from_reader_utf8_lossy<R: Read + ?Sized>(&mut R)\n-> crate::de::Result<Document>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to deserialize a `Document` that may contain invalid UTF-8 strings from a byte\n stream.","sig":null,"attributes":[{"value":"/ Attempt to deserialize a `Document` that may contain invalid UTF-8 strings from a byte","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118771,"byte_end":118861,"line_start":567,"line_end":567,"column_start":5,"column_end":95}},{"value":"/ stream.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118866,"byte_end":118877,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118882,"byte_end":118885,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is mainly useful when reading raw BSON returned from a MongoDB server, which","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118890,"byte_end":118975,"line_start":570,"line_end":570,"column_start":5,"column_end":90}},{"value":"/ in rare cases can contain invalidly truncated strings (https://jira.mongodb.org/browse/SERVER-24007).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":118980,"byte_end":119085,"line_start":571,"line_end":571,"column_start":5,"column_end":110}},{"value":"/ For most use cases, `Document::from_reader` can be used instead.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119090,"byte_end":119158,"line_start":572,"line_end":572,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":898},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119315,"byte_end":119320,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Entry","qualname":"::document::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":900}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119415,"byte_end":119418,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119479,"byte_end":119488,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Bson) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119584,"byte_end":119598,"line_start":591,"line_end":591,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> Bson>(Self, F) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119876,"byte_end":119891,"line_start":602,"line_end":602,"column_start":12,"column_end":27},"name":"DocumentVisitor","qualname":"::document::DocumentVisitor","value":"DocumentVisitor {  }","parent":null,"children":[{"krate":0,"index":910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":120008,"byte_end":120011,"line_start":608,"line_end":608,"column_start":12,"column_end":15},"name":"new","qualname":"<DocumentVisitor>::new","value":"pub fn new() -> DocumentVisitor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119959,"byte_end":119996,"line_start":607,"line_end":607,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":924},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extjson","qualname":"::extjson","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":979}],"decl_id":null,"docs":" Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"/ Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121084,"byte_end":121217,"line_start":1,"line_end":1,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121218,"byte_end":121221,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Overview of Extended JSON","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121222,"byte_end":121254,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121255,"byte_end":121258,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ MongoDB Extended JSON (abbreviated extJSON) is format of JSON that allows for the encoding of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121259,"byte_end":121356,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ BSON type information. Normal JSON cannot unambiguously represent all BSON types losslessly, so","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121357,"byte_end":121456,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ an extension was designed to include conventions for representing those types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121457,"byte_end":121539,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121540,"byte_end":121543,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For example, a BSON binary is represented by the following format:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121544,"byte_end":121614,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121615,"byte_end":121626,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121627,"byte_end":121632,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/    \"$binary\": {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121633,"byte_end":121652,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/        \"base64\": <base64 encoded payload as a string>,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121653,"byte_end":121711,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/        \"subType\": <subtype as a one or two character hex string>,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121712,"byte_end":121781,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121782,"byte_end":121790,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121791,"byte_end":121796,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121797,"byte_end":121804,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ For more information on extJSON and the complete list of translations, see the [official MongoDB documentation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121805,"byte_end":121987,"line_start":18,"line_end":18,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121988,"byte_end":121991,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ All MongoDB drivers and BSON libraries interpret and produce extJSON, so it can serve as a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":121992,"byte_end":122086,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ useful tool for communicating between applications where raw BSON bytes cannot be used (e.g. via","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122087,"byte_end":122187,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ JSON REST APIs). It's also useful for representing BSON data as a string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122188,"byte_end":122265,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122266,"byte_end":122269,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ### Canonical and Relaxed Modes","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122270,"byte_end":122305,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122306,"byte_end":122309,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ There are two modes of extJSON: \"Canonical\" and \"Relaxed\". They are the same except for the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122310,"byte_end":122405,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ following differences:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122406,"byte_end":122432,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/   - In relaxed mode, all BSON numbers are represented by the JSON number type, rather than the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122433,"byte_end":122531,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/     object","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122532,"byte_end":122546,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ notation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122547,"byte_end":122560,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/   - In relaxed mode, the string in the datetime object notation is ISO-8601 formatted (if the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122561,"byte_end":122658,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/     date is after 1970).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122659,"byte_end":122687,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122688,"byte_end":122691,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122692,"byte_end":122700,"line_start":34,"line_end":34,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122701,"byte_end":122712,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use bson::bson;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122713,"byte_end":122734,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ let doc = bson!({ \"x\": 5, \"d\": chrono::Utc::now() });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122735,"byte_end":122792,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122793,"byte_end":122796,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ println!(\"relaxed: {}\", doc.clone().into_relaxed_extjson());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122797,"byte_end":122861,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ // relaxed: \"{\"x\":5,\"d\":{\"$date\":\"2020-06-01T22:19:13.075Z\"}}\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122862,"byte_end":122928,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122929,"byte_end":122932,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ println!(\"canonical: {}\", doc.into_canonical_extjson());","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122933,"byte_end":122993,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ // canonical: {\"x\":{\"$numberInt\":\"5\"},\"d\":{\"$date\":{\"$numberLong\":\"1591050020711\"}}}","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":122994,"byte_end":123082,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123083,"byte_end":123090,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123091,"byte_end":123094,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Canonical mode is useful when BSON values need to be round tripped without losing any type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123095,"byte_end":123189,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ information. Relaxed mode is more useful when debugging or logging BSON data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123190,"byte_end":123271,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123272,"byte_end":123275,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Deserializing Extended JSON","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123276,"byte_end":123310,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123311,"byte_end":123314,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be deserialized using [`Bson`](../enum.Bson.html)'s","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123315,"byte_end":123388,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123389,"byte_end":123484,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123485,"byte_end":123573,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123574,"byte_end":123577,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123578,"byte_end":123586,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123587,"byte_end":123598,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # use bson::Bson;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123599,"byte_end":123620,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123621,"byte_end":123648,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ # use std::convert::{TryFrom, TryInto};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123649,"byte_end":123692,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/ let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123693,"byte_end":123789,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123790,"byte_end":123863,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123864,"byte_end":123867,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123868,"byte_end":123943,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":123944,"byte_end":124023,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124024,"byte_end":124027,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124028,"byte_end":124083,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/ Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124084,"byte_end":124156,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124157,"byte_end":124164,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124165,"byte_end":124168,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Serializing to Extended JSON","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124169,"byte_end":124204,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124205,"byte_end":124208,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be created via [`Bson`](../enum.Bson.html)'s `Into<serde_json::Value>`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124209,"byte_end":124301,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"/ implementation (which will create relaxed extJSON),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124302,"byte_end":124357,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ [`Bson::into_relaxed_extjson`](../enum.Bson.html#method.into_relaxed_extjson), and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124358,"byte_end":124444,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/ [`Bson::into_canonical_extjson`](../enum.Bson.html#method.into_canonical_extjson).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124445,"byte_end":124531,"line_start":75,"line_end":75,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124532,"byte_end":124535,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124536,"byte_end":124544,"line_start":77,"line_end":77,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124545,"byte_end":124556,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, oid};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124557,"byte_end":124585,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/ let doc = bson!({ \"x\": 5i32, \"_id\": oid::ObjectId::new() });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124586,"byte_end":124650,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124651,"byte_end":124654,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let relaxed_extjson: serde_json::Value = doc.clone().into();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124655,"byte_end":124719,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"/ println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124720,"byte_end":124802,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124803,"byte_end":124806,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let relaxed_extjson = doc.clone().into_relaxed_extjson();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124807,"byte_end":124868,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124869,"byte_end":124951,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124952,"byte_end":124955,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let canonical_extjson = doc.into_canonical_extjson();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":124956,"byte_end":125013,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/ println!(\"{}\", canonical_extjson); // { \"x\": { \"$numberInt\": \"5\" }, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":125014,"byte_end":125118,"line_start":89,"line_end":89,"column_start":1,"column_end":105}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":125119,"byte_end":125126,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":925},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::extjson::de","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":2102},{"krate":0,"index":2108},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":975}],"decl_id":null,"docs":" Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"/ Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125153,"byte_end":125263,"line_start":1,"line_end":1,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125264,"byte_end":125267,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125268,"byte_end":125280,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125281,"byte_end":125284,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be deserialized using [`Bson`](../../enum.Bson.html)'s","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125285,"byte_end":125361,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125362,"byte_end":125457,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125458,"byte_end":125546,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125547,"byte_end":125550,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125551,"byte_end":125559,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125560,"byte_end":125571,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ # use bson::Bson;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125572,"byte_end":125593,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125594,"byte_end":125621,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ # use std::convert::{TryFrom, TryInto};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125622,"byte_end":125665,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125666,"byte_end":125762,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125763,"byte_end":125836,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125837,"byte_end":125840,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125841,"byte_end":125916,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125917,"byte_end":125996,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":125997,"byte_end":126000,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126001,"byte_end":126056,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126057,"byte_end":126129,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126130,"byte_end":126137,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2103},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126560,"byte_end":126575,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"InvalidObjectId","qualname":"::extjson::de::Error::InvalidObjectId","value":"Error::InvalidObjectId(oid::Error)","parent":{"krate":0,"index":2102},"children":[],"decl_id":null,"docs":" Errors that can occur during OID construction and generation from the input data.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation from the input data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126470,"byte_end":126555,"line_start":34,"line_end":34,"column_start":5,"column_end":90}}]},{"kind":"StructVariant","id":{"krate":0,"index":2106},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126715,"byte_end":126735,"line_start":39,"line_end":39,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::extjson::de::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":2102},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126594,"byte_end":126649,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126654,"byte_end":126710,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":2102},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126458,"byte_end":126463,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::extjson::de::Error","value":"pub enum Error {\n    InvalidObjectId(oid::Error),\n    DeserializationError {\n        message: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2106}],"decl_id":null,"docs":" Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126289,"byte_end":126306,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126307,"byte_end":126448,"line_start":32,"line_end":32,"column_start":1,"column_end":142}}]},{"kind":"Type","id":{"krate":0,"index":963},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127597,"byte_end":127603,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"name":"Result","qualname":"::extjson::de::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1040},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oid","qualname":"::oid","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2935},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1128},{"krate":0,"index":1130}],"decl_id":null,"docs":" ObjectId\n","sig":null,"attributes":[{"value":"/ ObjectId","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":142721,"byte_end":142733,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"StructVariant","id":{"krate":0,"index":2930},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143584,"byte_end":143597,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"ArgumentError","qualname":"::oid::Error::ArgumentError","value":"Error::ArgumentError { message }","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" An invalid argument was passed in.\n","sig":null,"attributes":[{"value":"/ An invalid argument was passed in.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143541,"byte_end":143579,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2932},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143671,"byte_end":143683,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"FromHexError","qualname":"::oid::Error::FromHexError","value":"Error::FromHexError(FromHexError)","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" An error occured parsing a hex string.\n","sig":null,"attributes":[{"value":"/ An error occured parsing a hex string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143624,"byte_end":143666,"line_start":40,"line_end":40,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2929},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143529,"byte_end":143534,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::oid::Error","value":"pub enum Error {\n    ArgumentError {\n        message: String,\n    },\n    FromHexError(FromHexError),\n}","parent":null,"children":[{"krate":0,"index":2930},{"krate":0,"index":2932}],"decl_id":null,"docs":" Errors that can occur during OID construction and generation.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143419,"byte_end":143484,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143502,"byte_end":143519,"line_start":35,"line_end":35,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143868,"byte_end":143874,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Result","qualname":"::oid::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for Result<T, oid::Error>.\n","sig":null,"attributes":[{"value":"/ Alias for Result<T, oid::Error>.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143822,"byte_end":143858,"line_start":50,"line_end":50,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2937},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144526,"byte_end":144534,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"ObjectId","qualname":"::oid::ObjectId","value":"ObjectId {  }","parent":null,"children":[{"krate":0,"index":2938}],"decl_id":null,"docs":" A wrapper around raw 12-byte ObjectId representations.\n","sig":null,"attributes":[{"value":"/ A wrapper around raw 12-byte ObjectId representations.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144401,"byte_end":144459,"line_start":71,"line_end":71,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144987,"byte_end":144990,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<ObjectId>::new","value":"pub fn new() -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Generates a new ObjectID, represented in bytes.\n See the [docs](http://docs.mongodb.org/manual/reference/object-id/)\n for more information.\n","sig":null,"attributes":[{"value":"/ Generates a new ObjectID, represented in bytes.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144818,"byte_end":144869,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/ See the [docs](http://docs.mongodb.org/manual/reference/object-id/)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144874,"byte_end":144945,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ for more information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144950,"byte_end":144975,"line_start":94,"line_end":94,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":145708,"byte_end":145718,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"with_bytes","qualname":"<ObjectId>::with_bytes","value":"pub fn with_bytes([u8; ]) -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ObjectId wrapper around the raw byte representation.\n","sig":null,"attributes":[{"value":"/ Constructs a new ObjectId wrapper around the raw byte representation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":145623,"byte_end":145696,"line_start":111,"line_end":111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":145873,"byte_end":145884,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_string","qualname":"<ObjectId>::with_string","value":"pub fn with_string(&str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Creates an ObjectID using a 12-byte (24-char) hexadecimal string.\n","sig":null,"attributes":[{"value":"/ Creates an ObjectID using a 12-byte (24-char) hexadecimal string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":145792,"byte_end":145861,"line_start":116,"line_end":116,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":146422,"byte_end":146431,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<ObjectId>::timestamp","value":"pub fn timestamp(&Self) -> chrono::DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the timestamp (chrono::DateTime) from an ObjectId.\n","sig":null,"attributes":[{"value":"/ Retrieves the timestamp (chrono::DateTime) from an ObjectId.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":146346,"byte_end":146410,"line_start":130,"line_end":130,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":146892,"byte_end":146897,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ObjectId>::bytes","value":"pub fn bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw byte representation of an ObjectId.\n","sig":null,"attributes":[{"value":"/ Returns the raw byte representation of an ObjectId.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":146825,"byte_end":146880,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":147005,"byte_end":147011,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<ObjectId>::to_hex","value":"pub fn to_hex(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert the objectId to hex representation.\n","sig":null,"attributes":[{"value":"/ Convert the objectId to hex representation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":146946,"byte_end":146993,"line_start":146,"line_end":146,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1164},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434}],"decl_id":null,"docs":" Serializer\n","sig":null,"attributes":[{"value":"/ Serializer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":153090,"byte_end":153104,"line_start":22,"line_end":22,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2974},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158749,"byte_end":158756,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::ser::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158637,"byte_end":158744,"line_start":11,"line_end":11,"column_start":5,"column_end":112}}]},{"kind":"StructVariant","id":{"krate":0,"index":2977},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158830,"byte_end":158847,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"name":"InvalidMapKeyType","qualname":"::ser::error::Error::InvalidMapKeyType","value":"Error::InvalidMapKeyType { key }","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" A key could not be serialized to a BSON string.\n","sig":null,"attributes":[{"value":"/ A key could not be serialized to a BSON string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158774,"byte_end":158825,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2979},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159081,"byte_end":159099,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"SerializationError","qualname":"::ser::error::Error::SerializationError","value":"Error::SerializationError { message }","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" A general error that ocurred during serialization.\n See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom\n","sig":null,"attributes":[{"value":"/ A general error that ocurred during serialization.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158936,"byte_end":158990,"line_start":20,"line_end":20,"column_start":5,"column_end":59}},{"value":"/ See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158995,"byte_end":159076,"line_start":21,"line_end":21,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2981},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159471,"byte_end":159494,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"name":"UnsupportedUnsignedType","qualname":"::ser::error::Error::UnsupportedUnsignedType","value":"Error::UnsupportedUnsignedType","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" Returned when serialization of an unsigned integer was attempted. BSON only supports\n 32-bit and 64-bit signed integers.","sig":null,"attributes":[{"value":"cfg(not(feature = \"u2i\"))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159183,"byte_end":159211,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ Returned when serialization of an unsigned integer was attempted. BSON only supports","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159216,"byte_end":159304,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ 32-bit and 64-bit signed integers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159309,"byte_end":159347,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159352,"byte_end":159355,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ To allow serialization of unsigned integers as signed integers, enable the \"u2i\" feature","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159360,"byte_end":159452,"line_start":31,"line_end":31,"column_start":5,"column_end":97}},{"value":"/ flag.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159457,"byte_end":159466,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":2973},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158625,"byte_end":158630,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::error::Error","value":"pub enum Error {\n    IoError(io::Error),\n    InvalidMapKeyType {\n        key: Bson,\n    },\n    SerializationError {\n        message: String,\n    },\n    UnsupportedUnsignedType,\n}","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":2981}],"decl_id":null,"docs":" Possible errors that can arise during encoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during encoding.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158529,"byte_end":158580,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":158598,"byte_end":158615,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":161006,"byte_end":161012,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Result","qualname":"::ser::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":160963,"byte_end":160996,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163239,"byte_end":163249,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::serde::Serializer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Serde Serializer\n","sig":null,"attributes":[{"value":"/ Serde Serializer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163207,"byte_end":163227,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163361,"byte_end":163364,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new() -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Serializer`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Serializer`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163274,"byte_end":163307,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163312,"byte_end":163349,"line_start":91,"line_end":91,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":169914,"byte_end":169929,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"ArraySerializer","qualname":"::ser::serde::ArraySerializer","value":"ArraySerializer {  }","parent":null,"children":[{"krate":0,"index":1290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170318,"byte_end":170333,"line_start":371,"line_end":371,"column_start":12,"column_end":27},"name":"TupleSerializer","qualname":"::ser::serde::TupleSerializer","value":"TupleSerializer {  }","parent":null,"children":[{"krate":0,"index":1298}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170724,"byte_end":170745,"line_start":390,"line_end":390,"column_start":12,"column_end":33},"name":"TupleStructSerializer","qualname":"::ser::serde::TupleStructSerializer","value":"TupleStructSerializer {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1313},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171146,"byte_end":171168,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"TupleVariantSerializer","qualname":"::ser::serde::TupleVariantSerializer","value":"TupleVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171694,"byte_end":171707,"line_start":431,"line_end":431,"column_start":12,"column_end":25},"name":"MapSerializer","qualname":"::ser::serde::MapSerializer","value":"MapSerializer {  }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1333},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":172496,"byte_end":172512,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"StructSerializer","qualname":"::ser::serde::StructSerializer","value":"StructSerializer {  }","parent":null,"children":[{"krate":0,"index":1334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":172980,"byte_end":173003,"line_start":483,"line_end":483,"column_start":12,"column_end":35},"name":"StructVariantSerializer","qualname":"::ser::serde::StructVariantSerializer","value":"StructVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":157881,"byte_end":157888,"line_start":186,"line_end":186,"column_start":8,"column_end":15},"name":"to_bson","qualname":"::ser::to_bson","value":"pub fn to_bson<T: ?Sized>(&T) -> Result<Bson> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Encode a `T` Serializable into a BSON `Value`.\n","sig":null,"attributes":[{"value":"/ Encode a `T` Serializable into a BSON `Value`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":157823,"byte_end":157873,"line_start":185,"line_end":185,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1434},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":158075,"byte_end":158086,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"to_document","qualname":"::ser::to_document","value":"pub fn to_document<T: ?Sized>(&T) -> Result<Document> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Encode a `T` Serializable into a BSON `Document`.\n","sig":null,"attributes":[{"value":"/ Encode a `T` Serializable into a BSON `Document`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/mod.rs","byte_start":158014,"byte_end":158067,"line_start":194,"line_end":194,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1436},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_helpers","qualname":"::serde_helpers","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1535},{"krate":0,"index":1572},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1640},{"krate":0,"index":1669}],"decl_id":null,"docs":" Collection of helper functions for serializing to and deserializing from BSON using Serde\n","sig":null,"attributes":[{"value":"/ Collection of helper functions for serializing to and deserializing from BSON using Serde","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":175505,"byte_end":175598,"line_start":1,"line_end":1,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1499},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176683,"byte_end":176703,"line_start":35,"line_end":35,"column_start":8,"column_end":28},"name":"serialize_u32_as_i32","qualname":"::serde_helpers::serialize_u32_as_i32","value":"pub fn serialize_u32_as_i32<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u32 as an i32. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u32 as an i32. Errors if an exact conversion is not possible.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176586,"byte_end":176675,"line_start":34,"line_end":34,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1501},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176989,"byte_end":177009,"line_start":43,"line_end":43,"column_start":8,"column_end":28},"name":"serialize_u32_as_i64","qualname":"::serde_helpers::serialize_u32_as_i64","value":"pub fn serialize_u32_as_i64<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a u32 as an i64.\n","sig":null,"attributes":[{"value":"/ Serializes a u32 as an i64.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":176950,"byte_end":176981,"line_start":42,"line_end":42,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1503},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177222,"byte_end":177242,"line_start":48,"line_end":48,"column_start":8,"column_end":28},"name":"serialize_u64_as_i32","qualname":"::serde_helpers::serialize_u64_as_i32","value":"pub fn serialize_u64_as_i32<S: Serializer>(&u64, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u64 as an i32. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u64 as an i32. Errors if an exact conversion is not possible.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177125,"byte_end":177214,"line_start":47,"line_end":47,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1505},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177586,"byte_end":177606,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"serialize_u64_as_i64","qualname":"::serde_helpers::serialize_u64_as_i64","value":"pub fn serialize_u64_as_i64<S: Serializer>(&u64, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u64 as an i64. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u64 as an i64. Errors if an exact conversion is not possible.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177489,"byte_end":177578,"line_start":55,"line_end":55,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":1507},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178302,"byte_end":178334,"line_start":75,"line_end":75,"column_start":9,"column_end":41},"name":"chrono_datetime_as_bson_datetime","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533}],"decl_id":null,"docs":" Contains functions to serialize a chrono::DateTime as a bson::DateTime and deserialize a\n chrono::DateTime from a bson::DateTime.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a chrono::DateTime as a bson::DateTime and deserialize a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177853,"byte_end":177945,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"/ chrono::DateTime from a bson::DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177946,"byte_end":177989,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177990,"byte_end":177993,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":177994,"byte_end":178005,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178006,"byte_end":178048,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::chrono_datetime_as_bson_datetime;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178049,"byte_end":178113,"line_start":68,"line_end":68,"column_start":1,"column_end":65}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178114,"byte_end":178151,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178152,"byte_end":178170,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"chrono_datetime_as_bson_datetime\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178171,"byte_end":178230,"line_start":71,"line_end":71,"column_start":1,"column_end":60}},{"value":"/     pub date: chrono::DateTime<chrono::Utc>,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178231,"byte_end":178279,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178280,"byte_end":178285,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178286,"byte_end":178293,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1530},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178554,"byte_end":178565,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<chrono::DateTime<Utc>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a chrono::DateTime from a bson::DateTime.\n","sig":null,"attributes":[{"value":"/ Deserializes a chrono::DateTime from a bson::DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178484,"byte_end":178542,"line_start":81,"line_end":81,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":1533},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178846,"byte_end":178855,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime::serialize","value":"pub fn serialize<S: Serializer>(&chrono::DateTime<Utc>, S)\n-> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a chrono::DateTime as a bson::DateTime.\n","sig":null,"attributes":[{"value":"/ Serializes a chrono::DateTime as a bson::DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":178780,"byte_end":178834,"line_start":90,"line_end":90,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1535},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179476,"byte_end":179503,"line_start":112,"line_end":112,"column_start":9,"column_end":36},"name":"iso_string_as_bson_datetime","qualname":"::serde_helpers::iso_string_as_bson_datetime","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569}],"decl_id":null,"docs":" Contains functions to serialize an ISO string as a bson::DateTime and deserialize an ISO string\n from a bson::DateTime.","sig":null,"attributes":[{"value":"/ Contains functions to serialize an ISO string as a bson::DateTime and deserialize an ISO string","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179070,"byte_end":179169,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ from a bson::DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179170,"byte_end":179196,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179197,"byte_end":179200,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179201,"byte_end":179212,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179213,"byte_end":179255,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::iso_string_as_bson_datetime;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179256,"byte_end":179315,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179316,"byte_end":179353,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179354,"byte_end":179372,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"iso_string_as_bson_datetime\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179373,"byte_end":179427,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/     pub date: String,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179428,"byte_end":179453,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179454,"byte_end":179459,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179460,"byte_end":179467,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1566},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179720,"byte_end":179731,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::iso_string_as_bson_datetime::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<String, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an ISO string from a DateTime.\n","sig":null,"attributes":[{"value":"/ Deserializes an ISO string from a DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179661,"byte_end":179708,"line_start":117,"line_end":117,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":1569},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179983,"byte_end":179992,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::iso_string_as_bson_datetime::serialize","value":"pub fn serialize<S: Serializer>(&str, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ISO string as a DateTime.\n","sig":null,"attributes":[{"value":"/ Serializes an ISO string as a DateTime.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":179928,"byte_end":179971,"line_start":126,"line_end":126,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1572},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180701,"byte_end":180728,"line_start":147,"line_end":147,"column_start":9,"column_end":36},"name":"bson_datetime_as_iso_string","qualname":"::serde_helpers::bson_datetime_as_iso_string","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1600}],"decl_id":null,"docs":" Contains functions to serialize a bson::DateTime as an ISO string and deserialize a\n bson::DateTime from an ISO string.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a bson::DateTime as an ISO string and deserialize a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180287,"byte_end":180374,"line_start":135,"line_end":135,"column_start":1,"column_end":88}},{"value":"/ bson::DateTime from an ISO string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180375,"byte_end":180413,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180414,"byte_end":180417,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180418,"byte_end":180429,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180430,"byte_end":180472,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::bson_datetime_as_iso_string;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180473,"byte_end":180532,"line_start":140,"line_end":140,"column_start":1,"column_end":60}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180533,"byte_end":180570,"line_start":141,"line_end":141,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180571,"byte_end":180589,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"bson_datetime_as_iso_string\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180590,"byte_end":180644,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     pub date: bson::DateTime,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180645,"byte_end":180678,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180679,"byte_end":180684,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180685,"byte_end":180692,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1596},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180931,"byte_end":180942,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::bson_datetime_as_iso_string::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<DateTime, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a bson::DateTime from an ISO string.\n","sig":null,"attributes":[{"value":"/ Deserializes a bson::DateTime from an ISO string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":180866,"byte_end":180919,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1600},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181367,"byte_end":181376,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::bson_datetime_as_iso_string::serialize","value":"pub fn serialize<S: Serializer>(&DateTime, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a bson::DateTime as an ISO string.\n","sig":null,"attributes":[{"value":"/ Serializes a bson::DateTime as an ISO string.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181306,"byte_end":181355,"line_start":164,"line_end":164,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1602},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181563,"byte_end":181596,"line_start":171,"line_end":171,"column_start":8,"column_end":41},"name":"serialize_hex_string_as_object_id","qualname":"::serde_helpers::serialize_hex_string_as_object_id","value":"pub fn serialize_hex_string_as_object_id<S: Serializer>(&str, S)\n-> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a hex string as an ObjectId.\n","sig":null,"attributes":[{"value":"/ Serializes a hex string as an ObjectId.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181512,"byte_end":181555,"line_start":170,"line_end":170,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1604},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182275,"byte_end":182289,"line_start":197,"line_end":197,"column_start":9,"column_end":23},"name":"uuid_as_binary","qualname":"::serde_helpers::uuid_as_binary","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1636}],"decl_id":null,"docs":" Contains functions to serialize a Uuid as a bson::Binary and deserialize a Uuid from a\n bson::Binary.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a Uuid as a bson::Binary and deserialize a Uuid from a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181896,"byte_end":181986,"line_start":184,"line_end":184,"column_start":1,"column_end":91}},{"value":"/ bson::Binary.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":181987,"byte_end":182004,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182005,"byte_end":182008,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182009,"byte_end":182020,"line_start":187,"line_end":187,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182021,"byte_end":182063,"line_start":188,"line_end":188,"column_start":1,"column_end":43}},{"value":"/ # use uuid::Uuid;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182064,"byte_end":182085,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"/ # use bson::serde_helpers::uuid_as_binary;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182086,"byte_end":182132,"line_start":190,"line_end":190,"column_start":1,"column_end":47}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182133,"byte_end":182170,"line_start":191,"line_end":191,"column_start":1,"column_end":38}},{"value":"/ struct Item {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182171,"byte_end":182188,"line_start":192,"line_end":192,"column_start":1,"column_end":18}},{"value":"/     #[serde(with = \"uuid_as_binary\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182189,"byte_end":182230,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/     pub id: Uuid,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182231,"byte_end":182252,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182253,"byte_end":182258,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182259,"byte_end":182266,"line_start":196,"line_end":196,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1634},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182509,"byte_end":182518,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::uuid_as_binary::serialize","value":"pub fn serialize<S: Serializer>(&Uuid, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a Uuid as a Binary.\n","sig":null,"attributes":[{"value":"/ Serializes a Uuid as a Binary.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182463,"byte_end":182497,"line_start":203,"line_end":203,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1636},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182815,"byte_end":182826,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::uuid_as_binary::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Uuid, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a Uuid from a Binary.\n","sig":null,"attributes":[{"value":"/ Deserializes a Uuid from a Binary.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":182765,"byte_end":182803,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1640},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183968,"byte_end":183984,"line_start":248,"line_end":248,"column_start":9,"column_end":25},"name":"u32_as_timestamp","qualname":"::serde_helpers::u32_as_timestamp","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1666}],"decl_id":null,"docs":" Contains functions to serialize a u32 as a bson::Timestamp and deserialize a u32 from a\n bson::Timestamp. The u32 should represent seconds since the Unix epoch.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a u32 as a bson::Timestamp and deserialize a u32 from a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183546,"byte_end":183637,"line_start":236,"line_end":236,"column_start":1,"column_end":92}},{"value":"/ bson::Timestamp. The u32 should represent seconds since the Unix epoch.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183638,"byte_end":183713,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183714,"byte_end":183717,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183718,"byte_end":183729,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183730,"byte_end":183772,"line_start":240,"line_end":240,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::u32_as_timestamp;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183773,"byte_end":183821,"line_start":241,"line_end":241,"column_start":1,"column_end":49}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183822,"byte_end":183859,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183860,"byte_end":183878,"line_start":243,"line_end":243,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"u32_as_timestamp\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183879,"byte_end":183922,"line_start":244,"line_end":244,"column_start":1,"column_end":44}},{"value":"/     pub time: u32,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183923,"byte_end":183945,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183946,"byte_end":183951,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":183952,"byte_end":183959,"line_start":247,"line_end":247,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184176,"byte_end":184185,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::u32_as_timestamp::serialize","value":"pub fn serialize<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a u32 as a bson::Timestamp.\n","sig":null,"attributes":[{"value":"/ Serializes a u32 as a bson::Timestamp.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184122,"byte_end":184164,"line_start":253,"line_end":253,"column_start":5,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1666},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184479,"byte_end":184490,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::u32_as_timestamp::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u32, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a u32 from a bson::Timestamp.\n","sig":null,"attributes":[{"value":"/ Deserializes a u32 from a bson::Timestamp.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184421,"byte_end":184467,"line_start":262,"line_end":262,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1669},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185213,"byte_end":185229,"line_start":285,"line_end":285,"column_start":9,"column_end":25},"name":"timestamp_as_u32","qualname":"::serde_helpers::timestamp_as_u32","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1691}],"decl_id":null,"docs":" Contains functions to serialize a bson::Timestamp as a u32 and deserialize a bson::Timestamp\n from a u32. The u32 should represent seconds since the Unix epoch. Serialization will return an\n error if the Timestamp has a non-zero increment.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a bson::Timestamp as a u32 and deserialize a bson::Timestamp","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184686,"byte_end":184782,"line_start":272,"line_end":272,"column_start":1,"column_end":97}},{"value":"/ from a u32. The u32 should represent seconds since the Unix epoch. Serialization will return an","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184783,"byte_end":184882,"line_start":273,"line_end":273,"column_start":1,"column_end":100}},{"value":"/ error if the Timestamp has a non-zero increment.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184883,"byte_end":184935,"line_start":274,"line_end":274,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184936,"byte_end":184939,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184940,"byte_end":184951,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184952,"byte_end":184994,"line_start":277,"line_end":277,"column_start":1,"column_end":43}},{"value":"/ # use bson::{serde_helpers::timestamp_as_u32, Timestamp};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":184995,"byte_end":185056,"line_start":278,"line_end":278,"column_start":1,"column_end":62}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185057,"byte_end":185094,"line_start":279,"line_end":279,"column_start":1,"column_end":38}},{"value":"/ struct Item {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185095,"byte_end":185112,"line_start":280,"line_end":280,"column_start":1,"column_end":18}},{"value":"/     #[serde(with = \"timestamp_as_u32\")]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185113,"byte_end":185156,"line_start":281,"line_end":281,"column_start":1,"column_end":44}},{"value":"/     pub timestamp: Timestamp,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185157,"byte_end":185190,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185191,"byte_end":185196,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185197,"byte_end":185204,"line_start":284,"line_end":284,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1689},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185506,"byte_end":185515,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::timestamp_as_u32::serialize","value":"pub fn serialize<S: Serializer>(&Timestamp, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a bson::Timestamp as a u32. Returns an error if the conversion is lossy (i.e. the\n Timestamp has a non-zero increment).\n","sig":null,"attributes":[{"value":"/ Serializes a bson::Timestamp as a u32. Returns an error if the conversion is lossy (i.e. the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185353,"byte_end":185449,"line_start":290,"line_end":290,"column_start":5,"column_end":101}},{"value":"/ Timestamp has a non-zero increment).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185454,"byte_end":185494,"line_start":291,"line_end":291,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1691},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185882,"byte_end":185893,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::timestamp_as_u32::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Timestamp, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a bson::Timestamp from a u32.\n","sig":null,"attributes":[{"value":"/ Deserializes a bson::Timestamp from a u32.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/serde_helpers.rs","byte_start":185824,"byte_end":185870,"line_start":301,"line_end":301,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1694},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spec","qualname":"::spec","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":2985},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":1726},{"krate":0,"index":3060},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":1729},{"krate":0,"index":1731}],"decl_id":null,"docs":" Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).\n","sig":null,"attributes":[{"value":"/ Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":187250,"byte_end":187345,"line_start":22,"line_end":22,"column_start":1,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2986},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188854,"byte_end":188860,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Double","qualname":"::spec::ElementType::Double","value":"ElementType::Double","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188817,"byte_end":188849,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2989},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188917,"byte_end":188923,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"String","qualname":"::spec::ElementType::String","value":"ElementType::String","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188896,"byte_end":188912,"line_start":65,"line_end":65,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2992},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188982,"byte_end":188998,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"EmbeddedDocument","qualname":"::spec::ElementType::EmbeddedDocument","value":"ElementType::EmbeddedDocument","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188956,"byte_end":188977,"line_start":67,"line_end":67,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2995},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189051,"byte_end":189056,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Array","qualname":"::spec::ElementType::Array","value":"ElementType::Array","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189037,"byte_end":189046,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2998},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189103,"byte_end":189109,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Binary","qualname":"::spec::ElementType::Binary","value":"ElementType::Binary","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189083,"byte_end":189098,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3001},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189175,"byte_end":189184,"line_start":74,"line_end":74,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::spec::ElementType::Undefined","value":"ElementType::Undefined","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Deprecated. Undefined (value)\n","sig":null,"attributes":[{"value":"/ Deprecated. Undefined (value)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189137,"byte_end":189170,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3004},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189276,"byte_end":189284,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::spec::ElementType::ObjectId","value":"ElementType::ObjectId","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189215,"byte_end":189271,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189334,"byte_end":189341,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::spec::ElementType::Boolean","value":"ElementType::Boolean","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Bool value\n","sig":null,"attributes":[{"value":"/ Bool value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189315,"byte_end":189329,"line_start":77,"line_end":77,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3010},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189391,"byte_end":189399,"line_start":80,"line_end":80,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::spec::ElementType::DateTime","value":"ElementType::DateTime","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189370,"byte_end":189386,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3013},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189452,"byte_end":189456,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Null","qualname":"::spec::ElementType::Null","value":"ElementType::Null","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189433,"byte_end":189447,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189955,"byte_end":189972,"line_start":89,"line_end":89,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::spec::ElementType::RegularExpression","value":"ElementType::RegularExpression","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Regular expression - The first cstring is the regex pattern, the second is the regex\n options string. Options are identified by characters, which must be stored in\n alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for\n multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,\n 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match\n unicode.\n","sig":null,"attributes":[{"value":"/ Regular expression - The first cstring is the regex pattern, the second is the regex","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189488,"byte_end":189576,"line_start":83,"line_end":83,"column_start":5,"column_end":93}},{"value":"/ options string. Options are identified by characters, which must be stored in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189581,"byte_end":189662,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189667,"byte_end":189751,"line_start":85,"line_end":85,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189756,"byte_end":189844,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189849,"byte_end":189933,"line_start":87,"line_end":87,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":189938,"byte_end":189950,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190032,"byte_end":190041,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::spec::ElementType::DbPointer","value":"ElementType::DbPointer","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190012,"byte_end":190027,"line_start":90,"line_end":90,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3022},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190096,"byte_end":190110,"line_start":93,"line_end":93,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::spec::ElementType::JavaScriptCode","value":"ElementType::JavaScriptCode","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190072,"byte_end":190091,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3025},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190167,"byte_end":190173,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::spec::ElementType::Symbol","value":"ElementType::Symbol","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190147,"byte_end":190162,"line_start":94,"line_end":94,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3028},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190234,"byte_end":190257,"line_start":97,"line_end":97,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::spec::ElementType::JavaScriptCodeWithScope","value":"ElementType::JavaScriptCodeWithScope","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190201,"byte_end":190229,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190328,"byte_end":190333,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Int32","qualname":"::spec::ElementType::Int32","value":"ElementType::Int32","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" 32-bit integer\n","sig":null,"attributes":[{"value":"/ 32-bit integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190305,"byte_end":190323,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190386,"byte_end":190395,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::spec::ElementType::Timestamp","value":"ElementType::Timestamp","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190368,"byte_end":190381,"line_start":100,"line_end":100,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3037},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190449,"byte_end":190454,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Int64","qualname":"::spec::ElementType::Int64","value":"ElementType::Int64","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" 64-bit integer\n","sig":null,"attributes":[{"value":"/ 64-bit integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190426,"byte_end":190444,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3040},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190623,"byte_end":190633,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::spec::ElementType::Decimal128","value":"ElementType::Decimal128","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190489,"byte_end":190618,"line_start":104,"line_end":104,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3043},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190669,"byte_end":190675,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::spec::ElementType::MaxKey","value":"ElementType::MaxKey","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3046},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190703,"byte_end":190709,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::spec::ElementType::MinKey","value":"ElementType::MinKey","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2985},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188799,"byte_end":188810,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"ElementType","qualname":"::spec::ElementType","value":"pub enum ElementType {\n    Double = ,\n    String = ,\n    EmbeddedDocument = ,\n    Array = ,\n    Binary = ,\n    Undefined = ,\n    ObjectId = ,\n    Boolean = ,\n    DateTime = ,\n    Null = ,\n    RegularExpression = ,\n    DbPointer = ,\n    JavaScriptCode = ,\n    Symbol = ,\n    JavaScriptCodeWithScope = ,\n    Int32 = ,\n    Timestamp = ,\n    Int64 = ,\n    Decimal128 = ,\n    MaxKey = ,\n    MinKey = ,\n}","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046}],"decl_id":null,"docs":" All available BSON element types.","sig":null,"attributes":[{"value":"/ All available BSON element types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188627,"byte_end":188664,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188665,"byte_end":188668,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Not all element types are representable by the `Bson` type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188669,"byte_end":188732,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"repr(u8)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":188733,"byte_end":188744,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190820,"byte_end":190824,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"from","qualname":"<ElementType>::from","value":"pub fn from(u8) -> Option<ElementType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert from a `u8`.\n","sig":null,"attributes":[{"value":"/ Attempt to convert from a `u8`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190759,"byte_end":190794,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190799,"byte_end":190808,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3061},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192222,"byte_end":192229,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Generic","qualname":"::spec::BinarySubtype::Generic","value":"BinarySubtype::Generic","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3063},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192235,"byte_end":192243,"line_start":147,"line_end":147,"column_start":5,"column_end":13},"name":"Function","qualname":"::spec::BinarySubtype::Function","value":"BinarySubtype::Function","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192249,"byte_end":192258,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"BinaryOld","qualname":"::spec::BinarySubtype::BinaryOld","value":"BinarySubtype::BinaryOld","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192264,"byte_end":192271,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"UuidOld","qualname":"::spec::BinarySubtype::UuidOld","value":"BinarySubtype::UuidOld","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192277,"byte_end":192281,"line_start":150,"line_end":150,"column_start":5,"column_end":9},"name":"Uuid","qualname":"::spec::BinarySubtype::Uuid","value":"BinarySubtype::Uuid","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192287,"byte_end":192290,"line_start":151,"line_end":151,"column_start":5,"column_end":8},"name":"Md5","qualname":"::spec::BinarySubtype::Md5","value":"BinarySubtype::Md5","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192296,"byte_end":192305,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"name":"Encrypted","qualname":"::spec::BinarySubtype::Encrypted","value":"BinarySubtype::Encrypted","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192311,"byte_end":192322,"line_start":153,"line_end":153,"column_start":5,"column_end":16},"name":"UserDefined","qualname":"::spec::BinarySubtype::UserDefined","value":"BinarySubtype::UserDefined(u8)","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3060},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192202,"byte_end":192215,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"BinarySubtype","qualname":"::spec::BinarySubtype","value":"pub enum BinarySubtype {\n    Generic,\n    Function,\n    BinaryOld,\n    UuidOld,\n    Uuid,\n    Md5,\n    Encrypted,\n    UserDefined(u8),\n}","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075}],"decl_id":null,"docs":" The available binary subtypes, plus a user-defined slot.\n","sig":null,"attributes":[{"value":"/ The available binary subtypes, plus a user-defined slot.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192063,"byte_end":192123,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192175,"byte_end":192192,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17860,"byte_end":17864,"line_start":90,"line_end":90,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17939,"byte_end":17943,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20161,"byte_end":20165,"line_start":153,"line_end":153,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20257,"byte_end":20261,"line_start":159,"line_end":159,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20347,"byte_end":20351,"line_start":165,"line_end":165,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20451,"byte_end":20455,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20548,"byte_end":20552,"line_start":177,"line_end":177,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20645,"byte_end":20649,"line_start":183,"line_end":183,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20738,"byte_end":20742,"line_start":189,"line_end":189,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20868,"byte_end":20872,"line_start":195,"line_end":195,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21025,"byte_end":21029,"line_start":201,"line_end":201,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21133,"byte_end":21137,"line_start":207,"line_end":207,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21235,"byte_end":21239,"line_start":213,"line_end":213,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21363,"byte_end":21367,"line_start":222,"line_end":222,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21527,"byte_end":21531,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21731,"byte_end":21735,"line_start":240,"line_end":240,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22176,"byte_end":22180,"line_start":256,"line_end":256,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22264,"byte_end":22268,"line_start":262,"line_end":262,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22352,"byte_end":22356,"line_start":268,"line_end":268,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22547,"byte_end":22551,"line_start":278,"line_end":278,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23023,"byte_end":23027,"line_start":289,"line_end":289,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23156,"byte_end":23160,"line_start":295,"line_end":295,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23275,"byte_end":23279,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23390,"byte_end":23394,"line_start":307,"line_end":307,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23667,"byte_end":23672,"line_start":314,"line_end":314,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23759,"byte_end":23763,"line_start":320,"line_end":320,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42260,"byte_end":42264,"line_start":821,"line_end":821,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47218,"byte_end":47227,"line_start":987,"line_end":987,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":48040,"byte_end":48048,"line_start":1021,"line_end":1021,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49265,"byte_end":49273,"line_start":1052,"line_end":1052,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49400,"byte_end":49408,"line_start":1060,"line_end":1060,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49532,"byte_end":49540,"line_start":1066,"line_end":1066,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49645,"byte_end":49653,"line_start":1072,"line_end":1072,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50709,"byte_end":50715,"line_start":1111,"line_end":1111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66750,"byte_end":66755,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66871,"byte_end":66876,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66995,"byte_end":67000,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":67908,"byte_end":67913,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68164,"byte_end":68169,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68404,"byte_end":68408,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":70485,"byte_end":70493,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":71208,"byte_end":71216,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":71788,"byte_end":71792,"line_start":66,"line_end":66,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":72010,"byte_end":72021,"line_start":76,"line_end":76,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":75536,"byte_end":75548,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":76632,"byte_end":76644,"line_start":290,"line_end":290,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":81738,"byte_end":81754,"line_start":457,"line_end":457,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":82194,"byte_end":82213,"line_start":474,"line_end":474,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":84150,"byte_end":84165,"line_start":541,"line_end":541,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":85531,"byte_end":85546,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":86286,"byte_end":86301,"line_start":619,"line_end":619,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":87279,"byte_end":87294,"line_start":655,"line_end":655,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":88571,"byte_end":88580,"line_start":698,"line_end":698,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":88917,"byte_end":88922,"line_start":710,"line_end":710,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":89255,"byte_end":89278,"line_start":722,"line_end":722,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":89655,"byte_end":89661,"line_start":734,"line_end":734,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":90356,"byte_end":90364,"line_start":759,"line_end":759,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":90695,"byte_end":90704,"line_start":771,"line_end":771,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":96582,"byte_end":96592,"line_start":201,"line_end":201,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":96917,"byte_end":96927,"line_start":213,"line_end":213,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101247,"byte_end":101263,"line_start":42,"line_end":42,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101624,"byte_end":101640,"line_start":53,"line_end":53,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101939,"byte_end":101955,"line_start":62,"line_end":62,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102153,"byte_end":102161,"line_start":70,"line_end":70,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102241,"byte_end":102249,"line_start":76,"line_end":76,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102698,"byte_end":102706,"line_start":96,"line_end":96,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103394,"byte_end":103398,"line_start":124,"line_end":124,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103538,"byte_end":103544,"line_start":132,"line_end":132,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103680,"byte_end":103688,"line_start":140,"line_end":140,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104158,"byte_end":104166,"line_start":160,"line_end":160,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104396,"byte_end":104416,"line_start":170,"line_end":170,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104565,"byte_end":104581,"line_start":178,"line_end":178,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104728,"byte_end":104736,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":877},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119392,"byte_end":119397,"line_start":582,"line_end":582,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119751,"byte_end":119759,"line_start":596,"line_end":596,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119937,"byte_end":119952,"line_start":606,"line_end":606,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":120140,"byte_end":120155,"line_start":615,"line_end":615,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":120918,"byte_end":120926,"line_start":648,"line_end":648,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126787,"byte_end":126792,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127070,"byte_end":127075,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127106,"byte_end":127111,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127323,"byte_end":127328,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127497,"byte_end":127502,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127855,"byte_end":127859,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":131663,"byte_end":131667,"line_start":185,"line_end":185,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":133139,"byte_end":133147,"line_start":221,"line_end":221,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":133938,"byte_end":133943,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":134399,"byte_end":134404,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":134863,"byte_end":134869,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":135590,"byte_end":135598,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":136177,"byte_end":136182,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":136789,"byte_end":136795,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":137858,"byte_end":137862,"line_start":175,"line_end":175,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":138906,"byte_end":138915,"line_start":216,"line_end":216,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":139336,"byte_end":139344,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":140300,"byte_end":140306,"line_start":269,"line_end":269,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":140779,"byte_end":140785,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":141451,"byte_end":141460,"line_start":319,"line_end":319,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":142396,"byte_end":142405,"line_start":356,"line_end":356,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143730,"byte_end":143735,"line_start":44,"line_end":44,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143929,"byte_end":143934,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144193,"byte_end":144198,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144575,"byte_end":144583,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144659,"byte_end":144667,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144803,"byte_end":144811,"line_start":91,"line_end":91,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":148269,"byte_end":148277,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":148404,"byte_end":148412,"line_start":195,"line_end":195,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159669,"byte_end":159674,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159775,"byte_end":159780,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":160620,"byte_end":160625,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":160817,"byte_end":160822,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":161617,"byte_end":161625,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":161923,"byte_end":161931,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":162259,"byte_end":162263,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163257,"byte_end":163267,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163436,"byte_end":163446,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":169975,"byte_end":169990,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170381,"byte_end":170396,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170799,"byte_end":170820,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171247,"byte_end":171269,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171786,"byte_end":171799,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":172564,"byte_end":172580,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173086,"byte_end":173109,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173651,"byte_end":173660,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173898,"byte_end":173903,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174156,"byte_end":174179,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174438,"byte_end":174444,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174973,"byte_end":174981,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":175270,"byte_end":175279,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190741,"byte_end":190752,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192952,"byte_end":192965,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":7992,"byte_end":7998,"line_start":207,"line_end":207,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":232}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/compat/mod.rs","byte_start":51437,"byte_end":51440,"line_start":3,"line_end":3,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":233}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8008,"byte_end":8010,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":271}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8020,"byte_end":8030,"line_start":209,"line_end":209,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":668}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8040,"byte_end":8048,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":676}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8058,"byte_end":8065,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":924}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/mod.rs","byte_start":125136,"byte_end":125138,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":925}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8075,"byte_end":8078,"line_start":212,"line_end":212,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1040}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8088,"byte_end":8091,"line_start":213,"line_end":213,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1132}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8101,"byte_end":8114,"line_start":214,"line_end":214,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1436}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/lib.rs","byte_start":8124,"byte_end":8128,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1694}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17860,"byte_end":17864,"line_start":90,"line_end":90,"column_start":18,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":17939,"byte_end":17943,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20161,"byte_end":20165,"line_start":153,"line_end":153,"column_start":20,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20257,"byte_end":20261,"line_start":159,"line_end":159,"column_start":20,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20347,"byte_end":20351,"line_start":165,"line_end":165,"column_start":21,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20451,"byte_end":20455,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20548,"byte_end":20552,"line_start":177,"line_end":177,"column_start":25,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20645,"byte_end":20649,"line_start":183,"line_end":183,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20738,"byte_end":20742,"line_start":189,"line_end":189,"column_start":22,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":20868,"byte_end":20872,"line_start":195,"line_end":195,"column_start":40,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21025,"byte_end":21029,"line_start":201,"line_end":201,"column_start":23,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21133,"byte_end":21137,"line_start":207,"line_end":207,"column_start":26,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21235,"byte_end":21239,"line_start":213,"line_end":213,"column_start":22,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21363,"byte_end":21367,"line_start":222,"line_end":222,"column_start":26,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21527,"byte_end":21531,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":21731,"byte_end":21735,"line_start":240,"line_end":240,"column_start":54,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22176,"byte_end":22180,"line_start":256,"line_end":256,"column_start":20,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22264,"byte_end":22268,"line_start":262,"line_end":262,"column_start":20,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22352,"byte_end":22356,"line_start":268,"line_end":268,"column_start":20,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":22547,"byte_end":22551,"line_start":278,"line_end":278,"column_start":20,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23023,"byte_end":23027,"line_start":289,"line_end":289,"column_start":25,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23156,"byte_end":23160,"line_start":295,"line_end":295,"column_start":30,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23275,"byte_end":23279,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23390,"byte_end":23394,"line_start":307,"line_end":307,"column_start":26,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23667,"byte_end":23672,"line_start":314,"line_end":314,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":24,"index":2522},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":23759,"byte_end":23763,"line_start":320,"line_end":320,"column_start":6,"column_end":10},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":42260,"byte_end":42264,"line_start":821,"line_end":821,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":47218,"byte_end":47227,"line_start":987,"line_end":987,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":48040,"byte_end":48048,"line_start":1021,"line_end":1021,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49265,"byte_end":49273,"line_start":1052,"line_end":1052,"column_start":16,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49400,"byte_end":49408,"line_start":1060,"line_end":1060,"column_start":19,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49532,"byte_end":49540,"line_start":1066,"line_end":1066,"column_start":33,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":19,"index":2443},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":49645,"byte_end":49653,"line_start":1072,"line_end":1072,"column_start":38,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/bson.rs","byte_start":50709,"byte_end":50715,"line_start":1111,"line_end":1111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66750,"byte_end":66755,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1889},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66871,"byte_end":66876,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1889},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":66995,"byte_end":67000,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1889},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":67908,"byte_end":67913,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1889},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68164,"byte_end":68169,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1889},"to":{"krate":25,"index":8610}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/error.rs","byte_start":68404,"byte_end":68408,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":70485,"byte_end":70493,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2937},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":71208,"byte_end":71216,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2094},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":71788,"byte_end":71792,"line_start":66,"line_end":66,"column_start":32,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1733},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":72010,"byte_end":72021,"line_start":76,"line_end":76,"column_start":28,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":398},"to":{"krate":25,"index":1622}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":75536,"byte_end":75548,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":76632,"byte_end":76644,"line_start":290,"line_end":290,"column_start":37,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":456},"to":{"krate":25,"index":1560}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":81738,"byte_end":81754,"line_start":457,"line_end":457,"column_start":31,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":472},"to":{"krate":25,"index":1734}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":82194,"byte_end":82213,"line_start":474,"line_end":474,"column_start":34,"column_end":53},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":481},"to":{"krate":25,"index":1742}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":84150,"byte_end":84165,"line_start":541,"line_end":541,"column_start":37,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":494},"to":{"krate":25,"index":1560}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":85531,"byte_end":85546,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":494},"to":{"krate":25,"index":1678}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":86286,"byte_end":86301,"line_start":619,"line_end":619,"column_start":30,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":508},"to":{"krate":25,"index":1696}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":87279,"byte_end":87294,"line_start":655,"line_end":655,"column_start":37,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":508},"to":{"krate":25,"index":1560}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":88571,"byte_end":88580,"line_start":698,"line_end":698,"column_start":32,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1801},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":88917,"byte_end":88922,"line_start":710,"line_end":710,"column_start":32,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1845},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":89255,"byte_end":89278,"line_start":722,"line_end":722,"column_start":32,"column_end":55},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1856},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":89655,"byte_end":89661,"line_start":734,"line_end":734,"column_start":32,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1867},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":90356,"byte_end":90364,"line_start":759,"line_end":759,"column_start":32,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1823},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/de/serde.rs","byte_start":90695,"byte_end":90704,"line_start":771,"line_end":771,"column_start":32,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1878},"to":{"krate":25,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":96582,"byte_end":96592,"line_start":201,"line_end":201,"column_start":21,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/decimal128.rs","byte_start":96917,"byte_end":96927,"line_start":213,"line_end":213,"column_start":23,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101247,"byte_end":101263,"line_start":42,"line_end":42,"column_start":16,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2086},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101624,"byte_end":101640,"line_start":53,"line_end":53,"column_start":18,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2086},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":101939,"byte_end":101955,"line_start":62,"line_end":62,"column_start":23,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2086},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102153,"byte_end":102161,"line_start":70,"line_end":70,"column_start":18,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102241,"byte_end":102249,"line_start":76,"line_end":76,"column_start":18,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":102698,"byte_end":102706,"line_start":96,"line_end":96,"column_start":16,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103394,"byte_end":103398,"line_start":124,"line_end":124,"column_start":23,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":808},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103538,"byte_end":103544,"line_start":132,"line_end":132,"column_start":23,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":811},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":103680,"byte_end":103688,"line_start":140,"line_end":140,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104158,"byte_end":104166,"line_start":160,"line_end":160,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104396,"byte_end":104416,"line_start":170,"line_end":170,"column_start":23,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":800},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104565,"byte_end":104581,"line_start":178,"line_end":178,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":104728,"byte_end":104736,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119392,"byte_end":119397,"line_start":582,"line_end":582,"column_start":10,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119751,"byte_end":119759,"line_start":596,"line_end":596,"column_start":44,"column_end":52},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":119937,"byte_end":119952,"line_start":606,"line_end":606,"column_start":6,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":120140,"byte_end":120155,"line_start":615,"line_end":615,"column_start":28,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":909},"to":{"krate":25,"index":1622}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/document.rs","byte_start":120918,"byte_end":120926,"line_start":648,"line_end":648,"column_start":33,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7229}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":126787,"byte_end":126792,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2102},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127070,"byte_end":127075,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2102},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127106,"byte_end":127111,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2102},"to":{"krate":25,"index":8610}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127323,"byte_end":127328,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2102},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127497,"byte_end":127502,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2102},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":127855,"byte_end":127859,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2793}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":131663,"byte_end":131667,"line_start":185,"line_end":185,"column_start":37,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2793}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/de.rs","byte_start":133139,"byte_end":133147,"line_start":221,"line_end":221,"column_start":62,"column_end":70},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":2793}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":133938,"byte_end":133943,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":134399,"byte_end":134404,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":134863,"byte_end":134869,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":135590,"byte_end":135598,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":136177,"byte_end":136182,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":136789,"byte_end":136795,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":137858,"byte_end":137862,"line_start":175,"line_end":175,"column_start":6,"column_end":10},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":138906,"byte_end":138915,"line_start":216,"line_end":216,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":139336,"byte_end":139344,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":140300,"byte_end":140306,"line_start":269,"line_end":269,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":140779,"byte_end":140785,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":141451,"byte_end":141460,"line_start":319,"line_end":319,"column_start":6,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/extjson/models.rs","byte_start":142396,"byte_end":142405,"line_start":356,"line_end":356,"column_start":6,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143730,"byte_end":143735,"line_start":44,"line_end":44,"column_start":29,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2929},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":143929,"byte_end":143934,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2929},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144193,"byte_end":144198,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2929},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144575,"byte_end":144583,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144659,"byte_end":144667,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":11449}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":144803,"byte_end":144811,"line_start":91,"line_end":91,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":148269,"byte_end":148277,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/oid.rs","byte_start":148404,"byte_end":148412,"line_start":195,"line_end":195,"column_start":21,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159669,"byte_end":159674,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":159775,"byte_end":159780,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":160620,"byte_end":160625,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2973},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/error.rs","byte_start":160817,"byte_end":160822,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2973},"to":{"krate":25,"index":9223}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":161617,"byte_end":161625,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2937},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":161923,"byte_end":161931,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2094},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":162259,"byte_end":162263,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1733},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163257,"byte_end":163267,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":163436,"byte_end":163446,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1244},"to":{"krate":25,"index":2080}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":169975,"byte_end":169990,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1289},"to":{"krate":25,"index":2130}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170381,"byte_end":170396,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1297},"to":{"krate":25,"index":2136}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":170799,"byte_end":170820,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1305},"to":{"krate":25,"index":2142}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171247,"byte_end":171269,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1313},"to":{"krate":25,"index":2148}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":171786,"byte_end":171799,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1322},"to":{"krate":25,"index":2154}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":172564,"byte_end":172580,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1333},"to":{"krate":25,"index":2165}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173086,"byte_end":173109,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1341},"to":{"krate":25,"index":2172}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173651,"byte_end":173660,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1801},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":173898,"byte_end":173903,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1845},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174156,"byte_end":174179,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1856},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174438,"byte_end":174444,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1867},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":174973,"byte_end":174981,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1823},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/ser/serde.rs","byte_start":175270,"byte_end":175279,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1878},"to":{"krate":25,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":190741,"byte_end":190752,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/bson-1.2.3/src/spec.rs","byte_start":192952,"byte_end":192965,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":2786}}]}