{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7","program":"/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","juniper","--edition=2018","/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bson\"","--cfg","feature=\"chrono\"","--cfg","feature=\"default\"","--cfg","feature=\"graphql-parser\"","--cfg","feature=\"graphql-parser-integration\"","--cfg","feature=\"schema-language\"","--cfg","feature=\"url\"","--cfg","feature=\"uuid\"","-C","metadata=7c4be3e5306805f4","-C","extra-filename=-7c4be3e5306805f4","--out-dir","/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","-L","dependency=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps","--extern","async_trait=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libasync_trait-c6663e5201cca923.so","--extern","bson=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libbson-3bdca42bbf74f591.rmeta","--extern","chrono=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libchrono-9fb3c0fc9ddd18d1.rmeta","--extern","fnv=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libfnv-8119fe42070d7285.rmeta","--extern","futures=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libfutures-18af1e841117bbf4.rmeta","--extern","futures_enum=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libfutures_enum-a4d114939447d99a.so","--extern","graphql_parser=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libgraphql_parser-9e9b477e1242b91d.rmeta","--extern","indexmap=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libindexmap-2e1a8489f2d84517.rmeta","--extern","juniper_codegen=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libjuniper_codegen-39bd71bbeb3ca2c5.so","--extern","serde=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libserde-25d844114842cc56.rmeta","--extern","smartstring=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libsmartstring-c5320a1a9588809c.rmeta","--extern","static_assertions=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libstatic_assertions-546b0ecf0e5c2978.rmeta","--extern","url=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/liburl-4523e9aed7a6e8c1.rmeta","--extern","uuid=/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libuuid-7665403f68e0965a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vscode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/cloudflare-pages-workers-vue3-graphql/lib/juniper_cf_workers/target/rls/debug/deps/libjuniper-7c4be3e5306805f4.rmeta"},"prelude":{"crate_id":{"name":"juniper","disambiguator":[14805033966154848219,0]},"crate_root":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src","external_crates":[{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":19,"id":{"name":"async_trait","disambiguator":[12331014698071393308,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":20,"id":{"name":"futures","disambiguator":[2655071816687476317,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":21,"id":{"name":"futures_core","disambiguator":[836900170668578141,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":22,"id":{"name":"futures_util","disambiguator":[10528489083142936782,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":23,"id":{"name":"pin_utils","disambiguator":[2380289198110952421,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":24,"id":{"name":"futures_macro","disambiguator":[3310905799135672943,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":25,"id":{"name":"futures_task","disambiguator":[22578915694261954,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":26,"id":{"name":"futures_sink","disambiguator":[18108613614654560089,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[13850998262773622920,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":28,"id":{"name":"futures_channel","disambiguator":[4662495715904756966,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":29,"id":{"name":"slab","disambiguator":[15250121243094389956,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":30,"id":{"name":"futures_io","disambiguator":[17178648694822136275,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":31,"id":{"name":"memchr","disambiguator":[12044271279222310692,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":32,"id":{"name":"futures_executor","disambiguator":[13515928642106020483,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","num":33,"id":{"name":"serde","disambiguator":[15044552807878504357,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","num":34,"id":{"name":"serde_derive","disambiguator":[9091749140381624389,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":35,"id":{"name":"static_assertions","disambiguator":[16507910306600550050,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","num":36,"id":{"name":"juniper_codegen","disambiguator":[4367794472498071736,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","num":37,"id":{"name":"indexmap","disambiguator":[11946919589315910912,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","num":38,"id":{"name":"hashbrown","disambiguator":[14574037096241616493,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","num":39,"id":{"name":"fnv","disambiguator":[1034934705931276423,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":40,"id":{"name":"graphql_parser","disambiguator":[14807841949286966349,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":41,"id":{"name":"combine","disambiguator":[4988741183410627899,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":42,"id":{"name":"byteorder","disambiguator":[5115847751006481749,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":43,"id":{"name":"either","disambiguator":[2643691690621275885,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":44,"id":{"name":"unreachable","disambiguator":[17942066100501811123,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":45,"id":{"name":"void","disambiguator":[2900360208327743809,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":46,"id":{"name":"ascii","disambiguator":[6193346140321612238,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":47,"id":{"name":"thiserror","disambiguator":[9263238158982593010,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","num":48,"id":{"name":"thiserror_impl","disambiguator":[13336756869761453128,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","num":49,"id":{"name":"chrono","disambiguator":[12534628545019425638,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","num":50,"id":{"name":"time","disambiguator":[15192896353979217682,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","num":51,"id":{"name":"libc","disambiguator":[14621565643060686160,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","num":52,"id":{"name":"num_integer","disambiguator":[9850306937509709045,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","num":53,"id":{"name":"num_traits","disambiguator":[16438191234303804155,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":54,"id":{"name":"url","disambiguator":[13973205569234405850,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":55,"id":{"name":"matches","disambiguator":[1320243471544008448,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":56,"id":{"name":"form_urlencoded","disambiguator":[14756630579861573883,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":57,"id":{"name":"percent_encoding","disambiguator":[10788573655109857407,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":58,"id":{"name":"idna","disambiguator":[14462775927040156581,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":59,"id":{"name":"unicode_bidi","disambiguator":[3879225568574823278,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":60,"id":{"name":"unicode_normalization","disambiguator":[7686984899695165001,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":61,"id":{"name":"tinyvec","disambiguator":[11173113689500746751,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","num":62,"id":{"name":"tinyvec_macros","disambiguator":[7252632776325599366,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/uuid.rs","num":63,"id":{"name":"uuid","disambiguator":[900265749509948164,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":64,"id":{"name":"bson","disambiguator":[4708868057083958565,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":65,"id":{"name":"serde_json","disambiguator":[16530989952377641469,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":66,"id":{"name":"itoa","disambiguator":[1263167040257272176,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":67,"id":{"name":"ryu","disambiguator":[1063338513761980397,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":68,"id":{"name":"linked_hash_map","disambiguator":[5540240555593687275,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":69,"id":{"name":"hex","disambiguator":[4608570551788100756,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":70,"id":{"name":"rand","disambiguator":[18309387610641454924,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":71,"id":{"name":"rand_core","disambiguator":[17732946245065726229,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":72,"id":{"name":"getrandom","disambiguator":[8844515948851829404,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":73,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":74,"id":{"name":"rand_chacha","disambiguator":[5309236619809351512,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":75,"id":{"name":"ppv_lite86","disambiguator":[4149523023593181222,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":76,"id":{"name":"lazy_static","disambiguator":[18257175922802125800,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","num":77,"id":{"name":"base64","disambiguator":[2184188811219505079,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","num":78,"id":{"name":"futures_enum","disambiguator":[15432416577788495028,0]}},{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","num":79,"id":{"name":"smartstring","disambiguator":[9509988710869884869,0]}}],"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":0,"byte_end":12635,"line_start":1,"line_end":377,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":367},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3517,"byte_end":3528,"line_start":104,"line_end":104,"column_start":23,"column_end":34},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3530,"byte_end":3537,"line_start":104,"line_end":104,"column_start":36,"column_end":43},"alias_span":null,"name":"futures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3539,"byte_end":3544,"line_start":104,"line_end":104,"column_start":45,"column_end":50},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3546,"byte_end":3563,"line_start":104,"line_end":104,"column_start":52,"column_end":69},"alias_span":null,"name":"sa","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":21},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3614,"byte_end":3623,"line_start":107,"line_end":107,"column_start":27,"column_end":36},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":24},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3625,"byte_end":3639,"line_start":107,"line_end":107,"column_start":38,"column_end":52},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1926},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3833,"byte_end":3850,"line_start":113,"line_end":113,"column_start":5,"column_end":22},"alias_span":null,"name":"graphql_interface","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1920},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3852,"byte_end":3866,"line_start":113,"line_end":113,"column_start":24,"column_end":38},"alias_span":null,"name":"graphql_object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1922},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3868,"byte_end":3882,"line_start":113,"line_end":113,"column_start":40,"column_end":54},"alias_span":null,"name":"graphql_scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1924},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3884,"byte_end":3904,"line_start":113,"line_end":113,"column_start":56,"column_end":76},"alias_span":null,"name":"graphql_subscription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1930},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3906,"byte_end":3919,"line_start":113,"line_end":113,"column_start":78,"column_end":91},"alias_span":null,"name":"graphql_union","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1912},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3925,"byte_end":3936,"line_start":114,"line_end":114,"column_start":5,"column_end":16},"alias_span":null,"name":"GraphQLEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1914},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3938,"byte_end":3956,"line_start":114,"line_end":114,"column_start":18,"column_end":36},"alias_span":null,"name":"GraphQLInputObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1916},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3958,"byte_end":3971,"line_start":114,"line_end":114,"column_start":38,"column_end":51},"alias_span":null,"name":"GraphQLObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1918},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3973,"byte_end":3991,"line_start":114,"line_end":114,"column_start":53,"column_end":71},"alias_span":null,"name":"GraphQLScalarValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1928},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3993,"byte_end":4005,"line_start":114,"line_end":114,"column_start":73,"column_end":85},"alias_span":null,"name":"GraphQLUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6268},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63835,"byte_end":63842,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"alias_span":null,"name":"Applies","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":6341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63844,"byte_end":63858,"line_start":40,"line_end":40,"column_start":18,"column_end":32},"alias_span":null,"name":"ChildSelection","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":6385},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63860,"byte_end":63886,"line_start":40,"line_end":40,"column_start":34,"column_end":60},"alias_span":null,"name":"ConcreteLookAheadSelection","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":6320},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63888,"byte_end":63905,"line_start":40,"line_end":40,"column_start":62,"column_end":79},"alias_span":null,"name":"LookAheadArgument","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63907,"byte_end":63923,"line_start":40,"line_end":40,"column_start":81,"column_end":97},"alias_span":null,"name":"LookAheadMethods","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":6362},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63933,"byte_end":63951,"line_start":41,"line_end":41,"column_start":9,"column_end":27},"alias_span":null,"name":"LookAheadSelection","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63953,"byte_end":63967,"line_start":41,"line_end":41,"column_start":29,"column_end":43},"alias_span":null,"name":"LookAheadValue","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":63996,"byte_end":64009,"line_start":43,"line_end":43,"column_start":21,"column_end":34},"alias_span":null,"name":"OwnedExecutor","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":1258},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161597,"byte_end":161618,"line_start":13,"line_end":13,"column_start":25,"column_end":46},"alias_span":null,"name":"parse_document_source","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6444},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161649,"byte_end":161654,"line_start":16,"line_end":16,"column_start":13,"column_end":18},"alias_span":null,"name":"Lexer","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6529},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161656,"byte_end":161666,"line_start":16,"line_end":16,"column_start":20,"column_end":30},"alias_span":null,"name":"LexerError","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6454},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161668,"byte_end":161679,"line_start":16,"line_end":16,"column_start":32,"column_end":43},"alias_span":null,"name":"ScalarToken","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6479},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161681,"byte_end":161686,"line_start":16,"line_end":16,"column_start":45,"column_end":50},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161702,"byte_end":161719,"line_start":17,"line_end":17,"column_start":14,"column_end":31},"alias_span":null,"name":"OptionParseResult","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6557},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161721,"byte_end":161731,"line_start":17,"line_end":17,"column_start":33,"column_end":43},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":1463},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161733,"byte_end":161744,"line_start":17,"line_end":17,"column_start":45,"column_end":56},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6579},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161746,"byte_end":161752,"line_start":17,"line_end":17,"column_start":58,"column_end":64},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":1466},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161754,"byte_end":161774,"line_start":17,"line_end":17,"column_start":66,"column_end":86},"alias_span":null,"name":"UnlocatedParseResult","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6585},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161789,"byte_end":161803,"line_start":18,"line_end":18,"column_start":13,"column_end":27},"alias_span":null,"name":"SourcePosition","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":6608},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161805,"byte_end":161813,"line_start":18,"line_end":18,"column_start":29,"column_end":37},"alias_span":null,"name":"Spanning","value":"","parent":{"krate":0,"index":1164}},{"kind":"Use","ref_id":{"krate":0,"index":7725},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393129,"byte_end":393138,"line_start":14,"line_end":14,"column_start":15,"column_end":24},"alias_span":null,"name":"RuleError","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3472},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393140,"byte_end":393156,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"alias_span":null,"name":"ValidatorContext","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3569},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393176,"byte_end":393197,"line_start":15,"line_end":15,"column_start":18,"column_end":39},"alias_span":null,"name":"validate_input_values","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3640},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393218,"byte_end":393233,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"alias_span":null,"name":"MultiVisitorNil","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3641},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393218,"byte_end":393233,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"alias_span":null,"name":"MultiVisitorNil","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":4941},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393246,"byte_end":393261,"line_start":17,"line_end":17,"column_start":12,"column_end":27},"alias_span":null,"name":"visit_all_rules","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":4986},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393275,"byte_end":393282,"line_start":18,"line_end":18,"column_start":13,"column_end":20},"alias_span":null,"name":"Visitor","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":5093},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":393297,"byte_end":393302,"line_start":19,"line_end":19,"column_start":14,"column_end":19},"alias_span":null,"name":"visit","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3438},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4566,"byte_end":4579,"line_start":143,"line_end":143,"column_start":22,"column_end":35},"alias_span":null,"name":"to_camel_case","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6243},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4886,"byte_end":4896,"line_start":154,"line_end":154,"column_start":9,"column_end":19},"alias_span":null,"name":"Definition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4898,"byte_end":4906,"line_start":154,"line_end":154,"column_start":21,"column_end":29},"alias_span":null,"name":"Document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4908,"byte_end":4922,"line_start":154,"line_end":154,"column_start":31,"column_end":45},"alias_span":null,"name":"FromInputValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5974},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4924,"byte_end":4934,"line_start":154,"line_end":154,"column_start":47,"column_end":57},"alias_span":null,"name":"InputValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6196},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4936,"byte_end":4945,"line_start":154,"line_end":154,"column_start":59,"column_end":68},"alias_span":null,"name":"Operation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6182},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4947,"byte_end":4960,"line_start":154,"line_end":154,"column_start":70,"column_end":83},"alias_span":null,"name":"OperationType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6133},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4962,"byte_end":4971,"line_start":154,"line_end":154,"column_start":85,"column_end":94},"alias_span":null,"name":"Selection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4981,"byte_end":4993,"line_start":155,"line_end":155,"column_start":9,"column_end":21},"alias_span":null,"name":"ToInputValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5943},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4995,"byte_end":4999,"line_start":155,"line_end":155,"column_start":23,"column_end":27},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6268},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5032,"byte_end":5039,"line_start":158,"line_end":158,"column_start":9,"column_end":16},"alias_span":null,"name":"Applies","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5041,"byte_end":5048,"line_start":158,"line_end":158,"column_start":18,"column_end":25},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6417},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5050,"byte_end":5064,"line_start":158,"line_end":158,"column_start":27,"column_end":41},"alias_span":null,"name":"ExecutionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5066,"byte_end":5081,"line_start":158,"line_end":158,"column_start":43,"column_end":58},"alias_span":null,"name":"ExecutionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":869},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5083,"byte_end":5091,"line_start":158,"line_end":158,"column_start":60,"column_end":68},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6431},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5093,"byte_end":5103,"line_start":158,"line_end":158,"column_start":70,"column_end":80},"alias_span":null,"name":"FieldError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5105,"byte_end":5116,"line_start":158,"line_end":158,"column_start":82,"column_end":93},"alias_span":null,"name":"FieldResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5126,"byte_end":5137,"line_start":159,"line_end":159,"column_start":9,"column_end":20},"alias_span":null,"name":"FromContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5139,"byte_end":5153,"line_start":159,"line_end":159,"column_start":22,"column_end":36},"alias_span":null,"name":"IntoFieldError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5155,"byte_end":5169,"line_start":159,"line_end":159,"column_start":38,"column_end":52},"alias_span":null,"name":"IntoResolvable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6320},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5171,"byte_end":5188,"line_start":159,"line_end":159,"column_start":54,"column_end":71},"alias_span":null,"name":"LookAheadArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5190,"byte_end":5206,"line_start":159,"line_end":159,"column_start":73,"column_end":89},"alias_span":null,"name":"LookAheadMethods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6362},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5216,"byte_end":5234,"line_start":160,"line_end":160,"column_start":9,"column_end":27},"alias_span":null,"name":"LookAheadSelection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5236,"byte_end":5250,"line_start":160,"line_end":160,"column_start":29,"column_end":43},"alias_span":null,"name":"LookAheadValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5252,"byte_end":5265,"line_start":160,"line_end":160,"column_start":45,"column_end":58},"alias_span":null,"name":"OwnedExecutor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5267,"byte_end":5275,"line_start":160,"line_end":160,"column_start":60,"column_end":68},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":911},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5277,"byte_end":5289,"line_start":160,"line_end":160,"column_start":70,"column_end":82},"alias_span":null,"name":"ValuesStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5291,"byte_end":5300,"line_start":160,"line_end":160,"column_start":84,"column_end":93},"alias_span":null,"name":"Variables","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5328,"byte_end":5347,"line_start":162,"line_end":162,"column_start":20,"column_end":39},"alias_span":null,"name":"IntrospectionFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5394,"byte_end":5415,"line_start":164,"line_end":164,"column_start":24,"column_end":45},"alias_span":null,"name":"ExtractTypeFromStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5417,"byte_end":5432,"line_start":164,"line_end":164,"column_start":47,"column_end":62},"alias_span":null,"name":"IntoFieldResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5443,"byte_end":5460,"line_start":165,"line_end":165,"column_start":9,"column_end":26},"alias_span":null,"name":"AsDynGraphQLValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6557},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5482,"byte_end":5492,"line_start":167,"line_end":167,"column_start":14,"column_end":24},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6608},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5494,"byte_end":5502,"line_start":167,"line_end":167,"column_start":26,"column_end":34},"alias_span":null,"name":"Spanning","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5527,"byte_end":5531,"line_start":169,"line_end":169,"column_start":9,"column_end":13},"alias_span":null,"name":"meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6773},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5549,"byte_end":5557,"line_start":170,"line_end":170,"column_start":17,"column_end":25},"alias_span":null,"name":"RootNode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6793},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5559,"byte_end":5569,"line_start":170,"line_end":170,"column_start":27,"column_end":37},"alias_span":null,"name":"SchemaType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2348},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5614,"byte_end":5634,"line_start":173,"line_end":173,"column_start":23,"column_end":43},"alias_span":null,"name":"DynGraphQLValueAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2352},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5636,"byte_end":5652,"line_start":173,"line_end":173,"column_start":45,"column_end":61},"alias_span":null,"name":"GraphQLTypeAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5654,"byte_end":5671,"line_start":173,"line_end":173,"column_start":63,"column_end":80},"alias_span":null,"name":"GraphQLValueAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7397},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5689,"byte_end":5698,"line_start":174,"line_end":174,"column_start":16,"column_end":25},"alias_span":null,"name":"Arguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2470},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5700,"byte_end":5715,"line_start":174,"line_end":174,"column_start":27,"column_end":42},"alias_span":null,"name":"DynGraphQLValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2474},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5717,"byte_end":5728,"line_start":174,"line_end":174,"column_start":44,"column_end":55},"alias_span":null,"name":"GraphQLType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2460},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5730,"byte_end":5742,"line_start":174,"line_end":174,"column_start":57,"column_end":69},"alias_span":null,"name":"GraphQLValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7380},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5744,"byte_end":5752,"line_start":174,"line_end":174,"column_start":71,"column_end":79},"alias_span":null,"name":"TypeKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2642},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5763,"byte_end":5769,"line_start":175,"line_end":175,"column_start":9,"column_end":15},"alias_span":null,"name":"marker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5778,"byte_end":5794,"line_start":175,"line_end":175,"column_start":24,"column_end":40},"alias_span":null,"name":"GraphQLInterface","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5796,"byte_end":5808,"line_start":175,"line_end":175,"column_start":42,"column_end":54},"alias_span":null,"name":"GraphQLUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7445},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5829,"byte_end":5837,"line_start":176,"line_end":176,"column_start":19,"column_end":27},"alias_span":null,"name":"Nullable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7695},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5857,"byte_end":5870,"line_start":177,"line_end":177,"column_start":19,"column_end":32},"alias_span":null,"name":"EmptyMutation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3239},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5872,"byte_end":5889,"line_start":177,"line_end":177,"column_start":34,"column_end":51},"alias_span":null,"name":"EmptySubscription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7483},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5891,"byte_end":5893,"line_start":177,"line_end":177,"column_start":53,"column_end":55},"alias_span":null,"name":"ID","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7710},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5933,"byte_end":5948,"line_start":179,"line_end":179,"column_start":13,"column_end":28},"alias_span":null,"name":"ExecutionOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3369},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5950,"byte_end":5973,"line_start":179,"line_end":179,"column_start":30,"column_end":53},"alias_span":null,"name":"GraphQLSubscriptionType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":5975,"byte_end":5999,"line_start":179,"line_end":179,"column_start":55,"column_end":79},"alias_span":null,"name":"GraphQLSubscriptionValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6013,"byte_end":6035,"line_start":180,"line_end":180,"column_start":13,"column_end":35},"alias_span":null,"name":"SubscriptionConnection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3332},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6037,"byte_end":6060,"line_start":180,"line_end":180,"column_start":37,"column_end":60},"alias_span":null,"name":"SubscriptionCoordinator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7725},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6096,"byte_end":6105,"line_start":183,"line_end":183,"column_start":17,"column_end":26},"alias_span":null,"name":"RuleError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5854},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6119,"byte_end":6137,"line_start":184,"line_end":184,"column_start":13,"column_end":31},"alias_span":null,"name":"DefaultScalarValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5839},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6139,"byte_end":6145,"line_start":184,"line_end":184,"column_start":33,"column_end":39},"alias_span":null,"name":"Object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6147,"byte_end":6164,"line_start":184,"line_end":184,"column_start":41,"column_end":58},"alias_span":null,"name":"ParseScalarResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6166,"byte_end":6182,"line_start":184,"line_end":184,"column_start":60,"column_end":76},"alias_span":null,"name":"ParseScalarValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6184,"byte_end":6195,"line_start":184,"line_end":184,"column_start":78,"column_end":89},"alias_span":null,"name":"ScalarValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5917},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6197,"byte_end":6202,"line_start":184,"line_end":184,"column_start":91,"column_end":96},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":0,"byte_end":12635,"line_start":1,"line_end":377,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":278},{"krate":0,"index":368},{"krate":0,"index":492},{"krate":0,"index":1154},{"krate":0,"index":1164},{"krate":0,"index":1646},{"krate":0,"index":2291},{"krate":0,"index":3434},{"krate":0,"index":3439},{"krate":0,"index":5204},{"krate":0,"index":5339},{"krate":0,"index":5568},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5576},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5583},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5593},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5604},{"krate":0,"index":5607},{"krate":0,"index":5610},{"krate":0,"index":5613},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5720},{"krate":0,"index":5723},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5746},{"krate":0,"index":5749},{"krate":0,"index":5752},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5762},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5788},{"krate":0,"index":5791},{"krate":0,"index":5794},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":8349},{"krate":0,"index":8367},{"krate":0,"index":8370},{"krate":0,"index":8372},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5808},{"krate":0,"index":5814},{"krate":0,"index":5822},{"krate":0,"index":5830},{"krate":0,"index":5836}],"decl_id":null,"docs":"# GraphQL","sig":null,"attributes":[{"value":"*\n\n# GraphQL\n\n[GraphQL][graphql] is a data query language developed by Facebook intended to\nserve mobile and web application frontends.\n\n*Juniper* makes it possible to write GraphQL servers in Rust that are\ntype-safe and blazingly fast. We also try to make declaring and resolving\nGraphQL schemas as convenient as possible as Rust will allow.\n\nJuniper does not include a web server - instead it provides building blocks to\nmake integration with existing servers straightforward. It optionally provides a\npre-built integration for the [Iron][iron] and [Rocket] frameworks, including\nembedded [Graphiql][graphiql] for easy debugging.\n\n* [Cargo crate](https://crates.io/crates/juniper)\n* [API Reference][docsrs]\n* [Book][book]: Guides and Examples\n\n\n## Getting Started\n\nThe best place to get started is the [Juniper Book][book], which contains\nguides with plenty of examples, covering all features of Juniper.\n\nTo get started quickly and get a feel for Juniper, check out the\n[Quickstart][book_quickstart] section.\n\nFor specific information about macros, types and the Juniper api, the\n[API Reference][docsrs] is the best place to look.\n\nYou can also check out [src/tests/schema.rs][test_schema_rs] to see a complex\nschema including polymorphism with traits and interfaces.\nFor an example of web framework integration,\nsee the [rocket][rocket_examples] and [iron][iron_examples] examples folders.\n\n\n## Features\n\nJuniper supports the full GraphQL query language according to the\n[specification][graphql_spec], including interfaces, unions, schema\nintrospection, and validations.\nIt does not, however, support the schema language.\n\nAs an exception to other GraphQL libraries for other languages, Juniper builds\nnon-null types by default. A field of type `Vec<Episode>` will be converted into\n`[Episode!]!`. The corresponding Rust type for e.g. `[Episode]` would be\n`Option<Vec<Option<Episode>>>`.\n\n## Integrations\n\n### Data types\n\nJuniper has automatic integration with some very common Rust crates to make\nbuilding schemas a breeze. The types from these crates will be usable in\nyour Schemas automatically.\n\n* [uuid][uuid]\n* [url][url]\n* [chrono][chrono]\n* [bson][bson]\n\n### Web Frameworks\n\n* [rocket][rocket]\n* [iron][iron]\n\n\n## API Stability\n\nJuniper has not reached 1.0 yet, thus some API instability should be expected.\n\n[graphql]: http://graphql.org\n[graphiql]: https://github.com/graphql/graphiql\n[iron]: https://github.com/iron/iron\n[graphql_spec]: http://facebook.github.io/graphql\n[test_schema_rs]: https://github.com/graphql-rust/juniper/blob/master/juniper/src/tests/schema.rs\n[tokio]: https://github.com/tokio-rs/tokio\n[rocket_examples]: https://github.com/graphql-rust/juniper/tree/master/juniper_rocket/examples\n[iron_examples]: https://github.com/graphql-rust/juniper/tree/master/juniper_iron/examples\n[Rocket]: https://rocket.rs\n[book]: https://graphql-rust.github.io/\n[book_quickstart]: https://graphql-rust.github.io/quickstart.html\n[docsrs]: https://docs.rs/juniper\n\n[uuid]: https://crates.io/crates/uuid\n[url]: https://crates.io/crates/url\n[chrono]: https://crates.io/crates/chrono\n[bson]: https://crates.io/crates/bson\n\n*/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":0,"byte_end":3141,"line_start":1,"line_end":92,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":3200,"byte_end":3222,"line_start":94,"line_end":94,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5839},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26009,"byte_end":26015,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Object","qualname":"::value::object::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":5841}],"decl_id":null,"docs":" A Object value\n","sig":null,"attributes":[{"value":"/ A Object value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":25944,"byte_end":25962,"line_start":6,"line_end":6,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26209,"byte_end":26222,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Object<S>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Object value with a fixed number of\n preallocated slots for field-value pairs\n","sig":null,"attributes":[{"value":"/ Create a new Object value with a fixed number of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26096,"byte_end":26148,"line_start":13,"line_end":13,"column_start":5,"column_end":57}},{"value":"/ preallocated slots for field-value pairs","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26153,"byte_end":26197,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26582,"byte_end":26591,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"add_field","qualname":"<Object<S>>::add_field","value":"pub fn add_field<K>(&mut Self, K, Value<S>) -> Option<Value<S>> where\nK: AsRef<str> + Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a new field with a value","sig":null,"attributes":[{"value":"/ Add a new field with a value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26343,"byte_end":26375,"line_start":21,"line_end":21,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26380,"byte_end":26383,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If there is already a field for the given key","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26388,"byte_end":26437,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/ any both values are objects, they are merged.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26442,"byte_end":26491,"line_start":24,"line_end":24,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26496,"byte_end":26499,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Otherwise the existing value is replaced and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26504,"byte_end":26552,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/ returned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26557,"byte_end":26570,"line_start":27,"line_end":27,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26985,"byte_end":26999,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"contains_field","qualname":"<Object<S>>::contains_field","value":"pub fn contains_field<K: AsRef<str>>(&Self, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the object already contains a field with the given name\n","sig":null,"attributes":[{"value":"/ Check if the object already contains a field with the given name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26905,"byte_end":26973,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27159,"byte_end":27163,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"iter","qualname":"<Object<S>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a iterator over all field value pairs\n","sig":null,"attributes":[{"value":"/ Get a iterator over all field value pairs","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27102,"byte_end":27147,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27330,"byte_end":27338,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Object<S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a iterator over all mutable field value pairs\n","sig":null,"attributes":[{"value":"/ Get a iterator over all mutable field value pairs","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27265,"byte_end":27318,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27500,"byte_end":27511,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"field_count","qualname":"<Object<S>>::field_count","value":"pub fn field_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the current number of fields\n","sig":null,"attributes":[{"value":"/ Get the current number of fields","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27452,"byte_end":27488,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27622,"byte_end":27637,"line_start":60,"line_end":60,"column_start":12,"column_end":27},"name":"get_field_value","qualname":"<Object<S>>::get_field_value","value":"pub fn get_field_value<K: AsRef<str>>(&Self, K) -> Option<&Value<S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value for a given field\n","sig":null,"attributes":[{"value":"/ Get the value for a given field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27575,"byte_end":27610,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27803,"byte_end":27822,"line_start":65,"line_end":65,"column_start":12,"column_end":31},"name":"get_mut_field_value","qualname":"<Object<S>>::get_mut_field_value","value":"pub fn get_mut_field_value<K: AsRef<str>>(&mut Self, K)\n-> Option<&mut Value<S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the mutable value for a given field\n","sig":null,"attributes":[{"value":"/ Get the mutable value for a given field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27748,"byte_end":27791,"line_start":64,"line_end":64,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":28900,"byte_end":28917,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"ParseScalarResult","qualname":"::value::scalar::ParseScalarResult","value":"Result<S, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" The result of converting a string into a scalar value\n","sig":null,"attributes":[{"value":"/ The result of converting a string into a scalar value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":28833,"byte_end":28890,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29063,"byte_end":29079,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"ParseScalarValue","qualname":"::value::scalar::ParseScalarValue","value":"ParseScalarValue<S = DefaultScalarValue>","parent":null,"children":[{"krate":0,"index":133}],"decl_id":null,"docs":" A trait used to convert a `ScalarToken` into a certain scalar value type\n","sig":null,"attributes":[{"value":"/ A trait used to convert a `ScalarToken` into a certain scalar value type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":28976,"byte_end":29052,"line_start":13,"line_end":13,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29149,"byte_end":29157,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"from_str","qualname":"::value::scalar::ParseScalarValue::from_str","value":"pub fn from_str(ScalarToken) -> ParseScalarResult<, S>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" See the trait documentation\n","sig":null,"attributes":[{"value":"/ See the trait documentation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29110,"byte_end":29141,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34061,"byte_end":34072,"line_start":175,"line_end":175,"column_start":11,"column_end":22},"name":"ScalarValue","qualname":"::value::scalar::ScalarValue","value":"ScalarValue: fmt::Debug + fmt::Display + PartialEq + Clone + Serialize + From<String> +\nFrom<bool> + From<i32> + From<f64> + 'static","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" A trait marking a type that could be used as internal representation of\n scalar values in juniper","sig":null,"attributes":[{"value":"/ A trait marking a type that could be used as internal representation of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29214,"byte_end":29289,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ scalar values in juniper","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29290,"byte_end":29318,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29319,"byte_end":29322,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The main objective of this abstraction is to allow other libraries to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29323,"byte_end":29396,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ replace the default representation with something that better fits their","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29397,"byte_end":29473,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ needs.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29474,"byte_end":29484,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/ There is a custom derive (`#[derive(juniper::GraphQLScalarValue)]`) available that implements","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29485,"byte_end":29582,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ most of the required traits automatically for a enum representing a scalar value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29583,"byte_end":29668,"line_start":26,"line_end":26,"column_start":1,"column_end":86}},{"value":"/ This derives needs a additional annotation of the form","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29669,"byte_end":29727,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ `#[juniper(visitor = \"VisitorType\")]` to specify a type that implements","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29728,"byte_end":29803,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ `serde::de::Visitor` and that is used to deserialize the value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29804,"byte_end":29871,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29872,"byte_end":29875,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing a new scalar value representation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29876,"byte_end":29928,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ The preferred way to define a new scalar value representation is","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29929,"byte_end":29997,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ defining a enum containing a variant for each type that needs to be represented","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":29998,"byte_end":30081,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/ at the lowest level.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30082,"byte_end":30106,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ The following example introduces an new variant that is able to store 64 bit integers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30107,"byte_end":30197,"line_start":35,"line_end":35,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30198,"byte_end":30201,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30202,"byte_end":30209,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30210,"byte_end":30229,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/ # use serde::{de, Deserialize, Deserializer};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30230,"byte_end":30279,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ # use juniper::ScalarValue;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30280,"byte_end":30311,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30312,"byte_end":30317,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Clone, PartialEq, juniper::GraphQLScalarValue)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30318,"byte_end":30385,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ enum MyScalarValue {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30386,"byte_end":30410,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/     Int(i32),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30411,"byte_end":30428,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/     Long(i64),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30429,"byte_end":30447,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/     Float(f64),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30448,"byte_end":30467,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/     String(String),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30468,"byte_end":30491,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/     Boolean(bool),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30492,"byte_end":30514,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30515,"byte_end":30520,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30521,"byte_end":30524,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ impl ScalarValue for MyScalarValue {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30525,"byte_end":30565,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/     type Visitor = MyScalarValueVisitor;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30566,"byte_end":30610,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30611,"byte_end":30614,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/      fn as_int(&self) -> Option<i32> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30615,"byte_end":30657,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/        match *self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30658,"byte_end":30682,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/            Self::Int(ref i) => Some(*i),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30683,"byte_end":30727,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30728,"byte_end":30753,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30754,"byte_end":30766,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30767,"byte_end":30775,"line_start":59,"line_end":59,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30776,"byte_end":30779,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/    fn as_string(&self) -> Option<String> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30780,"byte_end":30826,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/        match *self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30827,"byte_end":30851,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/            Self::String(ref s) => Some(s.clone()),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30852,"byte_end":30906,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30907,"byte_end":30932,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30933,"byte_end":30945,"line_start":65,"line_end":65,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30946,"byte_end":30954,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30955,"byte_end":30958,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/    fn into_string(self) -> Option<String> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":30959,"byte_end":31006,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/        match self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31007,"byte_end":31030,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/            Self::String(s) => Some(s),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31031,"byte_end":31073,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31074,"byte_end":31099,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31100,"byte_end":31112,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31113,"byte_end":31121,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31122,"byte_end":31125,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/    fn as_str(&self) -> Option<&str> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31126,"byte_end":31167,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/        match *self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31168,"byte_end":31192,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/            Self::String(ref s) => Some(s.as_str()),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31193,"byte_end":31248,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31249,"byte_end":31274,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31275,"byte_end":31287,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31288,"byte_end":31296,"line_start":80,"line_end":80,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31297,"byte_end":31300,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/    fn as_float(&self) -> Option<f64> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31301,"byte_end":31343,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/        match *self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31344,"byte_end":31368,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"/            Self::Int(ref i) => Some(*i as f64),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31369,"byte_end":31420,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"/            Self::Float(ref f) => Some(*f),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31421,"byte_end":31467,"line_start":85,"line_end":85,"column_start":1,"column_end":47}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31468,"byte_end":31493,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31494,"byte_end":31506,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31507,"byte_end":31515,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31516,"byte_end":31519,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/    fn as_boolean(&self) -> Option<bool> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31520,"byte_end":31565,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/        match *self {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31566,"byte_end":31590,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/            Self::Boolean(ref b) => Some(*b),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31591,"byte_end":31639,"line_start":92,"line_end":92,"column_start":1,"column_end":49}},{"value":"/            _ => None,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31640,"byte_end":31665,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/        }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31666,"byte_end":31678,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31679,"byte_end":31687,"line_start":95,"line_end":95,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31688,"byte_end":31693,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31694,"byte_end":31697,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31698,"byte_end":31720,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/ struct MyScalarValueVisitor;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31721,"byte_end":31753,"line_start":99,"line_end":99,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31754,"byte_end":31757,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ impl<'de> de::Visitor<'de> for MyScalarValueVisitor {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31758,"byte_end":31815,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/     type Value = MyScalarValue;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31816,"byte_end":31851,"line_start":102,"line_end":102,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31852,"byte_end":31855,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31856,"byte_end":31932,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/         formatter.write_str(\"a valid input value\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31933,"byte_end":31987,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31988,"byte_end":31997,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":31998,"byte_end":32001,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     fn visit_bool<E>(self, value: bool) -> Result<MyScalarValue, E> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32002,"byte_end":32075,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/         Ok(MyScalarValue::Boolean(value))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32076,"byte_end":32121,"line_start":109,"line_end":109,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32122,"byte_end":32131,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32132,"byte_end":32135,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     fn visit_i32<E>(self, value: i32) -> Result<MyScalarValue, E>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32136,"byte_end":32205,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/     where","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32206,"byte_end":32219,"line_start":113,"line_end":113,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32220,"byte_end":32245,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32246,"byte_end":32255,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/         Ok(MyScalarValue::Int(value))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32256,"byte_end":32297,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32298,"byte_end":32307,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32308,"byte_end":32311,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/     fn visit_i64<E>(self, value: i64) -> Result<MyScalarValue, E>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32312,"byte_end":32381,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/     where","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32382,"byte_end":32395,"line_start":120,"line_end":120,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32396,"byte_end":32421,"line_start":121,"line_end":121,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32422,"byte_end":32431,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/         if value <= i32::max_value() as i64 {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32432,"byte_end":32481,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/             self.visit_i32(value as i32)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32482,"byte_end":32526,"line_start":124,"line_end":124,"column_start":1,"column_end":45}},{"value":"/         } else {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32527,"byte_end":32547,"line_start":125,"line_end":125,"column_start":1,"column_end":21}},{"value":"/             Ok(MyScalarValue::Long(value))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32548,"byte_end":32594,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/         }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32595,"byte_end":32608,"line_start":127,"line_end":127,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32609,"byte_end":32618,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32619,"byte_end":32622,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/     fn visit_u32<E>(self, value: u32) -> Result<MyScalarValue, E>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32623,"byte_end":32692,"line_start":130,"line_end":130,"column_start":1,"column_end":70}},{"value":"/     where","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32693,"byte_end":32706,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32707,"byte_end":32732,"line_start":132,"line_end":132,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32733,"byte_end":32742,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/         if value <= i32::max_value() as u32 {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32743,"byte_end":32792,"line_start":134,"line_end":134,"column_start":1,"column_end":50}},{"value":"/             self.visit_i32(value as i32)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32793,"byte_end":32837,"line_start":135,"line_end":135,"column_start":1,"column_end":45}},{"value":"/         } else {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32838,"byte_end":32858,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/             self.visit_u64(value as u64)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32859,"byte_end":32903,"line_start":137,"line_end":137,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32904,"byte_end":32917,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32918,"byte_end":32927,"line_start":139,"line_end":139,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32928,"byte_end":32931,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     fn visit_u64<E>(self, value: u64) -> Result<MyScalarValue, E>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":32932,"byte_end":33001,"line_start":141,"line_end":141,"column_start":1,"column_end":70}},{"value":"/     where","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33002,"byte_end":33015,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33016,"byte_end":33041,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33042,"byte_end":33051,"line_start":144,"line_end":144,"column_start":1,"column_end":10}},{"value":"/         if value <= i64::max_value() as u64 {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33052,"byte_end":33101,"line_start":145,"line_end":145,"column_start":1,"column_end":50}},{"value":"/             self.visit_i64(value as i64)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33102,"byte_end":33146,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/         } else {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33147,"byte_end":33167,"line_start":147,"line_end":147,"column_start":1,"column_end":21}},{"value":"/             // Browser's JSON.stringify serialize all numbers having no","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33168,"byte_end":33243,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/             // fractional part as integers (no decimal point), so we","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33244,"byte_end":33316,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/             // must parse large integers as floating point otherwise","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33317,"byte_end":33389,"line_start":150,"line_end":150,"column_start":1,"column_end":73}},{"value":"/             // we would error on transferring large floating point","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33390,"byte_end":33460,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/             // numbers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33461,"byte_end":33488,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/             Ok(MyScalarValue::Float(value as f64))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33489,"byte_end":33543,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33544,"byte_end":33557,"line_start":154,"line_end":154,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33558,"byte_end":33567,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33568,"byte_end":33571,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/     fn visit_f64<E>(self, value: f64) -> Result<MyScalarValue, E> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33572,"byte_end":33643,"line_start":157,"line_end":157,"column_start":1,"column_end":72}},{"value":"/         Ok(MyScalarValue::Float(value))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33644,"byte_end":33687,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33688,"byte_end":33697,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33698,"byte_end":33701,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/     fn visit_str<E>(self, value: &str) -> Result<MyScalarValue, E>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33702,"byte_end":33772,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/     where","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33773,"byte_end":33786,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33787,"byte_end":33812,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33813,"byte_end":33822,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/         self.visit_string(value.into())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33823,"byte_end":33866,"line_start":165,"line_end":165,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33867,"byte_end":33876,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33877,"byte_end":33880,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     fn visit_string<E>(self, value: String) -> Result<MyScalarValue, E> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33881,"byte_end":33958,"line_start":168,"line_end":168,"column_start":1,"column_end":78}},{"value":"/         Ok(MyScalarValue::String(value))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":33959,"byte_end":34003,"line_start":169,"line_end":169,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34004,"byte_end":34013,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34014,"byte_end":34019,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34020,"byte_end":34023,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34024,"byte_end":34042,"line_start":173,"line_end":173,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34043,"byte_end":34050,"line_start":174,"line_end":174,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34305,"byte_end":34312,"line_start":188,"line_end":188,"column_start":10,"column_end":17},"name":"Visitor","qualname":"::value::scalar::ScalarValue::Visitor","value":"type Visitor: for<'de> de::Visitor<'de, Value = Self> + Default;","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Serde visitor used to deserialize this scalar value\n","sig":null,"attributes":[{"value":"/ Serde visitor used to deserialize this scalar value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34240,"byte_end":34295,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34714,"byte_end":34721,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"is_type","qualname":"::value::scalar::ScalarValue::is_type","value":"pub fn is_type<'a, T>(&'a Self) -> bool where T: 'a,\n&'a Self: Into<Option<&'a T>>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Checks if the current value contains the a value of the current type","sig":null,"attributes":[{"value":"/ Checks if the current value contains the a value of the current type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34370,"byte_end":34442,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34447,"byte_end":34450,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34455,"byte_end":34462,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use juniper::{ScalarValue, DefaultScalarValue};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34467,"byte_end":34520,"line_start":193,"line_end":193,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34525,"byte_end":34528,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let value = DefaultScalarValue::Int(42);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34533,"byte_end":34577,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34582,"byte_end":34585,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(value.is_type::<i32>(), true);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34590,"byte_end":34635,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(value.is_type::<f64>(), false);","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34640,"byte_end":34686,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34691,"byte_end":34694,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34699,"byte_end":34706,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35148,"byte_end":35154,"line_start":214,"line_end":214,"column_start":8,"column_end":14},"name":"as_int","qualname":"::value::scalar::ScalarValue::as_int","value":"pub fn as_int(&Self) -> Option<i32>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Convert the given scalar value into an integer value","sig":null,"attributes":[{"value":"/ Convert the given scalar value into an integer value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34858,"byte_end":34914,"line_start":209,"line_end":209,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34919,"byte_end":34922,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This function is used for implementing `GraphQLValue` for `i32` for all","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34927,"byte_end":35002,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ scalar values. Implementations should convert all supported integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35007,"byte_end":35078,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ types with 32 bit or less to an integer if requested.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35083,"byte_end":35140,"line_start":213,"line_end":213,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35359,"byte_end":35368,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"as_string","qualname":"::value::scalar::ScalarValue::as_string","value":"pub fn as_string(&Self) -> Option<String>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Represents this [`ScalarValue`] a [`String`] value.","sig":null,"attributes":[{"value":"/ Represents this [`ScalarValue`] a [`String`] value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35183,"byte_end":35238,"line_start":216,"line_end":216,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35243,"byte_end":35246,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This function is used for implementing `GraphQLValue` for `String` for all","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35251,"byte_end":35329,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ scalar values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35334,"byte_end":35351,"line_start":219,"line_end":219,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35584,"byte_end":35595,"line_start":226,"line_end":226,"column_start":8,"column_end":19},"name":"into_string","qualname":"::value::scalar::ScalarValue::into_string","value":"pub fn into_string(Self) -> Option<String>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Converts this [`ScalarValue`] into a [`String`] value.","sig":null,"attributes":[{"value":"/ Converts this [`ScalarValue`] into a [`String`] value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35400,"byte_end":35458,"line_start":222,"line_end":222,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35463,"byte_end":35466,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Same as [`ScalarValue::as_string`], but takes ownership, so allows to omit redundant","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35471,"byte_end":35559,"line_start":224,"line_end":224,"column_start":5,"column_end":93}},{"value":"/ cloning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35564,"byte_end":35576,"line_start":225,"line_end":225,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35801,"byte_end":35807,"line_start":232,"line_end":232,"column_start":8,"column_end":14},"name":"as_str","qualname":"::value::scalar::ScalarValue::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Convert the given scalar value into a string value","sig":null,"attributes":[{"value":"/ Convert the given scalar value into a string value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35626,"byte_end":35680,"line_start":228,"line_end":228,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35685,"byte_end":35688,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This function is used for implementing `GraphQLValue` for `String` for all","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35693,"byte_end":35771,"line_start":230,"line_end":230,"column_start":5,"column_end":83}},{"value":"/ scalar values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35776,"byte_end":35793,"line_start":231,"line_end":231,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36179,"byte_end":36187,"line_start":240,"line_end":240,"column_start":8,"column_end":16},"name":"as_float","qualname":"::value::scalar::ScalarValue::as_float","value":"pub fn as_float(&Self) -> Option<f64>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Convert the given scalar value into a float value","sig":null,"attributes":[{"value":"/ Convert the given scalar value into a float value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35837,"byte_end":35890,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35895,"byte_end":35898,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function is used for implementing `GraphQLValue` for `f64` for all","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35903,"byte_end":35978,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ scalar values. Implementations should convert all supported integer","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":35983,"byte_end":36054,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"/ types with 64 bit or less and all floating point values with 64 bit or","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36059,"byte_end":36133,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ less to a float if requested.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36138,"byte_end":36171,"line_start":239,"line_end":239,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36391,"byte_end":36401,"line_start":246,"line_end":246,"column_start":8,"column_end":18},"name":"as_boolean","qualname":"::value::scalar::ScalarValue::as_boolean","value":"pub fn as_boolean(&Self) -> Option<bool>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Convert the given scalar value into a boolean value","sig":null,"attributes":[{"value":"/ Convert the given scalar value into a boolean value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36216,"byte_end":36271,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36276,"byte_end":36279,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This function is used for implementing `GraphQLValue` for `bool` for all","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36284,"byte_end":36360,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ scalar values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36365,"byte_end":36383,"line_start":245,"line_end":245,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36490,"byte_end":36502,"line_start":249,"line_end":249,"column_start":8,"column_end":20},"name":"into_another","qualname":"::value::scalar::ScalarValue::into_another","value":"pub fn into_another<S: ScalarValue>(Self) -> S","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Converts this [`ScalarValue`] into another one.\n","sig":null,"attributes":[{"value":"/ Converts this [`ScalarValue`] into another one.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36431,"byte_end":36482,"line_start":248,"line_end":248,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5855},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37181,"byte_end":37184,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"Int","qualname":"::value::scalar::DefaultScalarValue::Int","value":"DefaultScalarValue::Int(i32)","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5858},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37195,"byte_end":37200,"line_start":271,"line_end":271,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::scalar::DefaultScalarValue::Float","value":"DefaultScalarValue::Float(f64)","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5861},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37211,"byte_end":37217,"line_start":272,"line_end":272,"column_start":5,"column_end":11},"name":"String","qualname":"::value::scalar::DefaultScalarValue::String","value":"DefaultScalarValue::String(String)","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5864},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37231,"byte_end":37238,"line_start":273,"line_end":273,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::scalar::DefaultScalarValue::Boolean","value":"DefaultScalarValue::Boolean(bool)","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5854},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37156,"byte_end":37174,"line_start":269,"line_end":269,"column_start":10,"column_end":28},"name":"DefaultScalarValue","qualname":"::value::scalar::DefaultScalarValue","value":"pub enum DefaultScalarValue {\n    Int(i32),\n    Float(f64),\n    String(String),\n    Boolean(bool),\n}","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5861},{"krate":0,"index":5864}],"decl_id":null,"docs":" The default scalar value representation in juniper","sig":null,"attributes":[{"value":"/ The default scalar value representation in juniper","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":36952,"byte_end":37006,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37007,"byte_end":37010,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ This types closely follows the graphql specification.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37011,"byte_end":37068,"line_start":266,"line_end":266,"column_start":1,"column_end":58}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37124,"byte_end":37146,"line_start":268,"line_end":268,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5908},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":38714,"byte_end":38739,"line_start":339,"line_end":339,"column_start":12,"column_end":37},"name":"DefaultScalarValueVisitor","qualname":"::value::scalar::DefaultScalarValueVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5919},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13522,"byte_end":13526,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":5917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5921},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13532,"byte_end":13538,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::value::Value::Scalar","value":"Value::Scalar(S)","parent":{"krate":0,"index":5917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5924},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13547,"byte_end":13551,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"List","qualname":"::value::Value::List","value":"Value::List(Vec<Value<S>>)","parent":{"krate":0,"index":5917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5927},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13572,"byte_end":13578,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Object","qualname":"::value::Value::Object","value":"Value::Object(Object<S>)","parent":{"krate":0,"index":5917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5917},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13486,"byte_end":13491,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value<S = DefaultScalarValue> {\n    Null,\n    Scalar(S),\n    List(Vec<Value<S>>),\n    Object(Object<S>),\n}","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5927}],"decl_id":null,"docs":" Serializable value returned from query and field execution.","sig":null,"attributes":[{"value":"/ Serializable value returned from query and field execution.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":12940,"byte_end":13003,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13004,"byte_end":13007,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Used by the execution engine and resolvers to build up the response","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13008,"byte_end":13079,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ structure. Similar to the `Json` type found in the serialize crate.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13080,"byte_end":13151,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13152,"byte_end":13155,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ It is also similar to the `InputValue` type, but can not contain enum","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13156,"byte_end":13229,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ values or variables. Also, lists and objects do not contain any location","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13230,"byte_end":13306,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ information since they are generated by resolving fields and values rather","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13307,"byte_end":13385,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ than parsing a source query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13386,"byte_end":13418,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13454,"byte_end":13476,"line_start":30,"line_end":30,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13690,"byte_end":13694,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"null","qualname":"<Value<S>>::null","value":"pub fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a null value.\n","sig":null,"attributes":[{"value":"/ Construct a null value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13651,"byte_end":13678,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13854,"byte_end":13857,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"int","qualname":"<Value<S>>::int","value":"pub fn int(i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an integer value.\n","sig":null,"attributes":[{"value":"/ Construct an integer value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13737,"byte_end":13768,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `Value::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13773,"byte_end":13842,"line_start":47,"line_end":47,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14034,"byte_end":14039,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"float","qualname":"<Value<S>>::float","value":"pub fn float(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a floating point value.\n","sig":null,"attributes":[{"value":"/ Construct a floating point value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13911,"byte_end":13948,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `Value::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13953,"byte_end":14022,"line_start":53,"line_end":53,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14208,"byte_end":14214,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"string","qualname":"<Value<S>>::string","value":"pub fn string(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a string value.\n","sig":null,"attributes":[{"value":"/ Construct a string value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14093,"byte_end":14122,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `Value::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14127,"byte_end":14196,"line_start":59,"line_end":59,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14396,"byte_end":14403,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"boolean","qualname":"<Value<S>>::boolean","value":"pub fn boolean(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a boolean value.\n","sig":null,"attributes":[{"value":"/ Construct a boolean value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14280,"byte_end":14310,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `Value::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14315,"byte_end":14384,"line_start":65,"line_end":65,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14497,"byte_end":14501,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"list","qualname":"<Value<S>>::list","value":"pub fn list(Vec<Self>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a list value.\n","sig":null,"attributes":[{"value":"/ Construct a list value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14458,"byte_end":14485,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14601,"byte_end":14607,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"object","qualname":"<Value<S>>::object","value":"pub fn object(Object<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an object value.\n","sig":null,"attributes":[{"value":"/ Construct an object value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14559,"byte_end":14589,"line_start":75,"line_end":75,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14707,"byte_end":14713,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Value<S>>::scalar","value":"pub fn scalar<T>(T) -> Self where T: Into<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar value\n","sig":null,"attributes":[{"value":"/ Construct a scalar value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14667,"byte_end":14695,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14879,"byte_end":14886,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Value<S>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this value represent null?\n","sig":null,"attributes":[{"value":"/ Does this value represent null?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14832,"byte_end":14867,"line_start":90,"line_end":90,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15010,"byte_end":15025,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"as_scalar_value","qualname":"<Value<S>>::as_scalar_value","value":"pub fn as_scalar_value<'a, T>(&'a Self) -> Option<&'a T> where\n&'a S: Into<Option<&'a T>>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying scalar value if present\n","sig":null,"attributes":[{"value":"/ View the underlying scalar value if present","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":14951,"byte_end":14998,"line_start":95,"line_end":95,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15283,"byte_end":15297,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"as_float_value","qualname":"<Value<S>>::as_float_value","value":"pub fn as_float_value(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying float value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying float value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15223,"byte_end":15271,"line_start":106,"line_end":106,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15497,"byte_end":15512,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"name":"as_object_value","qualname":"<Value<S>>::as_object_value","value":"pub fn as_object_value(&Self) -> Option<&Object<S>>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying object value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying object value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15436,"byte_end":15485,"line_start":114,"line_end":114,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15760,"byte_end":15771,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Value<S>>::into_object","value":"pub fn into_object(Self) -> Option<Object<S>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this value into an Object.","sig":null,"attributes":[{"value":"/ Convert this value into an Object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15654,"byte_end":15692,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15697,"byte_end":15700,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns None if value is not an Object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15705,"byte_end":15748,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15980,"byte_end":15999,"line_start":133,"line_end":133,"column_start":12,"column_end":31},"name":"as_mut_object_value","qualname":"<Value<S>>::as_mut_object_value","value":"pub fn as_mut_object_value(&mut Self) -> Option<&mut Object<S>>","parent":null,"children":[],"decl_id":null,"docs":" Mutable view into the underlying object value, if present.\n","sig":null,"attributes":[{"value":"/ Mutable view into the underlying object value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":15906,"byte_end":15968,"line_start":132,"line_end":132,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16212,"byte_end":16225,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"as_list_value","qualname":"<Value<S>>::as_list_value","value":"pub fn as_list_value(&Self) -> Option<&Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying list value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying list value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16153,"byte_end":16200,"line_start":140,"line_end":140,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16425,"byte_end":16434,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"as_scalar","qualname":"<Value<S>>::as_scalar","value":"pub fn as_scalar(&Self) -> Option<&S>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying scalar value, if present\n","sig":null,"attributes":[{"value":"/ View the underlying scalar value, if present","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16365,"byte_end":16413,"line_start":148,"line_end":148,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16629,"byte_end":16644,"line_start":157,"line_end":157,"column_start":12,"column_end":27},"name":"as_string_value","qualname":"<Value<S>>::as_string_value","value":"pub fn as_string_value<'a>(&'a Self) -> Option<&'a str> where\nOption<&'a String>: From<&'a S>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying string value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying string value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16568,"byte_end":16617,"line_start":156,"line_end":156,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16893,"byte_end":16909,"line_start":165,"line_end":165,"column_start":12,"column_end":28},"name":"map_scalar_value","qualname":"<Value<S>>::map_scalar_value","value":"pub fn map_scalar_value<Into: ScalarValue>(Self) -> Value<Into>","parent":null,"children":[],"decl_id":null,"docs":" Maps the [`ScalarValue`] type of this [`Value`] into the specified one.\n","sig":null,"attributes":[{"value":"/ Maps the [`ScalarValue`] type of this [`Value`] into the specified one.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":16806,"byte_end":16881,"line_start":164,"line_end":164,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42609,"byte_end":42624,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"IntoFieldResult","qualname":"::macros::helper::subscription::IntoFieldResult","value":"IntoFieldResult<T, S>","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" Trait for wrapping [`Stream`] into [`Ok`] if it's not [`Result`].","sig":null,"attributes":[{"value":"/ Trait for wrapping [`Stream`] into [`Ok`] if it's not [`Result`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42366,"byte_end":42435,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42436,"byte_end":42439,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Used in subscription macros when user can provide type alias for [`Stream`] or","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42440,"byte_end":42522,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ `Result<Stream, _>` and then a function on [`Stream`] should be called.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42523,"byte_end":42598,"line_start":13,"line_end":13,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42692,"byte_end":42696,"line_start":16,"line_end":16,"column_start":10,"column_end":14},"name":"Item","qualname":"::macros::helper::subscription::IntoFieldResult::Item","value":"type Item;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Type of items yielded by this [`Stream`].\n","sig":null,"attributes":[{"value":"/ Type of items yielded by this [`Stream`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42637,"byte_end":42682,"line_start":15,"line_end":15,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42771,"byte_end":42782,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"into_result","qualname":"::macros::helper::subscription::IntoFieldResult::into_result","value":"pub fn into_result(Self) -> Result<T, FieldError<S>>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Turns current [`Stream`] type into a generic [`Result`].\n","sig":null,"attributes":[{"value":"/ Turns current [`Stream`] type into a generic [`Result`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42703,"byte_end":42763,"line_start":18,"line_end":18,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43343,"byte_end":43353,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"StreamItem","qualname":"::macros::helper::subscription::StreamItem","value":"","parent":null,"children":[],"decl_id":null,"docs":" This struct is used in `ExtractTypeFromStream` implementation for streams\n of values.\n","sig":null,"attributes":[{"value":"/ This struct is used in `ExtractTypeFromStream` implementation for streams","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43239,"byte_end":43316,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ of values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43317,"byte_end":43331,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43480,"byte_end":43492,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"StreamResult","qualname":"::macros::helper::subscription::StreamResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" This struct is used in `ExtractTypeFromStream` implementation for results\n with streams of values inside.\n","sig":null,"attributes":[{"value":"/ This struct is used in `ExtractTypeFromStream` implementation for results","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43356,"byte_end":43433,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with streams of values inside.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43434,"byte_end":43468,"line_start":50,"line_end":50,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43617,"byte_end":43633,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"ResultStreamItem","qualname":"::macros::helper::subscription::ResultStreamItem","value":"","parent":null,"children":[],"decl_id":null,"docs":" This struct is used in `ExtractTypeFromStream` implementation for streams\n of results of values inside.\n","sig":null,"attributes":[{"value":"/ This struct is used in `ExtractTypeFromStream` implementation for streams","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43495,"byte_end":43572,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ of results of values inside.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43573,"byte_end":43605,"line_start":54,"line_end":54,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43771,"byte_end":43789,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"ResultStreamResult","qualname":"::macros::helper::subscription::ResultStreamResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" This struct is used in `ExtractTypeFromStream` implementation for results\n with streams of results of values inside.\n","sig":null,"attributes":[{"value":"/ This struct is used in `ExtractTypeFromStream` implementation for results","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43636,"byte_end":43713,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ with streams of results of values inside.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43714,"byte_end":43759,"line_start":58,"line_end":58,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":321},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43965,"byte_end":43986,"line_start":64,"line_end":64,"column_start":11,"column_end":32},"name":"ExtractTypeFromStream","qualname":"::macros::helper::subscription::ExtractTypeFromStream","value":"ExtractTypeFromStream<T, S>","parent":null,"children":[{"krate":0,"index":324}],"decl_id":null,"docs":" This trait is used in `juniper::graphql_subscription` macro to get stream's\n item type that implements `GraphQLValue` from type alias provided\n by user.\n","sig":null,"attributes":[{"value":"/ This trait is used in `juniper::graphql_subscription` macro to get stream's","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43792,"byte_end":43871,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ item type that implements `GraphQLValue` from type alias provided","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43872,"byte_end":43941,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ by user.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43942,"byte_end":43954,"line_start":63,"line_end":63,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":324},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44190,"byte_end":44194,"line_start":71,"line_end":71,"column_start":10,"column_end":14},"name":"Item","qualname":"::macros::helper::subscription::ExtractTypeFromStream::Item","value":"type Item: GraphQLValue<S>;","parent":{"krate":0,"index":321},"children":[],"decl_id":null,"docs":" Stream's return Value that will be returned if\n no errors occured. Is used to determine field type in\n `#[juniper::graphql_subscription]`\n","sig":null,"attributes":[{"value":"/ Stream's return Value that will be returned if","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44025,"byte_end":44075,"line_start":68,"line_end":68,"column_start":5,"column_end":55}},{"value":"/ no errors occured. Is used to determine field type in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44080,"byte_end":44137,"line_start":69,"line_end":69,"column_start":5,"column_end":62}},{"value":"/ `#[juniper::graphql_subscription]`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44142,"byte_end":44180,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":362},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41168,"byte_end":41185,"line_start":11,"line_end":11,"column_start":11,"column_end":28},"name":"AsDynGraphQLValue","qualname":"::macros::helper::AsDynGraphQLValue","value":"AsDynGraphQLValue<S: ScalarValue = DefaultScalarValue>","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"decl_id":null,"docs":" Conversion of a [`GraphQLValue`] to its [trait object][1].","sig":null,"attributes":[{"value":"/ Conversion of a [`GraphQLValue`] to its [trait object][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":40980,"byte_end":41042,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41043,"byte_end":41046,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`GraphQLValue`]: crate::GraphQLValue","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41047,"byte_end":41088,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ [1]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41089,"byte_end":41157,"line_start":10,"line_end":10,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41335,"byte_end":41342,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Context","qualname":"::macros::helper::AsDynGraphQLValue::Context","value":"type Context;","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Context type of this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Context type of this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41229,"byte_end":41271,"line_start":12,"line_end":12,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41276,"byte_end":41279,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`GraphQLValue`]: crate::GraphQLValue","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41284,"byte_end":41325,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":365},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41466,"byte_end":41474,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::macros::helper::AsDynGraphQLValue::TypeInfo","value":"type TypeInfo;","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Schema information type of this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Schema information type of this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41349,"byte_end":41402,"line_start":17,"line_end":17,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41407,"byte_end":41410,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ [`GraphQLValue`]: crate::GraphQLValue","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41415,"byte_end":41456,"line_start":19,"line_end":19,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41637,"byte_end":41657,"line_start":25,"line_end":25,"column_start":8,"column_end":28},"name":"as_dyn_graphql_value","qualname":"::macros::helper::AsDynGraphQLValue::as_dyn_graphql_value","value":"pub fn as_dyn_graphql_value(&Self)\n-> &DynGraphQLValue<S, Self::Context, Self::TypeInfo>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Converts this value to a [`DynGraphQLValue`] [trait object][1].","sig":null,"attributes":[{"value":"/ Converts this value to a [`DynGraphQLValue`] [trait object][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41481,"byte_end":41548,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41553,"byte_end":41556,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41561,"byte_end":41629,"line_start":24,"line_end":24,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41886,"byte_end":41912,"line_start":30,"line_end":30,"column_start":8,"column_end":34},"name":"as_dyn_graphql_value_async","qualname":"::macros::helper::AsDynGraphQLValue::as_dyn_graphql_value_async","value":"pub fn as_dyn_graphql_value_async(&Self)\n-> &DynGraphQLValueAsync<S, Self::Context, Self::TypeInfo>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Converts this value to a [`DynGraphQLValueAsync`] [trait object][1].","sig":null,"attributes":[{"value":"/ Converts this value to a [`DynGraphQLValueAsync`] [trait object][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41725,"byte_end":41797,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41802,"byte_end":41805,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/mod.rs","byte_start":41810,"byte_end":41878,"line_start":29,"line_end":29,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5945},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45386,"byte_end":45391,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Named","qualname":"::ast::Type::Named","value":"Type::Named(Cow)","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" A nullable named type, e.g. `String`\n","sig":null,"attributes":[{"value":"/ A nullable named type, e.g. `String`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45341,"byte_end":45381,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5948},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45548,"byte_end":45552,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"List","qualname":"::ast::Type::List","value":"Type::List(Box<Type>)","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" A nullable list type, e.g. `[String]`","sig":null,"attributes":[{"value":"/ A nullable list type, e.g. `[String]`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45411,"byte_end":45452,"line_start":19,"line_end":19,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45457,"byte_end":45460,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The list itself is what's nullable, the containing type might be non-null.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45465,"byte_end":45543,"line_start":21,"line_end":21,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5951},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45619,"byte_end":45631,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"NonNullNamed","qualname":"::ast::Type::NonNullNamed","value":"Type::NonNullNamed(Cow)","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" A non-null named type, e.g. `String!`\n","sig":null,"attributes":[{"value":"/ A non-null named type, e.g. `String!`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45573,"byte_end":45614,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5954},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45786,"byte_end":45797,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"name":"NonNullList","qualname":"::ast::Type::NonNullList","value":"Type::NonNullList(Box<Type>)","parent":{"krate":0,"index":5943},"children":[],"decl_id":null,"docs":" A non-null list type, e.g. `[String]!`.","sig":null,"attributes":[{"value":"/ A non-null list type, e.g. `[String]!`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45651,"byte_end":45694,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45699,"byte_end":45702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The list itself is what's non-null, the containing type might be null.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45707,"byte_end":45781,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":5943},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45326,"byte_end":45330,"line_start":16,"line_end":16,"column_start":10,"column_end":14},"name":"Type","qualname":"::ast::Type","value":"pub enum Type<'a> {\n    Named(Cow),\n    List(Box<Type>),\n    NonNullNamed(Cow),\n    NonNullList(Box<Type>),\n}","parent":null,"children":[{"krate":0,"index":5945},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5954}],"decl_id":null,"docs":" A type literal in the syntax tree","sig":null,"attributes":[{"value":"/ A type literal in the syntax tree","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45142,"byte_end":45179,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45180,"byte_end":45183,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This enum carries no semantic information and might refer to types that do","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45184,"byte_end":45262,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ not exist.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45263,"byte_end":45277,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5976},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46249,"byte_end":46253,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Null","qualname":"::ast::InputValue::Null","value":"InputValue::Null","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5978},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46259,"byte_end":46265,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::ast::InputValue::Scalar","value":"InputValue::Scalar(S)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5981},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46274,"byte_end":46278,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Enum","qualname":"::ast::InputValue::Enum","value":"InputValue::Enum(String)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5984},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46292,"byte_end":46300,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"Variable","qualname":"::ast::InputValue::Variable","value":"InputValue::Variable(String)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5987},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46314,"byte_end":46318,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"List","qualname":"::ast::InputValue::List","value":"InputValue::List(Vec<Spanning<InputValue<S>>>)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5990},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46354,"byte_end":46360,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Object","qualname":"::ast::InputValue::Object","value":"InputValue::Object(Vec<(Spanning<String>, Spanning<InputValue<S>>)>)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5974},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46208,"byte_end":46218,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"name":"InputValue","qualname":"::ast::InputValue","value":"pub enum InputValue<S = DefaultScalarValue> {\n    Null,\n    Scalar(S),\n    Enum(String),\n    Variable(String),\n    List(Vec<Spanning<InputValue<S>>>),\n    Object(Vec<(Spanning<String>, Spanning<InputValue<S>>)>),\n}","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5987},{"krate":0,"index":5990}],"decl_id":null,"docs":" A JSON-like value that can be passed into the query execution, either\n out-of-band, or in-band as default variable values. These are _not_ constant\n and might contain variables.","sig":null,"attributes":[{"value":"/ A JSON-like value that can be passed into the query execution, either","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45817,"byte_end":45890,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ out-of-band, or in-band as default variable values. These are _not_ constant","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45891,"byte_end":45971,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and might contain variables.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":45972,"byte_end":46004,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46005,"byte_end":46008,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Lists and objects variants are _spanned_, i.e. they contain a reference to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46009,"byte_end":46087,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ their position in the source file, if available.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46088,"byte_end":46140,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46176,"byte_end":46198,"line_start":38,"line_end":38,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6005},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46461,"byte_end":46479,"line_start":49,"line_end":49,"column_start":12,"column_end":30},"name":"VariableDefinition","qualname":"::ast::VariableDefinition","value":"VariableDefinition { var_type, default_value }","parent":null,"children":[{"krate":0,"index":6008},{"krate":0,"index":6009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6008},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46497,"byte_end":46505,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"name":"var_type","qualname":"::ast::VariableDefinition::var_type","value":"parser::utils::Spanning<ast::Type<'a>>","parent":{"krate":0,"index":6005},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6009},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46535,"byte_end":46548,"line_start":51,"line_end":51,"column_start":9,"column_end":22},"name":"default_value","qualname":"::ast::VariableDefinition::default_value","value":"std::option::Option<parser::utils::Spanning<ast::InputValue<S>>>","parent":{"krate":0,"index":6005},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6026},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46632,"byte_end":46641,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"Arguments","qualname":"::ast::Arguments","value":"Arguments { items }","parent":null,"children":[{"krate":0,"index":6029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6029},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46659,"byte_end":46664,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"items","qualname":"::ast::Arguments::items","value":"std::vec::Vec<(parser::utils::Spanning<&'a str>, parser::utils::Spanning<ast::InputValue<S>>)>","parent":{"krate":0,"index":6026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6046},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46766,"byte_end":46785,"line_start":60,"line_end":60,"column_start":12,"column_end":31},"name":"VariableDefinitions","qualname":"::ast::VariableDefinitions","value":"VariableDefinitions { items }","parent":null,"children":[{"krate":0,"index":6049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6049},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46803,"byte_end":46808,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"items","qualname":"::ast::VariableDefinitions::items","value":"std::vec::Vec<(parser::utils::Spanning<&'a str>, ast::VariableDefinition<'a, S>)>","parent":{"krate":0,"index":6046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6066},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46912,"byte_end":46917,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Field","qualname":"::ast::Field","value":"Field { alias, name, arguments, directives, selection_set }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6069},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46935,"byte_end":46940,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"alias","qualname":"::ast::Field::alias","value":"std::option::Option<parser::utils::Spanning<&'a str>>","parent":{"krate":0,"index":6066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6070},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":46977,"byte_end":46981,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Field::name","value":"parser::utils::Spanning<&'a str>","parent":{"krate":0,"index":6066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6071},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47010,"byte_end":47019,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"name":"arguments","qualname":"::ast::Field::arguments","value":"std::option::Option<parser::utils::Spanning<ast::Arguments<'a, S>>>","parent":{"krate":0,"index":6066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6072},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47065,"byte_end":47075,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::Field::directives","value":"std::option::Option<std::vec::Vec<parser::utils::Spanning<ast::Directive<'a, S>>>>","parent":{"krate":0,"index":6066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6073},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47126,"byte_end":47139,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"selection_set","qualname":"::ast::Field::selection_set","value":"std::option::Option<std::vec::Vec<ast::Selection<'a, S>>>","parent":{"krate":0,"index":6066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6090},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47221,"byte_end":47235,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"FragmentSpread","qualname":"::ast::FragmentSpread","value":"FragmentSpread { name, directives }","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6093},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47253,"byte_end":47257,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::FragmentSpread::name","value":"parser::utils::Spanning<&'a str>","parent":{"krate":0,"index":6090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6094},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47286,"byte_end":47296,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::FragmentSpread::directives","value":"std::option::Option<std::vec::Vec<parser::utils::Spanning<ast::Directive<'a, S>>>>","parent":{"krate":0,"index":6090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6111},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47388,"byte_end":47402,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"InlineFragment","qualname":"::ast::InlineFragment","value":"InlineFragment { type_condition, directives, selection_set }","parent":null,"children":[{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6114},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47420,"byte_end":47434,"line_start":81,"line_end":81,"column_start":9,"column_end":23},"name":"type_condition","qualname":"::ast::InlineFragment::type_condition","value":"std::option::Option<parser::utils::Spanning<&'a str>>","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6115},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47471,"byte_end":47481,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::InlineFragment::directives","value":"std::option::Option<std::vec::Vec<parser::utils::Spanning<ast::Directive<'a, S>>>>","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6116},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47532,"byte_end":47545,"line_start":83,"line_end":83,"column_start":9,"column_end":22},"name":"selection_set","qualname":"::ast::InlineFragment::selection_set","value":"std::vec::Vec<ast::Selection<'a, S>>","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6136},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48096,"byte_end":48101,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Field","qualname":"::ast::Selection::Field","value":"Selection::Field(Spanning<Field>)","parent":{"krate":0,"index":6133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6139},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48131,"byte_end":48145,"line_start":105,"line_end":105,"column_start":5,"column_end":19},"name":"FragmentSpread","qualname":"::ast::Selection::FragmentSpread","value":"Selection::FragmentSpread(Spanning<FragmentSpread>)","parent":{"krate":0,"index":6133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6142},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48184,"byte_end":48198,"line_start":106,"line_end":106,"column_start":5,"column_end":19},"name":"InlineFragment","qualname":"::ast::Selection::InlineFragment","value":"Selection::InlineFragment(Spanning<InlineFragment>)","parent":{"krate":0,"index":6133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6133},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48052,"byte_end":48061,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Selection","qualname":"::ast::Selection","value":"pub enum Selection<'a, S = DefaultScalarValue> {\n    Field(Spanning<Field>),\n    FragmentSpread(Spanning<FragmentSpread>),\n    InlineFragment(Spanning<InlineFragment>),\n}","parent":null,"children":[{"krate":0,"index":6136},{"krate":0,"index":6139},{"krate":0,"index":6142}],"decl_id":null,"docs":" Entry in a GraphQL selection set","sig":null,"attributes":[{"value":"/ Entry in a GraphQL selection set","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47573,"byte_end":47609,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47610,"byte_end":47613,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This enum represents one of the three variants of a selection that exists","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47614,"byte_end":47691,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ in GraphQL: a field, a fragment spread, or an inline fragment. Each of the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47692,"byte_end":47770,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ variants references their location in the query source.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47771,"byte_end":47830,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47831,"byte_end":47834,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47835,"byte_end":47846,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47847,"byte_end":47852,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/   field(withArg: 123) { subField }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47853,"byte_end":47891,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/   ...fragmentSpread","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47892,"byte_end":47915,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/   ...on User {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47916,"byte_end":47934,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/     inlineFragmentField","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47935,"byte_end":47962,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/   }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47963,"byte_end":47970,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47971,"byte_end":47976,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":47977,"byte_end":47984,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48020,"byte_end":48042,"line_start":102,"line_end":102,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6161},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48282,"byte_end":48291,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"Directive","qualname":"::ast::Directive","value":"Directive { name, arguments }","parent":null,"children":[{"krate":0,"index":6164},{"krate":0,"index":6165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6164},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48309,"byte_end":48313,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Directive::name","value":"parser::utils::Spanning<&'a str>","parent":{"krate":0,"index":6161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6165},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48342,"byte_end":48351,"line_start":112,"line_end":112,"column_start":9,"column_end":18},"name":"arguments","qualname":"::ast::Directive::arguments","value":"std::option::Option<parser::utils::Spanning<ast::Arguments<'a, S>>>","parent":{"krate":0,"index":6161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6183},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48479,"byte_end":48484,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"name":"Query","qualname":"::ast::OperationType::Query","value":"OperationType::Query","parent":{"krate":0,"index":6182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6185},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48490,"byte_end":48498,"line_start":119,"line_end":119,"column_start":5,"column_end":13},"name":"Mutation","qualname":"::ast::OperationType::Mutation","value":"OperationType::Mutation","parent":{"krate":0,"index":6182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6187},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48504,"byte_end":48516,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"Subscription","qualname":"::ast::OperationType::Subscription","value":"OperationType::Subscription","parent":{"krate":0,"index":6182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6182},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48459,"byte_end":48472,"line_start":117,"line_end":117,"column_start":10,"column_end":23},"name":"OperationType","qualname":"::ast::OperationType","value":"pub enum OperationType { Query, Mutation, Subscription, }","parent":null,"children":[{"krate":0,"index":6183},{"krate":0,"index":6185},{"krate":0,"index":6187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48392,"byte_end":48414,"line_start":115,"line_end":115,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48590,"byte_end":48599,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"Operation","qualname":"::ast::Operation","value":"Operation { operation_type, name, variable_definitions, directives, selection_set }","parent":null,"children":[{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6203}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48521,"byte_end":48543,"line_start":123,"line_end":123,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6199},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48617,"byte_end":48631,"line_start":126,"line_end":126,"column_start":9,"column_end":23},"name":"operation_type","qualname":"::ast::Operation::operation_type","value":"ast::OperationType","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6200},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48656,"byte_end":48660,"line_start":127,"line_end":127,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Operation::name","value":"std::option::Option<parser::utils::Spanning<&'a str>>","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6201},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48697,"byte_end":48717,"line_start":128,"line_end":128,"column_start":9,"column_end":29},"name":"variable_definitions","qualname":"::ast::Operation::variable_definitions","value":"std::option::Option<parser::utils::Spanning<ast::VariableDefinitions<'a, S>>>","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6202},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48773,"byte_end":48783,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::Operation::directives","value":"std::option::Option<std::vec::Vec<parser::utils::Spanning<ast::Directive<'a, S>>>>","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6203},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48834,"byte_end":48847,"line_start":130,"line_end":130,"column_start":9,"column_end":22},"name":"selection_set","qualname":"::ast::Operation::selection_set","value":"std::vec::Vec<ast::Selection<'a, S>>","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6220},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48921,"byte_end":48929,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"Fragment","qualname":"::ast::Fragment","value":"Fragment { name, type_condition, directives, selection_set }","parent":null,"children":[{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6225},{"krate":0,"index":6226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6223},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48947,"byte_end":48951,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Fragment::name","value":"parser::utils::Spanning<&'a str>","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6224},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":48980,"byte_end":48994,"line_start":136,"line_end":136,"column_start":9,"column_end":23},"name":"type_condition","qualname":"::ast::Fragment::type_condition","value":"parser::utils::Spanning<&'a str>","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6225},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49023,"byte_end":49033,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::Fragment::directives","value":"std::option::Option<std::vec::Vec<parser::utils::Spanning<ast::Directive<'a, S>>>>","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6226},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49084,"byte_end":49097,"line_start":138,"line_end":138,"column_start":9,"column_end":22},"name":"selection_set","qualname":"::ast::Fragment::selection_set","value":"std::vec::Vec<ast::Selection<'a, S>>","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6246},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49208,"byte_end":49217,"line_start":144,"line_end":144,"column_start":5,"column_end":14},"name":"Operation","qualname":"::ast::Definition::Operation","value":"Definition::Operation(Spanning<Operation>)","parent":{"krate":0,"index":6243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6249},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49251,"byte_end":49259,"line_start":145,"line_end":145,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::ast::Definition::Fragment","value":"Definition::Fragment(Spanning<Fragment>)","parent":{"krate":0,"index":6243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6243},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49184,"byte_end":49194,"line_start":143,"line_end":143,"column_start":10,"column_end":20},"name":"Definition","qualname":"::ast::Definition","value":"pub enum Definition<'a, S> {\n    Operation(Spanning<Operation>),\n    Fragment(Spanning<Fragment>),\n}","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6249}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":402},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49315,"byte_end":49323,"line_start":149,"line_end":149,"column_start":10,"column_end":18},"name":"Document","qualname":"::ast::Document","value":"[Definition]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49754,"byte_end":49768,"line_start":159,"line_end":159,"column_start":11,"column_end":25},"name":"FromInputValue","qualname":"::ast::FromInputValue","value":"FromInputValue<S = DefaultScalarValue>: Sized","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" Parse an unstructured input value into a Rust data type.","sig":null,"attributes":[{"value":"/ Parse an unstructured input value into a Rust data type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49426,"byte_end":49486,"line_start":153,"line_end":153,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49487,"byte_end":49490,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The conversion _can_ fail, and must in that case return None. Implemented","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49491,"byte_end":49568,"line_start":155,"line_end":155,"column_start":1,"column_end":78}},{"value":"/ automatically by the convenience proc macro `graphql_scalar` or by deriving GraphQLEnum.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49569,"byte_end":49661,"line_start":156,"line_end":156,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49662,"byte_end":49665,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Must be implemented manually when manually exposing new enums or scalars.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49666,"byte_end":49743,"line_start":158,"line_end":158,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49842,"byte_end":49858,"line_start":161,"line_end":161,"column_start":8,"column_end":24},"name":"from_input_value","qualname":"::ast::FromInputValue::from_input_value","value":"pub fn from_input_value(&InputValue<S>) -> Option<Self>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49806,"byte_end":49834,"line_start":160,"line_end":160,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50155,"byte_end":50173,"line_start":166,"line_end":166,"column_start":8,"column_end":26},"name":"from_implicit_null","qualname":"::ast::FromInputValue::from_implicit_null","value":"pub fn from_implicit_null() -> Self","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Performs the conversion from an absent value (e.g. to distinguish between implicit and\n explicit null). The default implementation just uses `from_input_value` as if an explicit\n null were provided. This conversion must not fail.\n","sig":null,"attributes":[{"value":"/ Performs the conversion from an absent value (e.g. to distinguish between implicit and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49900,"byte_end":49990,"line_start":163,"line_end":163,"column_start":5,"column_end":95}},{"value":"/ explicit null). The default implementation just uses `from_input_value` as if an explicit","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49995,"byte_end":50088,"line_start":164,"line_end":164,"column_start":5,"column_end":98}},{"value":"/ null were provided. This conversion must not fail.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50093,"byte_end":50147,"line_start":165,"line_end":165,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":412},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50389,"byte_end":50401,"line_start":173,"line_end":173,"column_start":11,"column_end":23},"name":"ToInputValue","qualname":"::ast::ToInputValue","value":"ToInputValue<S = DefaultScalarValue>: Sized","parent":null,"children":[{"krate":0,"index":414}],"decl_id":null,"docs":" Losslessly clones a Rust data type into an InputValue.\n","sig":null,"attributes":[{"value":"/ Losslessly clones a Rust data type into an InputValue.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50320,"byte_end":50378,"line_start":172,"line_end":172,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50475,"byte_end":50489,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"to_input_value","qualname":"::ast::ToInputValue::to_input_value","value":"pub fn to_input_value(&Self) -> InputValue<S>","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50439,"byte_end":50467,"line_start":174,"line_end":174,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50658,"byte_end":50662,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"name","qualname":"<Type>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of a named type.","sig":null,"attributes":[{"value":"/ Get the name of a named type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50542,"byte_end":50575,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50580,"byte_end":50583,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Only applies to named types; lists will return `None`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50588,"byte_end":50646,"line_start":181,"line_end":181,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50948,"byte_end":50962,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"innermost_name","qualname":"<Type>::innermost_name","value":"pub fn innermost_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the innermost name by unpacking lists","sig":null,"attributes":[{"value":"/ Get the innermost name by unpacking lists","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50825,"byte_end":50870,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50875,"byte_end":50878,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ All type literals contain exactly one named type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50883,"byte_end":50936,"line_start":191,"line_end":191,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51240,"byte_end":51251,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"is_non_null","qualname":"<Type>::is_non_null","value":"pub fn is_non_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if a type only can represent non-null values.\n","sig":null,"attributes":[{"value":"/ Determines if a type only can represent non-null values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51168,"byte_end":51228,"line_start":199,"line_end":199,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51812,"byte_end":51816,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"null","qualname":"<InputValue<S>>::null","value":"pub fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a null value.\n","sig":null,"attributes":[{"value":"/ Construct a null value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51773,"byte_end":51800,"line_start":220,"line_end":220,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51987,"byte_end":51990,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"int","qualname":"<InputValue<S>>::int","value":"pub fn int(i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an integer value.\n","sig":null,"attributes":[{"value":"/ Construct an integer value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51865,"byte_end":51896,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `InputValue::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51901,"byte_end":51975,"line_start":226,"line_end":226,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52172,"byte_end":52177,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"float","qualname":"<InputValue<S>>::float","value":"pub fn float(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a floating point value.\n","sig":null,"attributes":[{"value":"/ Construct a floating point value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52044,"byte_end":52081,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `InputValue::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52086,"byte_end":52160,"line_start":232,"line_end":232,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52352,"byte_end":52359,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"boolean","qualname":"<InputValue<S>>::boolean","value":"pub fn boolean(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a boolean value.\n","sig":null,"attributes":[{"value":"/ Construct a boolean value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52231,"byte_end":52261,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `InputValue::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52266,"byte_end":52340,"line_start":238,"line_end":238,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52534,"byte_end":52540,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"string","qualname":"<InputValue<S>>::string","value":"pub fn string<T: AsRef<str>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a string value.\n","sig":null,"attributes":[{"value":"/ Construct a string value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52414,"byte_end":52443,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"deprecated(since = \"0.11.0\", note = \"Use `InputValue::scalar` instead\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52448,"byte_end":52522,"line_start":244,"line_end":244,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52673,"byte_end":52679,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"scalar","qualname":"<InputValue<S>>::scalar","value":"pub fn scalar<T>(T) -> Self where T: Into<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar value\n","sig":null,"attributes":[{"value":"/ Construct a scalar value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52633,"byte_end":52661,"line_start":249,"line_end":249,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52821,"byte_end":52831,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"enum_value","qualname":"<InputValue<S>>::enum_value","value":"pub fn enum_value<T: AsRef<str>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an enum value.\n","sig":null,"attributes":[{"value":"/ Construct an enum value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52781,"byte_end":52809,"line_start":257,"line_end":257,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52965,"byte_end":52973,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"variable","qualname":"<InputValue<S>>::variable","value":"pub fn variable<T: AsRef<str>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a variable value.\n","sig":null,"attributes":[{"value":"/ Construct a variable value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":52922,"byte_end":52953,"line_start":262,"line_end":262,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53354,"byte_end":53358,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"list","qualname":"<InputValue<S>>::list","value":"pub fn list(Vec<Self>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an unlocated list.","sig":null,"attributes":[{"value":"/ Construct an unlocated list.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53068,"byte_end":53100,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53105,"byte_end":53108,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Convenience function to make each `InputValue` in the input vector","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53113,"byte_end":53183,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ not contain any location information. Can be used from `ToInputValue`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53188,"byte_end":53261,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/ implementations, where no source code position information is available.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53266,"byte_end":53342,"line_start":271,"line_end":271,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53510,"byte_end":53521,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"parsed_list","qualname":"<InputValue<S>>::parsed_list","value":"pub fn parsed_list(Vec<Spanning<Self>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a located list.\n","sig":null,"attributes":[{"value":"/ Construct a located list.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53469,"byte_end":53498,"line_start":276,"line_end":276,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53784,"byte_end":53790,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"object","qualname":"<InputValue<S>>::object","value":"pub fn object<K>(IndexMap<K, Self>) -> Self where K: AsRef<str> + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Construct an unlocated object.","sig":null,"attributes":[{"value":"/ Construct an unlocated object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53595,"byte_end":53629,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53634,"byte_end":53637,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Similar to `InputValue::list`, it makes each key and value in the given","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53642,"byte_end":53717,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ hash map not contain any location information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":53722,"byte_end":53772,"line_start":284,"line_end":284,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":54232,"byte_end":54245,"line_start":302,"line_end":302,"column_start":12,"column_end":25},"name":"parsed_object","qualname":"<InputValue<S>>::parsed_object","value":"pub fn parsed_object(Vec<(Spanning<String>, Spanning<Self>)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a located object.\n","sig":null,"attributes":[{"value":"/ Construct a located object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":54189,"byte_end":54220,"line_start":301,"line_end":301,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":54395,"byte_end":54405,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"into_const","qualname":"<InputValue<S>>::into_const","value":"pub fn into_const(Self, &Variables<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Resolve all variables to their values.\n","sig":null,"attributes":[{"value":"/ Resolve all variables to their values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":54341,"byte_end":54383,"line_start":306,"line_end":306,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55068,"byte_end":55075,"line_start":325,"line_end":325,"column_start":12,"column_end":19},"name":"convert","qualname":"<InputValue<S>>::convert","value":"pub fn convert<T>(&Self) -> Option<T> where T: FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand form of invoking `FromInputValue::from()`.\n","sig":null,"attributes":[{"value":"/ Shorthand form of invoking `FromInputValue::from()`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55000,"byte_end":55056,"line_start":324,"line_end":324,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55259,"byte_end":55266,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"is_null","qualname":"<InputValue<S>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the value represent null?\n","sig":null,"attributes":[{"value":"/ Does the value represent null?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55213,"byte_end":55247,"line_start":332,"line_end":332,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55389,"byte_end":55400,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"is_variable","qualname":"<InputValue<S>>::is_variable","value":"pub fn is_variable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the value represent a variable?\n","sig":null,"attributes":[{"value":"/ Does the value represent a variable?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55337,"byte_end":55377,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55537,"byte_end":55550,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"as_enum_value","qualname":"<InputValue<S>>::as_enum_value","value":"pub fn as_enum_value(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying enum value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying enum value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55478,"byte_end":55525,"line_start":342,"line_end":342,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55748,"byte_end":55760,"line_start":351,"line_end":351,"column_start":12,"column_end":24},"name":"as_int_value","qualname":"<InputValue<S>>::as_int_value","value":"pub fn as_int_value(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying int value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying int value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55690,"byte_end":55736,"line_start":350,"line_end":350,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55912,"byte_end":55926,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"as_float_value","qualname":"<InputValue<S>>::as_float_value","value":"pub fn as_float_value(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying float value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying float value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":55852,"byte_end":55900,"line_start":355,"line_end":355,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56081,"byte_end":56096,"line_start":361,"line_end":361,"column_start":12,"column_end":27},"name":"as_string_value","qualname":"<InputValue<S>>::as_string_value","value":"pub fn as_string_value(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying string value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying string value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56020,"byte_end":56069,"line_start":360,"line_end":360,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56250,"byte_end":56259,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"as_scalar","qualname":"<InputValue<S>>::as_scalar","value":"pub fn as_scalar(&Self) -> Option<&S>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying scalar value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying scalar value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56189,"byte_end":56238,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56460,"byte_end":56475,"line_start":374,"line_end":374,"column_start":12,"column_end":27},"name":"as_scalar_value","qualname":"<InputValue<S>>::as_scalar_value","value":"pub fn as_scalar_value<'a, T>(&'a Self) -> Option<&'a T> where T: 'a,\n&'a S: Into<Option<&'a T>>","parent":null,"children":[],"decl_id":null,"docs":" View the underlying scalar value, if present.\n","sig":null,"attributes":[{"value":"/ View the underlying scalar value, if present.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56399,"byte_end":56448,"line_start":373,"line_end":373,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56816,"byte_end":56831,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"to_object_value","qualname":"<InputValue<S>>::to_object_value","value":"pub fn to_object_value(&Self) -> Option<IndexMap<&str, &Self>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the input value to an unlocated object value.","sig":null,"attributes":[{"value":"/ Convert the input value to an unlocated object value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56634,"byte_end":56691,"line_start":382,"line_end":382,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56696,"byte_end":56699,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This constructs a new IndexMap that contain references to the keys","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56704,"byte_end":56774,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/ and values in `self`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":56779,"byte_end":56804,"line_start":385,"line_end":385,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57303,"byte_end":57316,"line_start":401,"line_end":401,"column_start":12,"column_end":25},"name":"to_list_value","qualname":"<InputValue<S>>::to_list_value","value":"pub fn to_list_value(&Self) -> Option<Vec<&Self>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the input value to an unlocated list value.","sig":null,"attributes":[{"value":"/ Convert the input value to an unlocated list value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57134,"byte_end":57189,"line_start":397,"line_end":397,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57194,"byte_end":57197,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This constructs a new vector that contain references to the values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57202,"byte_end":57272,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ in `self`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57277,"byte_end":57291,"line_start":400,"line_end":400,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57542,"byte_end":57562,"line_start":409,"line_end":409,"column_start":12,"column_end":32},"name":"referenced_variables","qualname":"<InputValue<S>>::referenced_variables","value":"pub fn referenced_variables(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Recursively find all variables\n","sig":null,"attributes":[{"value":"/ Recursively find all variables","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":57496,"byte_end":57530,"line_start":408,"line_end":408,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":58135,"byte_end":58147,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"unlocated_eq","qualname":"<InputValue<S>>::unlocated_eq","value":"pub fn unlocated_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare equality with another `InputValue` ignoring any source position information.\n","sig":null,"attributes":[{"value":"/ Compare equality with another `InputValue` ignoring any source position information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":58035,"byte_end":58123,"line_start":424,"line_end":424,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60368,"byte_end":60377,"line_start":495,"line_end":495,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<Arguments>::into_iter","value":"pub fn into_iter(Self)\n-> vec::IntoIter<(Spanning<&'a str>, Spanning<InputValue<S>>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60498,"byte_end":60502,"line_start":499,"line_end":499,"column_start":12,"column_end":16},"name":"iter","qualname":"<Arguments>::iter","value":"pub fn iter(&Self)\n-> slice::Iter<, (Spanning<&'a str>, Spanning<InputValue<S>>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60617,"byte_end":60625,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Arguments>::iter_mut","value":"pub fn iter_mut(&mut Self)\n-> slice::IterMut<, (Spanning<&'a str>, Spanning<InputValue<S>>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60751,"byte_end":60754,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"len","qualname":"<Arguments>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60816,"byte_end":60819,"line_start":511,"line_end":511,"column_start":12,"column_end":15},"name":"get","qualname":"<Arguments>::get","value":"pub fn get(&Self, &str) -> Option<&Spanning<InputValue<S>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":61080,"byte_end":61084,"line_start":521,"line_end":521,"column_start":12,"column_end":16},"name":"iter","qualname":"<VariableDefinitions>::iter","value":"pub fn iter(&Self)\n-> slice::Iter<, (Spanning<&'a str>, VariableDefinition<, S>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":492},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":789},{"krate":0,"index":865},{"krate":0,"index":6404},{"krate":0,"index":6414},{"krate":0,"index":869},{"krate":0,"index":6417},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6427},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":6431},{"krate":0,"index":6435},{"krate":0,"index":6438},{"krate":0,"index":6440},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":933},{"krate":0,"index":940},{"krate":0,"index":949},{"krate":0,"index":956},{"krate":0,"index":964},{"krate":0,"index":972},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":1075},{"krate":0,"index":1086},{"krate":0,"index":1099},{"krate":0,"index":1105},{"krate":0,"index":1120}],"decl_id":null,"docs":" Resolve the document to values\n","sig":null,"attributes":[{"value":"/ Resolve the document to values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":62761,"byte_end":62795,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6270},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104016,"byte_end":104019,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"All","qualname":"::executor::look_ahead::Applies::All","value":"Applies::All","parent":{"krate":0,"index":6268},"children":[],"decl_id":null,"docs":" The field is available independent from the type\n","sig":null,"attributes":[{"value":"/ The field is available independent from the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":103959,"byte_end":104011,"line_start":15,"line_end":15,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6272},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104082,"byte_end":104090,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"OnlyType","qualname":"::executor::look_ahead::Applies::OnlyType","value":"Applies::OnlyType(&'a str)","parent":{"krate":0,"index":6268},"children":[],"decl_id":null,"docs":" The field is only available for a given typename\n","sig":null,"attributes":[{"value":"/ The field is only available for a given typename","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104025,"byte_end":104077,"line_start":17,"line_end":17,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":6268},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":103941,"byte_end":103948,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Applies","qualname":"::executor::look_ahead::Applies","value":"pub enum Applies<'a> { All, OnlyType(&'a str), }","parent":null,"children":[{"krate":0,"index":6270},{"krate":0,"index":6272}],"decl_id":null,"docs":" An enum that describes if a field is available in all types of the interface\n or only in a certain subtype\n","sig":null,"attributes":[{"value":"/ An enum that describes if a field is available in all types of the interface","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":103783,"byte_end":103863,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ or only in a certain subtype","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":103864,"byte_end":103896,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6290},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104402,"byte_end":104406,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Null","qualname":"::executor::look_ahead::LookAheadValue::Null","value":"LookAheadValue::Null","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6292},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104412,"byte_end":104418,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::executor::look_ahead::LookAheadValue::Scalar","value":"LookAheadValue::Scalar(&'a S)","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6295},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104431,"byte_end":104435,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Enum","qualname":"::executor::look_ahead::LookAheadValue::Enum","value":"LookAheadValue::Enum(&'a str)","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6298},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104450,"byte_end":104454,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"List","qualname":"::executor::look_ahead::LookAheadValue::List","value":"LookAheadValue::List(Vec<LookAheadValue>)","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6301},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104488,"byte_end":104494,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Object","qualname":"::executor::look_ahead::LookAheadValue::Object","value":"LookAheadValue::Object(Vec<(&'a str, LookAheadValue)>)","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6287},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104370,"byte_end":104384,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"LookAheadValue","qualname":"::executor::look_ahead::LookAheadValue","value":"pub enum LookAheadValue<'a, S: 'a> {\n    Null,\n    Scalar(&'a S),\n    Enum(&'a str),\n    List(Vec<LookAheadValue>),\n    Object(Vec<(&'a str, LookAheadValue)>),\n}","parent":null,"children":[{"krate":0,"index":6290},{"krate":0,"index":6292},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6301}],"decl_id":null,"docs":" A JSON-like value that can is used as argument in the query execution","sig":null,"attributes":[{"value":"/ A JSON-like value that can is used as argument in the query execution","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104104,"byte_end":104177,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104178,"byte_end":104181,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In contrast to `InputValue` these values do only contain constants,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104182,"byte_end":104253,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ meaning that variables are already resolved.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104254,"byte_end":104302,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104338,"byte_end":104360,"line_start":26,"line_end":26,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6320},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":105784,"byte_end":105801,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"LookAheadArgument","qualname":"::executor::look_ahead::LookAheadArgument","value":"LookAheadArgument {  }","parent":null,"children":[{"krate":0,"index":6323},{"krate":0,"index":6324}],"decl_id":null,"docs":" An argument passed into the query\n","sig":null,"attributes":[{"value":"/ An argument passed into the query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":105700,"byte_end":105737,"line_start":67,"line_end":67,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106274,"byte_end":106278,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"name","qualname":"<LookAheadArgument>::name","value":"pub fn name(&'a Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The argument's name\n","sig":null,"attributes":[{"value":"/ The argument's name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106239,"byte_end":106262,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106370,"byte_end":106375,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"value","qualname":"<LookAheadArgument>::value","value":"pub fn value(&'a Self) -> &LookAheadValue","parent":null,"children":[],"decl_id":null,"docs":" The value of the argument\n","sig":null,"attributes":[{"value":"/ The value of the argument","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106329,"byte_end":106358,"line_start":93,"line_end":93,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106504,"byte_end":106518,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"ChildSelection","qualname":"::executor::look_ahead::ChildSelection","value":"ChildSelection {  }","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6362},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106708,"byte_end":106726,"line_start":108,"line_end":108,"column_start":12,"column_end":30},"name":"LookAheadSelection","qualname":"::executor::look_ahead::LookAheadSelection","value":"LookAheadSelection {  }","parent":null,"children":[{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368}],"decl_id":null,"docs":" A selection performed by a query\n","sig":null,"attributes":[{"value":"/ A selection performed by a query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106625,"byte_end":106661,"line_start":106,"line_end":106,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":113999,"byte_end":114016,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"for_explicit_type","qualname":"<LookAheadSelection>::for_explicit_type","value":"pub fn for_explicit_type(&Self, &str) -> ConcreteLookAheadSelection","parent":null,"children":[],"decl_id":null,"docs":" Convert a eventually type independent selection into one for a concrete type\n","sig":null,"attributes":[{"value":"/ Convert a eventually type independent selection into one for a concrete type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":113907,"byte_end":113987,"line_start":304,"line_end":304,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":6385},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":114804,"byte_end":114830,"line_start":327,"line_end":327,"column_start":12,"column_end":38},"name":"ConcreteLookAheadSelection","qualname":"::executor::look_ahead::ConcreteLookAheadSelection","value":"ConcreteLookAheadSelection {  }","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391}],"decl_id":null,"docs":" A selection performed by a query on a concrete type\n","sig":null,"attributes":[{"value":"/ A selection performed by a query on a concrete type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":114709,"byte_end":114764,"line_start":325,"line_end":325,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":750},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115226,"byte_end":115242,"line_start":338,"line_end":338,"column_start":11,"column_end":27},"name":"LookAheadMethods","qualname":"::executor::look_ahead::LookAheadMethods","value":"LookAheadMethods<'sel, S>","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" Set of common methods for `ConcreteLookAheadSelection` and `LookAheadSelection`.","sig":null,"attributes":[{"value":"/ Set of common methods for `ConcreteLookAheadSelection` and `LookAheadSelection`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":114994,"byte_end":115078,"line_start":334,"line_end":334,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115079,"byte_end":115082,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ `'sel` lifetime is intended to point to the data that this `LookAheadSelection` (or","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115083,"byte_end":115170,"line_start":336,"line_end":336,"column_start":1,"column_end":88}},{"value":"/ `ConcreteLookAheadSelection`) points to.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115171,"byte_end":115215,"line_start":337,"line_end":337,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115354,"byte_end":115364,"line_start":340,"line_end":340,"column_start":8,"column_end":18},"name":"field_name","qualname":"::executor::look_ahead::LookAheadMethods::field_name","value":"pub fn field_name(&Self) -> &'sel str","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get the (potentially aliased) name of the field represented by the current selection\n","sig":null,"attributes":[{"value":"/ Get the (potentially aliased) name of the field represented by the current selection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115258,"byte_end":115346,"line_start":339,"line_end":339,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115528,"byte_end":115540,"line_start":344,"line_end":344,"column_start":8,"column_end":20},"name":"select_child","qualname":"::executor::look_ahead::LookAheadMethods::select_child","value":"pub fn select_child(&Self, &str) -> Option<&Self>","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get the the child selection for a given field\n If a child has an alias, it will only match if the alias matches `name`\n","sig":null,"attributes":[{"value":"/ Get the the child selection for a given field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115391,"byte_end":115440,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/ If a child has an alias, it will only match if the alias matches `name`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115445,"byte_end":115520,"line_start":343,"line_end":343,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115726,"byte_end":115735,"line_start":348,"line_end":348,"column_start":8,"column_end":17},"name":"has_child","qualname":"::executor::look_ahead::LookAheadMethods::has_child","value":"pub fn has_child(&Self, &str) -> bool","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Check if a given child selection with a name exists\n If a child has an alias, it will only match if the alias matches `name`\n","sig":null,"attributes":[{"value":"/ Check if a given child selection with a name exists","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115583,"byte_end":115638,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ If a child has an alias, it will only match if the alias matches `name`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115643,"byte_end":115718,"line_start":347,"line_end":347,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115871,"byte_end":115884,"line_start":353,"line_end":353,"column_start":8,"column_end":21},"name":"has_arguments","qualname":"::executor::look_ahead::LookAheadMethods::has_arguments","value":"pub fn has_arguments(&Self) -> bool","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Does the current node have any arguments?\n","sig":null,"attributes":[{"value":"/ Does the current node have any arguments?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115818,"byte_end":115863,"line_start":352,"line_end":352,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115958,"byte_end":115970,"line_start":356,"line_end":356,"column_start":8,"column_end":20},"name":"has_children","qualname":"::executor::look_ahead::LookAheadMethods::has_children","value":"pub fn has_children(&Self) -> bool","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Does the current node have any children?\n","sig":null,"attributes":[{"value":"/ Does the current node have any children?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115906,"byte_end":115950,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116057,"byte_end":116066,"line_start":359,"line_end":359,"column_start":8,"column_end":17},"name":"arguments","qualname":"::executor::look_ahead::LookAheadMethods::arguments","value":"pub fn arguments(&Self) -> &[LookAheadArgument<, S>]","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get the top level arguments for the current selection\n","sig":null,"attributes":[{"value":"/ Get the top level arguments for the current selection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":115992,"byte_end":116049,"line_start":358,"line_end":358,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116190,"byte_end":116198,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"argument","qualname":"::executor::look_ahead::LookAheadMethods::argument","value":"pub fn argument(&Self, &str) -> Option<&LookAheadArgument<, S>>","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get the top level argument with a given name from the current selection\n","sig":null,"attributes":[{"value":"/ Get the top level argument with a given name from the current selection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116107,"byte_end":116182,"line_start":361,"line_end":361,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116417,"byte_end":116428,"line_start":367,"line_end":367,"column_start":8,"column_end":19},"name":"child_names","qualname":"::executor::look_ahead::LookAheadMethods::child_names","value":"pub fn child_names(&Self) -> Vec<&'sel str>","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get the (possibly aliased) names of the top level children for the current selection\n","sig":null,"attributes":[{"value":"/ Get the (possibly aliased) names of the top level children for the current selection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116321,"byte_end":116409,"line_start":366,"line_end":366,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116531,"byte_end":116539,"line_start":370,"line_end":370,"column_start":8,"column_end":16},"name":"children","qualname":"::executor::look_ahead::LookAheadMethods::children","value":"pub fn children(&Self) -> Vec<&Self>","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Get an iterator over the children for the current selection\n","sig":null,"attributes":[{"value":"/ Get an iterator over the children for the current selection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116460,"byte_end":116523,"line_start":369,"line_end":369,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":156387,"byte_end":156400,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"OwnedExecutor","qualname":"::executor::owned_executor::OwnedExecutor","value":"OwnedExecutor {  }","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"decl_id":null,"docs":" [`Executor`] owning all its variables. Can be used after [`Executor`] was\n destroyed.\n","sig":null,"attributes":[{"value":"/ [`Executor`] owning all its variables. Can be used after [`Executor`] was","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":156283,"byte_end":156360,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ destroyed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":156361,"byte_end":156375,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":157568,"byte_end":157585,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"type_sub_executor","qualname":"<OwnedExecutor>::type_sub_executor","value":"pub fn type_sub_executor(&Self, Option<&str>, Option<Vec<Selection>>)\n-> OwnedExecutor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":158377,"byte_end":158386,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"variables","qualname":"<OwnedExecutor>::variables","value":"pub fn variables(&Self) -> Variables<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":158480,"byte_end":158498,"line_start":79,"line_end":79,"column_start":12,"column_end":30},"name":"field_sub_executor","qualname":"<OwnedExecutor>::field_sub_executor","value":"pub fn field_sub_executor(&Self, &'a str, &'a str, SourcePosition,\n                          Option<Vec<Selection>>) -> OwnedExecutor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":159565,"byte_end":159576,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"as_executor","qualname":"<OwnedExecutor>::as_executor","value":"pub fn as_executor(&Self) -> Executor<, , CtxT, S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160165,"byte_end":160181,"line_start":128,"line_end":128,"column_start":12,"column_end":28},"name":"fragment_by_name","qualname":"<OwnedExecutor>::fragment_by_name","value":"pub fn fragment_by_name<'b>(&'b Self, &str) -> Option<&'b Fragment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160311,"byte_end":160318,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"context","qualname":"<OwnedExecutor>::context","value":"pub fn context(&Self) -> &'a CtxT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160398,"byte_end":160404,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"schema","qualname":"<OwnedExecutor>::schema","value":"pub fn schema(&Self) -> &'a SchemaType<, S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160492,"byte_end":160500,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"location","qualname":"<OwnedExecutor>::location","value":"pub fn location(&Self) -> &SourcePosition","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64320,"byte_end":64328,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"Registry","qualname":"::executor::Registry","value":"Registry { types }","parent":null,"children":[{"krate":0,"index":868}],"decl_id":null,"docs":" A type registry used to build schemas","sig":null,"attributes":[{"value":"/ A type registry used to build schemas","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64052,"byte_end":64093,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64094,"byte_end":64097,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The registry gathers metadata for all types in a schema. It provides","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64098,"byte_end":64170,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ convenience methods to convert types implementing the `GraphQLType` trait","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64171,"byte_end":64248,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ into `Type` instances and automatically registers them.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64249,"byte_end":64308,"line_start":53,"line_end":53,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":868},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64402,"byte_end":64407,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"types","qualname":"::executor::Registry::types","value":"std::collections::HashMap<types::name::Name, schema::meta::MetaType<'r, S>, std::hash::BuildHasherDefault<fnv::FnvHasher>>","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" Currently registered types\n","sig":null,"attributes":[{"value":"/ Currently registered types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64363,"byte_end":64393,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6406},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64516,"byte_end":64520,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Root","qualname":"::executor::FieldPath::Root","value":"FieldPath::Root(SourcePosition)","parent":{"krate":0,"index":6404},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6409},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64542,"byte_end":64547,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Field","qualname":"::executor::FieldPath::Field","value":"FieldPath::Field(&'a str, SourcePosition, Arc<FieldPath>)","parent":{"krate":0,"index":6404},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6404},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64496,"byte_end":64505,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"FieldPath","qualname":"::executor::FieldPath","value":"pub enum FieldPath<'a> {\n    Root(SourcePosition),\n    Field(&'a str, SourcePosition, Arc<FieldPath>),\n}","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6409}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64447,"byte_end":64469,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":869},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64780,"byte_end":64788,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Executor","qualname":"::executor::Executor","value":"Executor {  }","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"decl_id":null,"docs":" Query execution engine","sig":null,"attributes":[{"value":"/ Query execution engine","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64597,"byte_end":64623,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64624,"byte_end":64627,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The executor helps drive the query execution in a schema. It keeps track","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64628,"byte_end":64704,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ of the current field stack, context, variables, and errors.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":64705,"byte_end":64768,"line_start":69,"line_end":69,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6417},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65488,"byte_end":65502,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"ExecutionError","qualname":"::executor::ExecutionError","value":"ExecutionError {  }","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421}],"decl_id":null,"docs":" Error type for errors that occur during query execution","sig":null,"attributes":[{"value":"/ Error type for errors that occur during query execution","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65244,"byte_end":65303,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65304,"byte_end":65307,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ All execution errors contain the source position in the query of the field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65308,"byte_end":65386,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/ that failed to resolve. It also contains the field stack.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65387,"byte_end":65448,"line_start":89,"line_end":89,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65767,"byte_end":65776,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"at_origin","qualname":"<ExecutionError<S>>::at_origin","value":"pub fn at_origin(FieldError<S>) -> ExecutionError<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new execution error occuring at the beginning of the query\n","sig":null,"attributes":[{"value":"/ Construct a new execution error occuring at the beginning of the query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65681,"byte_end":65755,"line_start":100,"line_end":100,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6431},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67173,"byte_end":67183,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"FieldError","qualname":"::executor::FieldError","value":"FieldError {  }","parent":null,"children":[{"krate":0,"index":6433},{"krate":0,"index":6434}],"decl_id":null,"docs":" Error type for errors that occur during field resolution","sig":null,"attributes":[{"value":"/ Error type for errors that occur during field resolution","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66581,"byte_end":66641,"line_start":136,"line_end":136,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66642,"byte_end":66645,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Field errors are represented by a human-readable error message and an","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66646,"byte_end":66719,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ optional `Value` structure containing additional information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66720,"byte_end":66785,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66786,"byte_end":66789,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ They can be converted to from any type that implements `std::fmt::Display`,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66790,"byte_end":66869,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ which makes error chaining with the `?` operator a breeze:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66870,"byte_end":66932,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66933,"byte_end":66936,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66937,"byte_end":66948,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/ # use juniper::{FieldError, ScalarValue};","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66949,"byte_end":66994,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/ fn get_string(data: Vec<u8>) -> Result<String, FieldError>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66995,"byte_end":67057,"line_start":146,"line_end":146,"column_start":1,"column_end":63}},{"value":"/ {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67058,"byte_end":67063,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/     let s = String::from_utf8(data)?;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67064,"byte_end":67105,"line_start":148,"line_end":148,"column_start":1,"column_end":42}},{"value":"/     Ok(s)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67106,"byte_end":67119,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67120,"byte_end":67125,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67126,"byte_end":67133,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68622,"byte_end":68625,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldError<S>>::new","value":"pub fn new<T: Display>(T, Value<S>) -> FieldError<S>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new error with additional data","sig":null,"attributes":[{"value":"/ Construct a new error with additional data","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67531,"byte_end":67577,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67582,"byte_end":67585,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ You can use the `graphql_value!` macro to construct an error:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67590,"byte_end":67655,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67660,"byte_end":67663,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67668,"byte_end":67679,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/ use juniper::FieldError;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67684,"byte_end":67712,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"/ # use juniper::DefaultScalarValue;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67717,"byte_end":67755,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/ use juniper::graphql_value;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67760,"byte_end":67791,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67796,"byte_end":67799,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # fn sample() {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67804,"byte_end":67823,"line_start":180,"line_end":180,"column_start":5,"column_end":24}},{"value":"/ # let _: FieldError<DefaultScalarValue> =","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67828,"byte_end":67873,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/ FieldError::new(","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67878,"byte_end":67898,"line_start":182,"line_end":182,"column_start":5,"column_end":25}},{"value":"/     \"Could not open connection to the database\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67903,"byte_end":67955,"line_start":183,"line_end":183,"column_start":5,"column_end":57}},{"value":"/     graphql_value!({ \"internal_error\": \"Connection refused\" })","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67960,"byte_end":68026,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68031,"byte_end":68037,"line_start":185,"line_end":185,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68042,"byte_end":68049,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # fn main() { }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68054,"byte_end":68073,"line_start":187,"line_end":187,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68078,"byte_end":68085,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68090,"byte_end":68093,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The `extensions` parameter will be added to the `\"extensions\"` field of the error","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68098,"byte_end":68183,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ object in the JSON response:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68188,"byte_end":68220,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68225,"byte_end":68228,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```json","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68233,"byte_end":68244,"line_start":193,"line_end":193,"column_start":5,"column_end":16}},{"value":"/ {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68249,"byte_end":68254,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/   \"errors\": [","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68259,"byte_end":68276,"line_start":195,"line_end":195,"column_start":5,"column_end":22}},{"value":"/     \"message\": \"Could not open connection to the database\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68281,"byte_end":68344,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"/     \"locations\": [{\"line\": 2, \"column\": 4}],","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68349,"byte_end":68397,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/     \"extensions\": {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68402,"byte_end":68425,"line_start":198,"line_end":198,"column_start":5,"column_end":28}},{"value":"/       \"internal_error\": \"Connection refused\"","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68430,"byte_end":68478,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68483,"byte_end":68492,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/   ]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68497,"byte_end":68504,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68509,"byte_end":68514,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68519,"byte_end":68526,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68531,"byte_end":68534,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If the argument is `Value::null()`, no extra data will be included.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68539,"byte_end":68610,"line_start":205,"line_end":205,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68816,"byte_end":68823,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"message","qualname":"<FieldError<S>>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68900,"byte_end":68910,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"extensions","qualname":"<FieldError<S>>::extensions","value":"pub fn extensions(&Self) -> &Value<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69061,"byte_end":69077,"line_start":224,"line_end":224,"column_start":12,"column_end":28},"name":"map_scalar_value","qualname":"<FieldError<S>>::map_scalar_value","value":"pub fn map_scalar_value<Into>(Self) -> FieldError<Into> where S: ScalarValue,\nInto: ScalarValue","parent":null,"children":[],"decl_id":null,"docs":" Maps the [`ScalarValue`] type of this [`FieldError`] into the specified one.\n","sig":null,"attributes":[{"value":"/ Maps the [`ScalarValue`] type of this [`FieldError`] into the specified one.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":68969,"byte_end":69049,"line_start":223,"line_end":223,"column_start":5,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":906},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69382,"byte_end":69393,"line_start":237,"line_end":237,"column_start":10,"column_end":21},"name":"FieldResult","qualname":"::executor::FieldResult","value":"Result<T, FieldError<S>>","parent":null,"children":[],"decl_id":null,"docs":" The result of resolving the value of a field of type `T`\n","sig":null,"attributes":[{"value":"/ The result of resolving the value of a field of type `T`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69312,"byte_end":69372,"line_start":236,"line_end":236,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":909},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69508,"byte_end":69523,"line_start":240,"line_end":240,"column_start":10,"column_end":25},"name":"ExecutionResult","qualname":"::executor::ExecutionResult","value":"Result<Value<S>, FieldError<S>>","parent":null,"children":[],"decl_id":null,"docs":" The result of resolving an unspecified field\n","sig":null,"attributes":[{"value":"/ The result of resolving an unspecified field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69450,"byte_end":69498,"line_start":239,"line_end":239,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":911},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69659,"byte_end":69671,"line_start":243,"line_end":243,"column_start":10,"column_end":22},"name":"ValuesStream","qualname":"::executor::ValuesStream","value":"std::pin::Pin<Box<dyn Stream<Item = Result<Value<S>, ExecutionError<S>>> +\n                  Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" Boxed `Stream` yielding `Result<Value<S>, ExecutionError<S>>`\n","sig":null,"attributes":[{"value":"/ Boxed `Stream` yielding `Result<Value<S>, ExecutionError<S>>`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69584,"byte_end":69649,"line_start":242,"line_end":242,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":914},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69874,"byte_end":69883,"line_start":247,"line_end":247,"column_start":10,"column_end":19},"name":"Variables","qualname":"::executor::Variables","value":"HashMap<String, InputValue<S>>","parent":null,"children":[],"decl_id":null,"docs":" The map of variables used for substitution during query execution\n","sig":null,"attributes":[{"value":"/ The map of variables used for substitution during query execution","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69795,"byte_end":69864,"line_start":246,"line_end":246,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":916},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70157,"byte_end":70171,"line_start":253,"line_end":253,"column_start":11,"column_end":25},"name":"IntoFieldError","qualname":"::executor::IntoFieldError","value":"IntoFieldError<S = DefaultScalarValue>","parent":null,"children":[{"krate":0,"index":918}],"decl_id":null,"docs":" Custom error handling trait to enable Error types other than `FieldError` to be specified\n as return value.","sig":null,"attributes":[{"value":"/ Custom error handling trait to enable Error types other than `FieldError` to be specified","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":69943,"byte_end":70036,"line_start":249,"line_end":249,"column_start":1,"column_end":94}},{"value":"/ as return value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70037,"byte_end":70057,"line_start":250,"line_end":250,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70058,"byte_end":70061,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Any custom error type should implement this trait to convert it to `FieldError`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70062,"byte_end":70146,"line_start":252,"line_end":252,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70224,"byte_end":70240,"line_start":255,"line_end":255,"column_start":8,"column_end":24},"name":"into_field_error","qualname":"::executor::IntoFieldError::into_field_error","value":"pub fn into_field_error(Self) -> FieldError<S>","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":926},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70614,"byte_end":70628,"line_start":272,"line_end":272,"column_start":11,"column_end":25},"name":"IntoResolvable","qualname":"::executor::IntoResolvable","value":"IntoResolvable<'a, S, T, C>","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70703,"byte_end":70707,"line_start":277,"line_end":277,"column_start":10,"column_end":14},"name":"Type","qualname":"::executor::IntoResolvable::Type","value":"type Type;","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70736,"byte_end":70740,"line_start":280,"line_end":280,"column_start":8,"column_end":12},"name":"into","qualname":"::executor::IntoResolvable::into","value":"pub fn into(Self, &'a C) -> FieldResult<Option<(&'a T::Context, T)>, S>","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":982},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73426,"byte_end":73437,"line_start":375,"line_end":375,"column_start":11,"column_end":22},"name":"FromContext","qualname":"::executor::FromContext","value":"FromContext<T>","parent":null,"children":[{"krate":0,"index":984}],"decl_id":null,"docs":" Conversion trait for context types","sig":null,"attributes":[{"value":"/ Conversion trait for context types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72885,"byte_end":72923,"line_start":364,"line_end":364,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72924,"byte_end":72927,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Used to support different context types for different parts of an","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72928,"byte_end":72997,"line_start":366,"line_end":366,"column_start":1,"column_end":70}},{"value":"/ application. By making each `GraphQL` type only aware of as much","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72998,"byte_end":73066,"line_start":367,"line_end":367,"column_start":1,"column_end":69}},{"value":"/ context as it needs to, isolation and robustness can be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73067,"byte_end":73126,"line_start":368,"line_end":368,"column_start":1,"column_end":60}},{"value":"/ improved. Implement this trait if you have contexts that can","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73127,"byte_end":73191,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/ generally be converted between each other.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73192,"byte_end":73238,"line_start":370,"line_end":370,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73239,"byte_end":73242,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The empty tuple `()` can be converted into from any context type,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73243,"byte_end":73312,"line_start":372,"line_end":372,"column_start":1,"column_end":70}},{"value":"/ making it suitable for `GraphQL` that don't need _any_ context to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73313,"byte_end":73382,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/ work, e.g. scalars or enums.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73383,"byte_end":73415,"line_start":374,"line_end":374,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73481,"byte_end":73485,"line_start":377,"line_end":377,"column_start":8,"column_end":12},"name":"from","qualname":"::executor::FromContext::from","value":"pub fn from(&T) -> &Self","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":" Perform the conversion\n","sig":null,"attributes":[{"value":"/ Perform the conversion","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73447,"byte_end":73473,"line_start":376,"line_end":376,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":985},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73600,"byte_end":73607,"line_start":381,"line_end":381,"column_start":11,"column_end":18},"name":"Context","qualname":"::executor::Context","value":"Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types that can act as context objects for `GraphQL` types.\n","sig":null,"attributes":[{"value":"/ Marker trait for types that can act as context objects for `GraphQL` types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73510,"byte_end":73589,"line_start":380,"line_end":380,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74151,"byte_end":74170,"line_start":409,"line_end":409,"column_start":18,"column_end":37},"name":"resolve_into_stream","qualname":"<Executor>::resolve_into_stream","value":"pub async fn resolve_into_stream<'i, 'v, 'res,\n                                 T: ?Sized>(&'r Self, &'i T::TypeInfo, &'v T)\n-> /*impl Trait*/ where 'i:'res, 'v:'res, 'a:'res,\nT: GraphQLSubscriptionValue<S, Context = CtxT>, T::TypeInfo: Sync, CtxT: Sync,\nS: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into a stream of [`Value`]s.\n If a field fails to resolve, pushes error to `Executor`\n and returns `Value::Null`.\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into a stream of [`Value`]s.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73969,"byte_end":74034,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/ If a field fails to resolve, pushes error to `Executor`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74039,"byte_end":74098,"line_start":407,"line_end":407,"column_start":5,"column_end":64}},{"value":"/ and returns `Value::Null`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74103,"byte_end":74133,"line_start":408,"line_end":408,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74772,"byte_end":74781,"line_start":431,"line_end":431,"column_start":18,"column_end":27},"name":"subscribe","qualname":"<Executor>::subscribe","value":"pub async fn subscribe<'s, 't, 'res,\n                       T: ?Sized>(&'r Self, &'t T::TypeInfo, &'t T)\n-> /*impl Trait*/ where 't:'res, 'a:'res, T: GraphQLSubscriptionValue<S,\nContext = CtxT>, T::TypeInfo: Sync, CtxT: Sync, S: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into a stream of [`Value`]s.\n Calls `resolve_into_stream` on `T`.\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into a stream of [`Value`]s.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74645,"byte_end":74710,"line_start":429,"line_end":429,"column_start":5,"column_end":70}},{"value":"/ Calls `resolve_into_stream` on `T`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":74715,"byte_end":74754,"line_start":430,"line_end":430,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75266,"byte_end":75282,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"resolve_with_ctx","qualname":"<Executor>::resolve_with_ctx","value":"pub fn resolve_with_ctx<NewCtxT, T: ?Sized>(&Self, &T::TypeInfo, &T)\n-> ExecutionResult<S> where NewCtxT: FromContext<CtxT>, T: GraphQLValue<S,\nContext = NewCtxT>","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value, mapping the context to a new type\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value, mapping the context to a new type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75183,"byte_end":75254,"line_start":447,"line_end":447,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75664,"byte_end":75671,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Executor>::resolve","value":"pub fn resolve<T: ?Sized>(&Self, &T::TypeInfo, &T) -> ExecutionResult<S> where\nT: GraphQLValue<S, Context = CtxT>","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into an `ExecutionResult`\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into an `ExecutionResult`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75590,"byte_end":75652,"line_start":457,"line_end":457,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75957,"byte_end":75970,"line_start":466,"line_end":466,"column_start":18,"column_end":31},"name":"resolve_async","qualname":"<Executor>::resolve_async","value":"pub async fn resolve_async<T: ?Sized, '_, '_,\n                           '_>(&'_ Self, &'_ T::TypeInfo, &'_ T)\n-> /*impl Trait*/ where T: GraphQLValueAsync<S, Context = CtxT>,\nT::TypeInfo: Sync, CtxT: Sync, S: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into an `ExecutionResult`\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into an `ExecutionResult`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":75877,"byte_end":75939,"line_start":465,"line_end":465,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76379,"byte_end":76401,"line_start":479,"line_end":479,"column_start":18,"column_end":40},"name":"resolve_with_ctx_async","qualname":"<Executor>::resolve_with_ctx_async","value":"pub async fn resolve_with_ctx_async<NewCtxT, T: ?Sized, '_, '_,\n                                    '_>(&'_ Self, &'_ T::TypeInfo, &'_ T)\n-> /*impl Trait*/ where T: GraphQLValueAsync<S, Context = NewCtxT>,\nT::TypeInfo: Sync, NewCtxT: FromContext<CtxT> + Sync, S: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value, mapping the context to a new type\n","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value, mapping the context to a new type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76290,"byte_end":76361,"line_start":478,"line_end":478,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76961,"byte_end":76979,"line_start":497,"line_end":497,"column_start":12,"column_end":30},"name":"resolve_into_value","qualname":"<Executor>::resolve_into_value","value":"pub fn resolve_into_value<T>(&Self, &T::TypeInfo, &T) -> Value<S> where\nT: GraphQLValue<S, Context = CtxT>","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into a return value","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into a return value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76821,"byte_end":76877,"line_start":494,"line_end":494,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76882,"byte_end":76885,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ If the field fails to resolve, `null` will be returned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":76890,"byte_end":76949,"line_start":496,"line_end":496,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77374,"byte_end":77398,"line_start":510,"line_end":510,"column_start":18,"column_end":42},"name":"resolve_into_value_async","qualname":"<Executor>::resolve_into_value_async","value":"pub async fn resolve_into_value_async<T: ?Sized, '_, '_,\n                                      '_>(&'_ Self, &'_ T::TypeInfo, &'_ T)\n-> /*impl Trait*/ where T: GraphQLValueAsync<S, Context = CtxT>,\nT::TypeInfo: Sync, CtxT: Sync, S: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a single arbitrary value into a return value","sig":null,"attributes":[{"value":"/ Resolve a single arbitrary value into a return value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77228,"byte_end":77284,"line_start":507,"line_end":507,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77289,"byte_end":77292,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ If the field fails to resolve, `null` will be returned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77297,"byte_end":77356,"line_start":509,"line_end":509,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77949,"byte_end":77965,"line_start":527,"line_end":527,"column_start":12,"column_end":28},"name":"replaced_context","qualname":"<Executor>::replaced_context","value":"pub fn replaced_context<'b, NewCtxT>(&'b Self, &'b NewCtxT) -> Executor","parent":null,"children":[],"decl_id":null,"docs":" Derive a new executor by replacing the context","sig":null,"attributes":[{"value":"/ Derive a new executor by replacing the context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77744,"byte_end":77794,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77799,"byte_end":77802,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This can be used to connect different types, e.g. from different Rust","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77807,"byte_end":77880,"line_start":525,"line_end":525,"column_start":5,"column_end":78}},{"value":"/ libraries, that require different context types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":77885,"byte_end":77937,"line_start":526,"line_end":526,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":78526,"byte_end":78544,"line_start":545,"line_end":545,"column_start":12,"column_end":30},"name":"field_sub_executor","qualname":"<Executor>::field_sub_executor","value":"pub fn field_sub_executor<'s>(&'s Self, &'a str, &'s str, SourcePosition,\n                              Option<&'s [Selection]>) -> Executor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":79581,"byte_end":79598,"line_start":577,"line_end":577,"column_start":12,"column_end":29},"name":"type_sub_executor","qualname":"<Executor>::type_sub_executor","value":"pub fn type_sub_executor<'s>(&'s Self, Option<&'s str>,\n                             Option<&'s [Selection]>) -> Executor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80701,"byte_end":80708,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"context","qualname":"<Executor>::context","value":"pub fn context(&Self) -> &'r CtxT","parent":null,"children":[],"decl_id":null,"docs":" Access the current context","sig":null,"attributes":[{"value":"/ Access the current context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80502,"byte_end":80532,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80537,"byte_end":80540,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ You usually provide the context when calling the top-level `execute`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80545,"byte_end":80617,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/ function, or using the context factory in the Iron integration.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80622,"byte_end":80689,"line_start":606,"line_end":606,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80808,"byte_end":80814,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"schema","qualname":"<Executor>::schema","value":"pub fn schema(&Self) -> &'a SchemaType<, S>","parent":null,"children":[],"decl_id":null,"docs":" The currently executing schema\n","sig":null,"attributes":[{"value":"/ The currently executing schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80762,"byte_end":80796,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":80902,"byte_end":80914,"line_start":617,"line_end":617,"column_start":12,"column_end":24},"name":"current_type","qualname":"<Executor>::current_type","value":"pub fn current_type(&Self) -> &TypeType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81008,"byte_end":81017,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"variables","qualname":"<Executor>::variables","value":"pub fn variables(&Self) -> &'r Variables<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81107,"byte_end":81123,"line_start":627,"line_end":627,"column_start":12,"column_end":28},"name":"fragment_by_name","qualname":"<Executor>::fragment_by_name","value":"pub fn fragment_by_name<'s>(&'s Self, &str) -> Option<&'s Fragment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81279,"byte_end":81287,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"name":"location","qualname":"<Executor>::location","value":"pub fn location(&Self) -> &SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" The current location of the executor\n","sig":null,"attributes":[{"value":"/ The current location of the executor","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81227,"byte_end":81267,"line_start":631,"line_end":631,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81447,"byte_end":81457,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"push_error","qualname":"<Executor>::push_error","value":"pub fn push_error(&Self, FieldError<S>)","parent":null,"children":[],"decl_id":null,"docs":" Add an error to the execution engine at the current executor location\n","sig":null,"attributes":[{"value":"/ Add an error to the execution engine at the current executor location","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81362,"byte_end":81435,"line_start":636,"line_end":636,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81628,"byte_end":81641,"line_start":642,"line_end":642,"column_start":12,"column_end":25},"name":"push_error_at","qualname":"<Executor>::push_error_at","value":"pub fn push_error_at(&Self, FieldError<S>, SourcePosition)","parent":null,"children":[],"decl_id":null,"docs":" Add an error to the execution engine at a specific location\n","sig":null,"attributes":[{"value":"/ Add an error to the execution engine at a specific location","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81553,"byte_end":81616,"line_start":641,"line_end":641,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82027,"byte_end":82036,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"new_error","qualname":"<Executor>::new_error","value":"pub fn new_error(&Self, FieldError<S>) -> ExecutionError<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns new [`ExecutionError`] at current location\n","sig":null,"attributes":[{"value":"/ Returns new [`ExecutionError`] at current location","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":81961,"byte_end":82015,"line_start":655,"line_end":655,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82483,"byte_end":82493,"line_start":671,"line_end":671,"column_start":12,"column_end":22},"name":"look_ahead","qualname":"<Executor>::look_ahead","value":"pub fn look_ahead(&'a Self) -> LookAheadSelection","parent":null,"children":[],"decl_id":null,"docs":" Construct a lookahead selection for the current selection.","sig":null,"attributes":[{"value":"/ Construct a lookahead selection for the current selection.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82299,"byte_end":82361,"line_start":667,"line_end":667,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82366,"byte_end":82369,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This allows seeing the whole selection and perform operations","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82374,"byte_end":82439,"line_start":669,"line_end":669,"column_start":5,"column_end":70}},{"value":"/ affecting the children.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":82444,"byte_end":82471,"line_start":670,"line_end":670,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84944,"byte_end":84961,"line_start":730,"line_end":730,"column_start":12,"column_end":29},"name":"as_owned_executor","qualname":"<Executor>::as_owned_executor","value":"pub fn as_owned_executor(&Self) -> OwnedExecutor","parent":null,"children":[],"decl_id":null,"docs":" Create new `OwnedExecutor` and clone all current data\n (except for errors) there","sig":null,"attributes":[{"value":"/ Create new `OwnedExecutor` and clone all current data","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84579,"byte_end":84636,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/ (except for errors) there","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84641,"byte_end":84670,"line_start":724,"line_end":724,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84675,"byte_end":84678,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ New empty vector is created for `errors` because","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84683,"byte_end":84735,"line_start":726,"line_end":726,"column_start":5,"column_end":57}},{"value":"/ existing errors won't be needed to be accessed by user","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84740,"byte_end":84798,"line_start":727,"line_end":727,"column_start":5,"column_end":63}},{"value":"/ in OwnedExecutor as existing errors will be returned in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84803,"byte_end":84862,"line_start":728,"line_end":728,"column_start":5,"column_end":64}},{"value":"/ `execute_query`/`execute_mutation`/`resolve_into_stream`/etc.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":84867,"byte_end":84932,"line_start":729,"line_end":729,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86050,"byte_end":86053,"line_start":765,"line_end":765,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecutionError<S>>::new","value":"pub fn new(SourcePosition, &[&str], FieldError<S>) -> ExecutionError<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86326,"byte_end":86331,"line_start":774,"line_end":774,"column_start":12,"column_end":17},"name":"error","qualname":"<ExecutionError<S>>::error","value":"pub fn error(&Self) -> &FieldError<S>","parent":null,"children":[],"decl_id":null,"docs":" The error message\n","sig":null,"attributes":[{"value":"/ The error message","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86293,"byte_end":86314,"line_start":773,"line_end":773,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86476,"byte_end":86484,"line_start":779,"line_end":779,"column_start":12,"column_end":20},"name":"location","qualname":"<ExecutionError<S>>::location","value":"pub fn location(&Self) -> &SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" The source location _in the query_ of the field that failed to resolve\n","sig":null,"attributes":[{"value":"/ The source location _in the query_ of the field that failed to resolve","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86390,"byte_end":86464,"line_start":778,"line_end":778,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86628,"byte_end":86632,"line_start":784,"line_end":784,"column_start":12,"column_end":16},"name":"path","qualname":"<ExecutionError<S>>::path","value":"pub fn path(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The path of fields leading to the field that generated this error\n","sig":null,"attributes":[{"value":"/ The path of fields leading to the field that generated this error","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86547,"byte_end":86616,"line_start":783,"line_end":783,"column_start":5,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1075},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86814,"byte_end":86837,"line_start":791,"line_end":791,"column_start":8,"column_end":31},"name":"execute_validated_query","qualname":"::executor::execute_validated_query","value":"pub fn execute_validated_query<'a, 'b, QueryT, MutationT, SubscriptionT,\n                               S>(&'b Document<, S>,\n                                  &'b Spanning<Operation<, S>>,\n                                  &RootNode<, QueryT, MutationT,\n                                            SubscriptionT, S>, &Variables<S>,\n                                  &QueryT::Context)\n-> Result<(Value<S>, Vec<ExecutionError<S>>), GraphQLError> where\nS: ScalarValue, QueryT: GraphQLType<S>, MutationT: GraphQLType<S, Context =\nQueryT::Context>, SubscriptionT: GraphQLType<S, Context = QueryT::Context>","parent":null,"children":[],"decl_id":null,"docs":" Create new `Executor` and start query/mutation execution.\n Returns `IsSubscription` error if subscription is passed.\n","sig":null,"attributes":[{"value":"/ Create new `Executor` and start query/mutation execution.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86683,"byte_end":86744,"line_start":789,"line_end":789,"column_start":1,"column_end":62}},{"value":"/ Returns `IsSubscription` error if subscription is passed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86745,"byte_end":86806,"line_start":790,"line_end":790,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":89932,"byte_end":89961,"line_start":885,"line_end":885,"column_start":14,"column_end":43},"name":"execute_validated_query_async","qualname":"::executor::execute_validated_query_async","value":"pub async fn execute_validated_query_async<'a, 'b, QueryT, MutationT,\n                                           SubscriptionT, S, '_, '_, '_,\n                                           '_>(&'b Document,\n                                               &'b Spanning<Operation>,\n                                               &'_ RootNode, &'_ Variables<S>,\n                                               &'_ QueryT::Context)\n-> /*impl Trait*/ where QueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync,\nQueryT::Context: Sync, MutationT: GraphQLTypeAsync<S, Context =\nQueryT::Context>, MutationT::TypeInfo: Sync, SubscriptionT: GraphQLType<S,\nContext = QueryT::Context> + Sync, SubscriptionT::TypeInfo: Sync,\nS: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Create new `Executor` and start asynchronous query execution.\n Returns `IsSubscription` error if subscription is passed.\n","sig":null,"attributes":[{"value":"/ Create new `Executor` and start asynchronous query execution.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":89791,"byte_end":89856,"line_start":883,"line_end":883,"column_start":1,"column_end":66}},{"value":"/ Returns `IsSubscription` error if subscription is passed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":89857,"byte_end":89918,"line_start":884,"line_end":884,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1099},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":93240,"byte_end":93253,"line_start":988,"line_end":988,"column_start":8,"column_end":21},"name":"get_operation","qualname":"::executor::get_operation","value":"pub fn get_operation<'b, 'd, 'e, S>(&'b Document, Option<&str>)\n-> Result<&'b Spanning<Operation>, GraphQLError> where S: ScalarValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":94221,"byte_end":94251,"line_start":1020,"line_end":1020,"column_start":14,"column_end":44},"name":"resolve_validated_subscription","qualname":"::executor::resolve_validated_subscription","value":"pub async fn resolve_validated_subscription<'r, 'exec_ref, 'd, 'op, QueryT,\n                                            MutationT, SubscriptionT, S, '_,\n                                            '_,\n                                            '_>(&'_ Document,\n                                                &'_ Spanning<Operation>,\n                                                &'r RootNode,\n                                                &'_ Variables<S>,\n                                                &'r QueryT::Context)\n-> /*impl Trait*/ where 'r:'exec_ref, 'd:'r, 'op:'d,\nQueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync, QueryT::Context: Sync +\n'r, MutationT: GraphQLTypeAsync<S, Context = QueryT::Context>,\nMutationT::TypeInfo: Sync, SubscriptionT: GraphQLSubscriptionType<S, Context =\nQueryT::Context>, SubscriptionT::TypeInfo: Sync, S: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Initialize new `Executor` and start resolving subscription into stream\n asynchronously.\n Returns `NotSubscription` error if query or mutation is passed\n","sig":null,"attributes":[{"value":"/ Initialize new `Executor` and start resolving subscription into stream","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":94046,"byte_end":94120,"line_start":1017,"line_end":1017,"column_start":1,"column_end":75}},{"value":"/ asynchronously.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":94121,"byte_end":94140,"line_start":1018,"line_end":1018,"column_start":1,"column_end":20}},{"value":"/ Returns `NotSubscription` error if query or mutation is passed","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":94141,"byte_end":94207,"line_start":1019,"line_end":1019,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97476,"byte_end":97479,"line_start":1133,"line_end":1133,"column_start":12,"column_end":15},"name":"new","qualname":"<Registry>::new","value":"pub fn new(FnvHashMap<Name, MetaType>) -> Registry","parent":null,"children":[],"decl_id":null,"docs":" Construct a new registry\n","sig":null,"attributes":[{"value":"/ Construct a new registry","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97436,"byte_end":97464,"line_start":1132,"line_end":1132,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97772,"byte_end":97780,"line_start":1141,"line_end":1141,"column_start":12,"column_end":20},"name":"get_type","qualname":"<Registry>::get_type","value":"pub fn get_type<T: ?Sized>(&mut Self, &T::TypeInfo) -> Type where\nT: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Get the `Type` instance for a given GraphQL type","sig":null,"attributes":[{"value":"/ Get the `Type` instance for a given GraphQL type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97581,"byte_end":97633,"line_start":1137,"line_end":1137,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97638,"byte_end":97641,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ If the registry hasn't seen a type with this name before, it will","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97646,"byte_end":97715,"line_start":1139,"line_end":1139,"column_start":5,"column_end":74}},{"value":"/ construct its metadata and store it.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97720,"byte_end":97760,"line_start":1140,"line_end":1140,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":98500,"byte_end":98505,"line_start":1162,"line_end":1162,"column_start":12,"column_end":17},"name":"field","qualname":"<Registry>::field","value":"pub fn field<T: ?Sized>(&mut Self, &str, &T::TypeInfo) -> Field where\nT: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a field with the provided name\n","sig":null,"attributes":[{"value":"/ Create a field with the provided name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":98447,"byte_end":98488,"line_start":1161,"line_end":1161,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":98909,"byte_end":98922,"line_start":1176,"line_end":1176,"column_start":12,"column_end":25},"name":"field_convert","qualname":"<Registry>::field_convert","value":"pub fn field_convert<'a, T: IntoResolvable, I,\n                     C>(&mut Self, &str, &I::TypeInfo) -> Field where\nI: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99418,"byte_end":99421,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"arg","qualname":"<Registry>::arg","value":"pub fn arg<T: ?Sized>(&mut Self, &str, &T::TypeInfo) -> Argument where\nT: GraphQLType<S> + FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an argument with the provided name\n","sig":null,"attributes":[{"value":"/ Create an argument with the provided name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99361,"byte_end":99406,"line_start":1193,"line_end":1193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99786,"byte_end":99802,"line_start":1205,"line_end":1205,"column_start":12,"column_end":28},"name":"arg_with_default","qualname":"<Registry>::arg_with_default","value":"pub fn arg_with_default<T: ?Sized>(&mut Self, &str, &T, &T::TypeInfo)\n-> Argument where T: GraphQLType<S> + ToInputValue<S> + FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an argument with a default value","sig":null,"attributes":[{"value":"/ Create an argument with a default value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99624,"byte_end":99667,"line_start":1201,"line_end":1201,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99672,"byte_end":99675,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ When called with type `T`, the actual argument will be given the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99680,"byte_end":99753,"line_start":1203,"line_end":1203,"column_start":5,"column_end":78}},{"value":"/ `Option<T>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":99758,"byte_end":99774,"line_start":1204,"line_end":1204,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100426,"byte_end":100443,"line_start":1226,"line_end":1226,"column_start":12,"column_end":29},"name":"build_scalar_type","qualname":"<Registry>::build_scalar_type","value":"pub fn build_scalar_type<T: ?Sized>(&mut Self, &T::TypeInfo) -> ScalarMeta\nwhere T: FromInputValue<S> + GraphQLType<S> + ParseScalarValue<S> + 'r","parent":null,"children":[],"decl_id":null,"docs":" Create a scalar meta type","sig":null,"attributes":[{"value":"/ Create a scalar meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100316,"byte_end":100345,"line_start":1223,"line_end":1223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100350,"byte_end":100353,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ This expects the type to implement `FromInputValue`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100358,"byte_end":100414,"line_start":1225,"line_end":1225,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100796,"byte_end":100811,"line_start":1235,"line_end":1235,"column_start":12,"column_end":27},"name":"build_list_type","qualname":"<Registry>::build_list_type","value":"pub fn build_list_type<T: GraphQLType<S> + ?Sized>(&mut Self, &T::TypeInfo)\n-> ListMeta","parent":null,"children":[],"decl_id":null,"docs":" Create a list meta type\n","sig":null,"attributes":[{"value":"/ Create a list meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":100757,"byte_end":100784,"line_start":1234,"line_end":1234,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101045,"byte_end":101064,"line_start":1244,"line_end":1244,"column_start":12,"column_end":31},"name":"build_nullable_type","qualname":"<Registry>::build_nullable_type","value":"pub fn build_nullable_type<T: GraphQLType<S> +\n                           ?Sized>(&mut Self, &T::TypeInfo) -> NullableMeta","parent":null,"children":[],"decl_id":null,"docs":" Create a nullable meta type\n","sig":null,"attributes":[{"value":"/ Create a nullable meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101002,"byte_end":101033,"line_start":1243,"line_end":1243,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101469,"byte_end":101486,"line_start":1256,"line_end":1256,"column_start":12,"column_end":29},"name":"build_object_type","qualname":"<Registry>::build_object_type","value":"pub fn build_object_type<T: ?Sized>(&mut Self, &T::TypeInfo, &[Field])\n-> ObjectMeta where T: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an object meta type","sig":null,"attributes":[{"value":"/ Create an object meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101263,"byte_end":101293,"line_start":1252,"line_end":1252,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101298,"byte_end":101301,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ To prevent infinite recursion by enforcing ordering, this returns a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101306,"byte_end":101377,"line_start":1254,"line_end":1254,"column_start":5,"column_end":76}},{"value":"/ function that needs to be called with the list of fields on the object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101382,"byte_end":101457,"line_start":1255,"line_end":1255,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101943,"byte_end":101958,"line_start":1272,"line_end":1272,"column_start":12,"column_end":27},"name":"build_enum_type","qualname":"<Registry>::build_enum_type","value":"pub fn build_enum_type<T: ?Sized>(&mut Self, &T::TypeInfo, &[EnumValue])\n-> EnumMeta where T: FromInputValue<S> + GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an enum meta type\n","sig":null,"attributes":[{"value":"/ Create an enum meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":101903,"byte_end":101931,"line_start":1271,"line_end":1271,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":102388,"byte_end":102408,"line_start":1287,"line_end":1287,"column_start":12,"column_end":32},"name":"build_interface_type","qualname":"<Registry>::build_interface_type","value":"pub fn build_interface_type<T: ?Sized>(&mut Self, &T::TypeInfo, &[Field])\n-> InterfaceMeta where T: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an interface meta type,\n by providing a type info object.\n","sig":null,"attributes":[{"value":"/ Create an interface meta type,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":102301,"byte_end":102335,"line_start":1285,"line_end":1285,"column_start":5,"column_end":39}},{"value":"/ by providing a type info object.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":102340,"byte_end":102376,"line_start":1286,"line_end":1286,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":102874,"byte_end":102890,"line_start":1303,"line_end":1303,"column_start":12,"column_end":28},"name":"build_union_type","qualname":"<Registry>::build_union_type","value":"pub fn build_union_type<T: ?Sized>(&mut Self, &T::TypeInfo, &[Type])\n-> UnionMeta where T: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a union meta type\n","sig":null,"attributes":[{"value":"/ Create a union meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":102834,"byte_end":102862,"line_start":1302,"line_end":1302,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":103222,"byte_end":103245,"line_start":1313,"line_end":1313,"column_start":12,"column_end":35},"name":"build_input_object_type","qualname":"<Registry>::build_input_object_type","value":"pub fn build_input_object_type<T: ?Sized>(&mut Self, &T::TypeInfo,\n                                          &[Argument]) -> InputObjectMeta\nwhere T: FromInputValue<S> + GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create an input object meta type\n","sig":null,"attributes":[{"value":"/ Create an input object meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":103174,"byte_end":103210,"line_start":1312,"line_end":1312,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1158},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161198,"byte_end":161201,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"All","qualname":"::introspection::IntrospectionFormat::All","value":"IntrospectionFormat::All","parent":{"krate":0,"index":1157},"children":[],"decl_id":null,"docs":" The canonical GraphQL introspection query.\n","sig":null,"attributes":[{"value":"/ The canonical GraphQL introspection query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161147,"byte_end":161193,"line_start":9,"line_end":9,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161279,"byte_end":161298,"line_start":12,"line_end":12,"column_start":5,"column_end":24},"name":"WithoutDescriptions","qualname":"::introspection::IntrospectionFormat::WithoutDescriptions","value":"IntrospectionFormat::WithoutDescriptions","parent":{"krate":0,"index":1157},"children":[],"decl_id":null,"docs":" The canonical GraphQL introspection query without descriptions.\n","sig":null,"attributes":[{"value":"/ The canonical GraphQL introspection query without descriptions.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161207,"byte_end":161274,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1157},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161121,"byte_end":161140,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"IntrospectionFormat","qualname":"::introspection::IntrospectionFormat","value":"pub enum IntrospectionFormat { All, WithoutDescriptions, }","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1160}],"decl_id":null,"docs":" The desired GraphQL introspection format for the canonical query\n (<https://github.com/graphql/graphql-js/blob/8c96dc8276f2de27b8af9ffbd71a4597d483523f/src/utilities/introspectionQuery.js#L21>)\n","sig":null,"attributes":[{"value":"/ The desired GraphQL introspection format for the canonical query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":160911,"byte_end":160979,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ (<https://github.com/graphql/graphql-js/blob/8c96dc8276f2de27b8af9ffbd71a4597d483523f/src/utilities/introspectionQuery.js#L21>)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":160980,"byte_end":161111,"line_start":7,"line_end":7,"column_start":1,"column_end":132}}]},{"kind":"Mod","id":{"krate":0,"index":1164},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1374},{"krate":0,"index":1442},{"krate":0,"index":1495},{"krate":0,"index":1526},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1643}],"decl_id":null,"docs":" Query parser and language utilities\n","sig":null,"attributes":[{"value":"/ Query parser and language utilities","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161411,"byte_end":161450,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"allow(clippy :: module_inception)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/mod.rs","byte_start":161451,"byte_end":161486,"line_start":2,"line_end":2,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/document.rs","byte_start":162391,"byte_end":162412,"line_start":22,"line_end":22,"column_start":8,"column_end":29},"name":"parse_document_source","qualname":"::parser::document::parse_document_source","value":"pub fn parse_document_source<'a, 'b, S>(&'a str, &'b SchemaType)\n-> UnlocatedParseResult where S: ScalarValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6444},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178300,"byte_end":178305,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::parser::lexer::Lexer","value":"Lexer {  }","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6456},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178666,"byte_end":178672,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"String","qualname":"::parser::lexer::ScalarToken::String","value":"ScalarToken::String(&'a str)","parent":{"krate":0,"index":6454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6459},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178687,"byte_end":178692,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Float","qualname":"::parser::lexer::ScalarToken::Float","value":"ScalarToken::Float(&'a str)","parent":{"krate":0,"index":6454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6462},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178707,"byte_end":178710,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Int","qualname":"::parser::lexer::ScalarToken::Int","value":"ScalarToken::Int(&'a str)","parent":{"krate":0,"index":6454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6454},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178644,"byte_end":178655,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"name":"ScalarToken","qualname":"::parser::lexer::ScalarToken","value":"pub enum ScalarToken<'a> { String(&'a str), Float(&'a str), Int(&'a str), }","parent":null,"children":[{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6462}],"decl_id":null,"docs":" A single scalar value literal","sig":null,"attributes":[{"value":"/ A single scalar value literal","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178453,"byte_end":178486,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178487,"byte_end":178490,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This is only used for tagging how the lexer has interpreted a value literal","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178491,"byte_end":178570,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178612,"byte_end":178634,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6481},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178852,"byte_end":178856,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"Name","qualname":"::parser::lexer::Token::Name","value":"Token::Name(&'a str)","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178871,"byte_end":178877,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::parser::lexer::Token::Scalar","value":"Token::Scalar(ScalarToken)","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6487},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178900,"byte_end":178915,"line_start":37,"line_end":37,"column_start":5,"column_end":20},"name":"ExclamationMark","qualname":"::parser::lexer::Token::ExclamationMark","value":"Token::ExclamationMark","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6489},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178921,"byte_end":178927,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Dollar","qualname":"::parser::lexer::Token::Dollar","value":"Token::Dollar","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6491},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178933,"byte_end":178942,"line_start":39,"line_end":39,"column_start":5,"column_end":14},"name":"ParenOpen","qualname":"::parser::lexer::Token::ParenOpen","value":"Token::ParenOpen","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6493},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178948,"byte_end":178958,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ParenClose","qualname":"::parser::lexer::Token::ParenClose","value":"Token::ParenClose","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6495},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178964,"byte_end":178975,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"BracketOpen","qualname":"::parser::lexer::Token::BracketOpen","value":"Token::BracketOpen","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6497},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178981,"byte_end":178993,"line_start":42,"line_end":42,"column_start":5,"column_end":17},"name":"BracketClose","qualname":"::parser::lexer::Token::BracketClose","value":"Token::BracketClose","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6499},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178999,"byte_end":179008,"line_start":43,"line_end":43,"column_start":5,"column_end":14},"name":"CurlyOpen","qualname":"::parser::lexer::Token::CurlyOpen","value":"Token::CurlyOpen","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6501},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179014,"byte_end":179024,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"CurlyClose","qualname":"::parser::lexer::Token::CurlyClose","value":"Token::CurlyClose","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6503},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179030,"byte_end":179038,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"Ellipsis","qualname":"::parser::lexer::Token::Ellipsis","value":"Token::Ellipsis","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6505},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179044,"byte_end":179049,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"Colon","qualname":"::parser::lexer::Token::Colon","value":"Token::Colon","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6507},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179055,"byte_end":179061,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Equals","qualname":"::parser::lexer::Token::Equals","value":"Token::Equals","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6509},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179067,"byte_end":179069,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"At","qualname":"::parser::lexer::Token::At","value":"Token::At","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6511},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179075,"byte_end":179079,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Pipe","qualname":"::parser::lexer::Token::Pipe","value":"Token::Pipe","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6513},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179085,"byte_end":179094,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"EndOfFile","qualname":"::parser::lexer::Token::EndOfFile","value":"Token::EndOfFile","parent":{"krate":0,"index":6479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6479},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178836,"byte_end":178841,"line_start":34,"line_end":34,"column_start":10,"column_end":15},"name":"Token","qualname":"::parser::lexer::Token","value":"pub enum Token<'a> {\n    Name(&'a str),\n    Scalar(ScalarToken),\n    ExclamationMark,\n    Dollar,\n    ParenOpen,\n    ParenClose,\n    BracketOpen,\n    BracketClose,\n    CurlyOpen,\n    CurlyClose,\n    Ellipsis,\n    Colon,\n    Equals,\n    At,\n    Pipe,\n    EndOfFile,\n}","parent":null,"children":[{"krate":0,"index":6481},{"krate":0,"index":6484},{"krate":0,"index":6487},{"krate":0,"index":6489},{"krate":0,"index":6491},{"krate":0,"index":6493},{"krate":0,"index":6495},{"krate":0,"index":6497},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6503},{"krate":0,"index":6505},{"krate":0,"index":6507},{"krate":0,"index":6509},{"krate":0,"index":6511},{"krate":0,"index":6513}],"decl_id":null,"docs":" A single token in the input source\n","sig":null,"attributes":[{"value":"/ A single token in the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178724,"byte_end":178762,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":178804,"byte_end":178826,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6530},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179369,"byte_end":179385,"line_start":60,"line_end":60,"column_start":5,"column_end":21},"name":"UnknownCharacter","qualname":"::parser::lexer::LexerError::UnknownCharacter","value":"LexerError::UnknownCharacter(char)","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An unknown character was found","sig":null,"attributes":[{"value":"/ An unknown character was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179200,"byte_end":179234,"line_start":56,"line_end":56,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179239,"byte_end":179242,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Unknown characters are characters that do not occur anywhere in the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179247,"byte_end":179318,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ GraphQL language, such as `?` or `%`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179323,"byte_end":179364,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6533},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179603,"byte_end":179622,"line_start":66,"line_end":66,"column_start":5,"column_end":24},"name":"UnexpectedCharacter","qualname":"::parser::lexer::LexerError::UnexpectedCharacter","value":"LexerError::UnexpectedCharacter(char)","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An unexpected character was found","sig":null,"attributes":[{"value":"/ An unexpected character was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179398,"byte_end":179435,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179440,"byte_end":179443,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Unexpected characters are characters that _do_ exist in the GraphQL","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179448,"byte_end":179519,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ language, but is not expected at the current position in the document.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179524,"byte_end":179598,"line_start":65,"line_end":65,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6536},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179869,"byte_end":179887,"line_start":73,"line_end":73,"column_start":5,"column_end":23},"name":"UnterminatedString","qualname":"::parser::lexer::LexerError::UnterminatedString","value":"LexerError::UnterminatedString","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An unterminated string literal was found","sig":null,"attributes":[{"value":"/ An unterminated string literal was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179635,"byte_end":179679,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179684,"byte_end":179687,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Apart from forgetting the ending `\"`, terminating a string within a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179692,"byte_end":179763,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ Unicode escape sequence or having a line break in the string also","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179768,"byte_end":179837,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ causes this error.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179842,"byte_end":179864,"line_start":72,"line_end":72,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6538},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180086,"byte_end":180110,"line_start":79,"line_end":79,"column_start":5,"column_end":29},"name":"UnknownCharacterInString","qualname":"::parser::lexer::LexerError::UnknownCharacterInString","value":"LexerError::UnknownCharacterInString(char)","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An unknown character in a string literal was found","sig":null,"attributes":[{"value":"/ An unknown character in a string literal was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179894,"byte_end":179948,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179953,"byte_end":179956,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This occurs when an invalid source character is found in a string","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179961,"byte_end":180030,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ literal, such as ASCII control characters.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180035,"byte_end":180081,"line_start":78,"line_end":78,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6541},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180310,"byte_end":180331,"line_start":85,"line_end":85,"column_start":5,"column_end":26},"name":"UnknownEscapeSequence","qualname":"::parser::lexer::LexerError::UnknownEscapeSequence","value":"LexerError::UnknownEscapeSequence(String)","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An unknown escape sequence in a string literal was found","sig":null,"attributes":[{"value":"/ An unknown escape sequence in a string literal was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180123,"byte_end":180183,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180188,"byte_end":180191,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Only a limited set of escape sequences are supported, this is emitted","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180196,"byte_end":180269,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ when e.g. `\"\\l\"` is parsed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180274,"byte_end":180305,"line_start":84,"line_end":84,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6544},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180554,"byte_end":180573,"line_start":91,"line_end":91,"column_start":5,"column_end":24},"name":"UnexpectedEndOfFile","qualname":"::parser::lexer::LexerError::UnexpectedEndOfFile","value":"LexerError::UnexpectedEndOfFile","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" The input source was unexpectedly terminated","sig":null,"attributes":[{"value":"/ The input source was unexpectedly terminated","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180346,"byte_end":180394,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180399,"byte_end":180402,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Emitted when the current token requires a succeeding character, but","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180407,"byte_end":180478,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ the source has reached EOF. Emitted when scanning e.g. `\"1.\"`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180483,"byte_end":180549,"line_start":90,"line_end":90,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6546},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180624,"byte_end":180637,"line_start":94,"line_end":94,"column_start":5,"column_end":18},"name":"InvalidNumber","qualname":"::parser::lexer::LexerError::InvalidNumber","value":"LexerError::InvalidNumber","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":" An invalid number literal was found\n","sig":null,"attributes":[{"value":"/ An invalid number literal was found","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180580,"byte_end":180619,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6529},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179183,"byte_end":179193,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"name":"LexerError","qualname":"::parser::lexer::LexerError","value":"pub enum LexerError {\n    UnknownCharacter(char),\n    UnexpectedCharacter(char),\n    UnterminatedString,\n    UnknownCharacterInString(char),\n    UnknownEscapeSequence(String),\n    UnexpectedEndOfFile,\n    InvalidNumber,\n}","parent":null,"children":[{"krate":0,"index":6530},{"krate":0,"index":6533},{"krate":0,"index":6536},{"krate":0,"index":6538},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6546}],"decl_id":null,"docs":" Error when tokenizing the input source\n","sig":null,"attributes":[{"value":"/ Error when tokenizing the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":179099,"byte_end":179141,"line_start":53,"line_end":53,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180772,"byte_end":180775,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&'a str) -> Lexer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6559},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196394,"byte_end":196409,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::parser::parser::ParseError::UnexpectedToken","value":"ParseError::UnexpectedToken(Token)","parent":{"krate":0,"index":6557},"children":[],"decl_id":null,"docs":" An unexpected token occurred in the source\n","sig":null,"attributes":[{"value":"/ An unexpected token occurred in the source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196343,"byte_end":196389,"line_start":8,"line_end":8,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6562},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196467,"byte_end":196486,"line_start":12,"line_end":12,"column_start":5,"column_end":24},"name":"UnexpectedEndOfFile","qualname":"::parser::parser::ParseError::UnexpectedEndOfFile","value":"ParseError::UnexpectedEndOfFile","parent":{"krate":0,"index":6557},"children":[],"decl_id":null,"docs":" The input source abruptly ended\n","sig":null,"attributes":[{"value":"/ The input source abruptly ended","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196427,"byte_end":196462,"line_start":11,"line_end":11,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6564},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196539,"byte_end":196549,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"LexerError","qualname":"::parser::parser::ParseError::LexerError","value":"ParseError::LexerError(LexerError)","parent":{"krate":0,"index":6557},"children":[],"decl_id":null,"docs":" An error during tokenization occurred\n","sig":null,"attributes":[{"value":"/ An error during tokenization occurred","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196493,"byte_end":196534,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6567},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196627,"byte_end":196646,"line_start":18,"line_end":18,"column_start":5,"column_end":24},"name":"ExpectedScalarError","qualname":"::parser::parser::ParseError::ExpectedScalarError","value":"ParseError::ExpectedScalarError(&'static str)","parent":{"krate":0,"index":6557},"children":[],"decl_id":null,"docs":" A scalar of unexpected type occurred in the source\n","sig":null,"attributes":[{"value":"/ A scalar of unexpected type occurred in the source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196568,"byte_end":196622,"line_start":17,"line_end":17,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":6557},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196322,"byte_end":196332,"line_start":7,"line_end":7,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parser::parser::ParseError","value":"pub enum ParseError<'a> {\n    UnexpectedToken(Token),\n    UnexpectedEndOfFile,\n    LexerError(LexerError),\n    ExpectedScalarError(&'static str),\n}","parent":null,"children":[{"krate":0,"index":6559},{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":6567}],"decl_id":null,"docs":" Error while parsing a GraphQL query\n","sig":null,"attributes":[{"value":"/ Error while parsing a GraphQL query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196245,"byte_end":196284,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":1463},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196689,"byte_end":196700,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parser::parser::ParseResult","value":"Result<Spanning<T>, Spanning<ParseError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196782,"byte_end":196802,"line_start":25,"line_end":25,"column_start":10,"column_end":30},"name":"UnlocatedParseResult","qualname":"::parser::parser::UnlocatedParseResult","value":"Result<T, Spanning<ParseError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1469},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":196874,"byte_end":196891,"line_start":28,"line_end":28,"column_start":10,"column_end":27},"name":"OptionParseResult","qualname":"::parser::parser::OptionParseResult","value":"Result<Option<Spanning<T>>, Spanning<ParseError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6579},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197000,"byte_end":197006,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":6581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197106,"byte_end":197109,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new(&mut Lexer) -> Result<Parser, Spanning<LexerError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197442,"byte_end":197446,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser>::peek","value":"pub fn peek(&Self) -> &Spanning<Token>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197541,"byte_end":197551,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"next_token","qualname":"<Parser>::next_token","value":"pub fn next_token(&mut Self) -> ParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197904,"byte_end":197910,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"expect","qualname":"<Parser>::expect","value":"pub fn expect(&mut Self, &Token) -> ParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":198178,"byte_end":198182,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"skip","qualname":"<Parser>::skip","value":"pub fn skip(&mut Self, &Token)\n-> Result<Option<Spanning<Token>>, Spanning<ParseError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":198666,"byte_end":198680,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"delimited_list","qualname":"<Parser>::delimited_list","value":"pub fn delimited_list<T, F>(&mut Self, &Token, F, &Token) -> ParseResult where\nT: fmt::Debug, F: Fn(&mut Parser) -> ParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":199312,"byte_end":199335,"line_start":121,"line_end":121,"column_start":12,"column_end":35},"name":"delimited_nonempty_list","qualname":"<Parser>::delimited_nonempty_list","value":"pub fn delimited_nonempty_list<T, F>(&mut Self, &Token, F, &Token)\n-> ParseResult where T: fmt::Debug, F: Fn(&mut Parser) -> ParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":199967,"byte_end":200000,"line_start":146,"line_end":146,"column_start":12,"column_end":45},"name":"unlocated_delimited_nonempty_list","qualname":"<Parser>::unlocated_delimited_nonempty_list","value":"pub fn unlocated_delimited_nonempty_list<T, F>(&mut Self, &Token, F, &Token)\n-> ParseResult where T: fmt::Debug, F: Fn(&mut Parser) -> UnlocatedParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":200631,"byte_end":200642,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"expect_name","qualname":"<Parser>::expect_name","value":"pub fn expect_name(&mut Self) -> ParseResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6585},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202053,"byte_end":202067,"line_start":5,"line_end":5,"column_start":12,"column_end":26},"name":"SourcePosition","qualname":"::parser::utils::SourcePosition","value":"SourcePosition {  }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6588}],"decl_id":null,"docs":" A reference to a line and column in an input source file\n","sig":null,"attributes":[{"value":"/ A reference to a line and column in an input source file","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":201913,"byte_end":201973,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6608},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202438,"byte_end":202446,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Spanning","qualname":"::parser::utils::Spanning","value":"Spanning { item, start, end }","parent":null,"children":[{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612}],"decl_id":null,"docs":" Data structure used to wrap items with start and end markers in the input source","sig":null,"attributes":[{"value":"/ Data structure used to wrap items with start and end markers in the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202124,"byte_end":202208,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202209,"byte_end":202212,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A \"span\" is a range of characters in the input source, starting at the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202213,"byte_end":202287,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ character pointed by the `start` field and ending just before the `end`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202288,"byte_end":202363,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ marker.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202364,"byte_end":202375,"line_start":15,"line_end":15,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":6610},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202485,"byte_end":202489,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"item","qualname":"::parser::utils::Spanning::item","value":"T","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" The wrapped item\n","sig":null,"attributes":[{"value":"/ The wrapped item","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202456,"byte_end":202476,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6611},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202538,"byte_end":202543,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"start","qualname":"::parser::utils::Spanning::start","value":"parser::utils::SourcePosition","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Start position of the item\n","sig":null,"attributes":[{"value":"/ Start position of the item","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202499,"byte_end":202529,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6612},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202686,"byte_end":202689,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"end","qualname":"::parser::utils::Spanning::end","value":"parser::utils::SourcePosition","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" End position of the item","sig":null,"attributes":[{"value":"/ End position of the item","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202566,"byte_end":202594,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202599,"byte_end":202602,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This points to the first source position _after_ the wrapped item.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202607,"byte_end":202677,"line_start":26,"line_end":26,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202762,"byte_end":202772,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"zero_width","qualname":"<Spanning<T>>::zero_width","value":"pub fn zero_width(&SourcePosition, T) -> Spanning<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202953,"byte_end":202965,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"single_width","qualname":"<Spanning<T>>::single_width","value":"pub fn single_width(&SourcePosition, T) -> Spanning<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":203196,"byte_end":203205,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"start_end","qualname":"<Spanning<T>>::start_end","value":"pub fn start_end(&SourcePosition, &SourcePosition, T) -> Spanning<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":203412,"byte_end":203420,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"spanning","qualname":"<Spanning<T>>::spanning","value":"pub fn spanning(Vec<Spanning<T>>) -> Option<Spanning<Vec<Spanning<T>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":203773,"byte_end":203782,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"unlocated","qualname":"<Spanning<T>>::unlocated","value":"pub fn unlocated(T) -> Spanning<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204018,"byte_end":204021,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"map","qualname":"<Spanning<T>>::map","value":"pub fn map<O: fmt::Debug, F: Fn(T) -> O>(Self, F) -> Spanning<O>","parent":null,"children":[],"decl_id":null,"docs":" Modify the contents of the spanned item\n","sig":null,"attributes":[{"value":"/ Modify the contents of the spanned item","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":203963,"byte_end":204006,"line_start":83,"line_end":83,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204501,"byte_end":204504,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<SourcePosition>::new","value":"pub fn new(usize, usize, usize) -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204684,"byte_end":204694,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"new_origin","qualname":"<SourcePosition>::new_origin","value":"pub fn new_origin() -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204852,"byte_end":204863,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"advance_col","qualname":"<SourcePosition>::advance_col","value":"pub fn advance_col(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204962,"byte_end":204974,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"advance_line","qualname":"<SourcePosition>::advance_line","value":"pub fn advance_line(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205293,"byte_end":205298,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"index","qualname":"<SourcePosition>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The index of the character in the input source","sig":null,"attributes":[{"value":"/ The index of the character in the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205070,"byte_end":205120,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205125,"byte_end":205128,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Zero-based index. Take a substring of the original source starting at","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205133,"byte_end":205206,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ this index to access the item pointed to by this `SourcePosition`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205211,"byte_end":205281,"line_start":134,"line_end":134,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205471,"byte_end":205475,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"line","qualname":"<SourcePosition>::line","value":"pub fn line(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The line of the character in the input source","sig":null,"attributes":[{"value":"/ The line of the character in the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205347,"byte_end":205396,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205401,"byte_end":205404,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Zero-based index: the first line is line zero.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205409,"byte_end":205459,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205653,"byte_end":205659,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"column","qualname":"<SourcePosition>::column","value":"pub fn column(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The column of the character in the input source","sig":null,"attributes":[{"value":"/ The column of the character in the input source","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205523,"byte_end":205574,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205579,"byte_end":205582,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Zero-based index: the first column is column zero.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205587,"byte_end":205641,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1647},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"meta","qualname":"::schema::meta","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":6636},{"krate":0,"index":6642},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6648},{"krate":0,"index":6651},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":6653},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":6662},{"krate":0,"index":6665},{"krate":0,"index":6672},{"krate":0,"index":1705},{"krate":0,"index":6676},{"krate":0,"index":6682},{"krate":0,"index":6686},{"krate":0,"index":6691},{"krate":0,"index":1713},{"krate":0,"index":6694},{"krate":0,"index":6697},{"krate":0,"index":6700},{"krate":0,"index":6730},{"krate":0,"index":6734},{"krate":0,"index":6742},{"krate":0,"index":6746},{"krate":0,"index":1721},{"krate":0,"index":6750},{"krate":0,"index":6757},{"krate":0,"index":6761},{"krate":0,"index":1725},{"krate":0,"index":6765},{"krate":0,"index":6769},{"krate":0,"index":6771},{"krate":0,"index":1729},{"krate":0,"index":1753},{"krate":0,"index":1760},{"krate":0,"index":1765},{"krate":0,"index":1770},{"krate":0,"index":1778},{"krate":0,"index":1785},{"krate":0,"index":1791},{"krate":0,"index":1798},{"krate":0,"index":1805},{"krate":0,"index":1811},{"krate":0,"index":1817},{"krate":0,"index":1821},{"krate":0,"index":1825},{"krate":0,"index":1829},{"krate":0,"index":1833}],"decl_id":null,"docs":" Types used to describe a `GraphQL` schema\n","sig":null,"attributes":[{"value":"/ Types used to describe a `GraphQL` schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":212808,"byte_end":212853,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6637},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213298,"byte_end":213305,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Current","qualname":"::schema::meta::DeprecationStatus::Current","value":"DeprecationStatus::Current","parent":{"krate":0,"index":6636},"children":[],"decl_id":null,"docs":" The field/variant is not deprecated.\n","sig":null,"attributes":[{"value":"/ The field/variant is not deprecated.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213253,"byte_end":213293,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6639},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213376,"byte_end":213386,"line_start":22,"line_end":22,"column_start":5,"column_end":15},"name":"Deprecated","qualname":"::schema::meta::DeprecationStatus::Deprecated","value":"DeprecationStatus::Deprecated(Option<String>)","parent":{"krate":0,"index":6636},"children":[],"decl_id":null,"docs":" The field/variant is deprecated, with an optional reason\n","sig":null,"attributes":[{"value":"/ The field/variant is deprecated, with an optional reason","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213311,"byte_end":213371,"line_start":21,"line_end":21,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":6636},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213229,"byte_end":213246,"line_start":18,"line_end":18,"column_start":10,"column_end":27},"name":"DeprecationStatus","qualname":"::schema::meta::DeprecationStatus","value":"pub enum DeprecationStatus { Current, Deprecated(Option<String>), }","parent":null,"children":[{"krate":0,"index":6637},{"krate":0,"index":6639}],"decl_id":null,"docs":" Whether an item is deprecated, with context.\n","sig":null,"attributes":[{"value":"/ Whether an item is deprecated, with context.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213130,"byte_end":213178,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213512,"byte_end":213525,"line_start":27,"line_end":27,"column_start":12,"column_end":25},"name":"is_deprecated","qualname":"<DeprecationStatus>::is_deprecated","value":"pub fn is_deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If this deprecation status indicates the item is deprecated.\n","sig":null,"attributes":[{"value":"/ If this deprecation status indicates the item is deprecated.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213436,"byte_end":213500,"line_start":26,"line_end":26,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213765,"byte_end":213771,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"reason","qualname":"<DeprecationStatus>::reason","value":"pub fn reason(&Self) -> Option<&String>","parent":null,"children":[],"decl_id":null,"docs":" An optional reason for the deprecation, or none if `Current`.\n","sig":null,"attributes":[{"value":"/ An optional reason for the deprecation, or none if `Current`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213688,"byte_end":213753,"line_start":34,"line_end":34,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213998,"byte_end":214008,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"ScalarMeta","qualname":"::schema::meta::ScalarMeta","value":"ScalarMeta { name, description }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1703}],"decl_id":null,"docs":" Scalar type metadata\n","sig":null,"attributes":[{"value":"/ Scalar type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213962,"byte_end":213986,"line_start":43,"line_end":43,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1699},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214045,"byte_end":214049,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::ScalarMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1700},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214092,"byte_end":214103,"line_start":48,"line_end":48,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::ScalarMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6653},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214326,"byte_end":214334,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"ListMeta","qualname":"::schema::meta::ListMeta","value":"ListMeta { of_type }","parent":null,"children":[{"krate":0,"index":6655}],"decl_id":null,"docs":" List type metadata\n","sig":null,"attributes":[{"value":"/ List type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214275,"byte_end":214297,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6655},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214368,"byte_end":214375,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"of_type","qualname":"::schema::meta::ListMeta::of_type","value":"ast::Type<'a>","parent":{"krate":0,"index":6653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214445,"byte_end":214457,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"NullableMeta","qualname":"::schema::meta::NullableMeta","value":"NullableMeta { of_type }","parent":null,"children":[{"krate":0,"index":6661}],"decl_id":null,"docs":" Nullable type metadata\n","sig":null,"attributes":[{"value":"/ Nullable type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214390,"byte_end":214416,"line_start":60,"line_end":60,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":6661},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214491,"byte_end":214498,"line_start":64,"line_end":64,"column_start":9,"column_end":16},"name":"of_type","qualname":"::schema::meta::NullableMeta::of_type","value":"ast::Type<'a>","parent":{"krate":0,"index":6659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6665},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214566,"byte_end":214576,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"ObjectMeta","qualname":"::schema::meta::ObjectMeta","value":"ObjectMeta { name, description, fields, interface_names }","parent":null,"children":[{"krate":0,"index":6668},{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6671}],"decl_id":null,"docs":" Object type metadata\n","sig":null,"attributes":[{"value":"/ Object type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214513,"byte_end":214537,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6668},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214613,"byte_end":214617,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::ObjectMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6669},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214660,"byte_end":214671,"line_start":73,"line_end":73,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::ObjectMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6670},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214716,"byte_end":214722,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"fields","qualname":"::schema::meta::ObjectMeta::fields","value":"std::vec::Vec<schema::meta::Field<'a, S>>","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6671},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214770,"byte_end":214785,"line_start":77,"line_end":77,"column_start":9,"column_end":24},"name":"interface_names","qualname":"::schema::meta::ObjectMeta::interface_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1705},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214837,"byte_end":214845,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"EnumMeta","qualname":"::schema::meta::EnumMeta","value":"EnumMeta { name, description, values }","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711}],"decl_id":null,"docs":" Enum type metadata\n","sig":null,"attributes":[{"value":"/ Enum type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214803,"byte_end":214825,"line_start":80,"line_end":80,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1708},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214882,"byte_end":214886,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::EnumMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1709},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214929,"byte_end":214940,"line_start":85,"line_end":85,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::EnumMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1710},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":214985,"byte_end":214991,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"name":"values","qualname":"::schema::meta::EnumMeta::values","value":"std::vec::Vec<schema::meta::EnumValue>","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215136,"byte_end":215149,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"InterfaceMeta","qualname":"::schema::meta::InterfaceMeta","value":"InterfaceMeta { name, description, fields }","parent":null,"children":[{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681}],"decl_id":null,"docs":" Interface type metadata\n","sig":null,"attributes":[{"value":"/ Interface type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215080,"byte_end":215107,"line_start":91,"line_end":91,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6679},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215186,"byte_end":215190,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::InterfaceMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":6676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6680},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215233,"byte_end":215244,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::InterfaceMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6681},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215289,"byte_end":215295,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"fields","qualname":"::schema::meta::InterfaceMeta::fields","value":"std::vec::Vec<schema::meta::Field<'a, S>>","parent":{"krate":0,"index":6676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215371,"byte_end":215380,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"UnionMeta","qualname":"::schema::meta::UnionMeta","value":"UnionMeta { name, description, of_type_names }","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690}],"decl_id":null,"docs":" Union type metadata\n","sig":null,"attributes":[{"value":"/ Union type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215319,"byte_end":215342,"line_start":102,"line_end":102,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":6688},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215414,"byte_end":215418,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::UnionMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6689},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215461,"byte_end":215472,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::UnionMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6690},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215517,"byte_end":215530,"line_start":110,"line_end":110,"column_start":9,"column_end":22},"name":"of_type_names","qualname":"::schema::meta::UnionMeta::of_type_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215585,"byte_end":215600,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"InputObjectMeta","qualname":"::schema::meta::InputObjectMeta","value":"InputObjectMeta { name, description, input_fields }","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719}],"decl_id":null,"docs":" Input object metadata\n","sig":null,"attributes":[{"value":"/ Input object metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215548,"byte_end":215573,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1716},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215637,"byte_end":215641,"line_start":116,"line_end":116,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::InputObjectMeta::name","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":1713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1717},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215684,"byte_end":215695,"line_start":118,"line_end":118,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::InputObjectMeta::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1718},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215740,"byte_end":215752,"line_start":120,"line_end":120,"column_start":9,"column_end":21},"name":"input_fields","qualname":"::schema::meta::InputObjectMeta::input_fields","value":"std::vec::Vec<schema::meta::Argument<'a, S>>","parent":{"krate":0,"index":1713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6694},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216077,"byte_end":216092,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"PlaceholderMeta","qualname":"::schema::meta::PlaceholderMeta","value":"PlaceholderMeta { of_type }","parent":null,"children":[{"krate":0,"index":6696}],"decl_id":null,"docs":" A placeholder for not-yet-registered types","sig":null,"attributes":[{"value":"/ A placeholder for not-yet-registered types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215847,"byte_end":215893,"line_start":124,"line_end":124,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215894,"byte_end":215897,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ After a type's `meta` method has been called but before it has returned, a placeholder type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215898,"byte_end":215993,"line_start":126,"line_end":126,"column_start":1,"column_end":96}},{"value":"/ is inserted into a registry to indicate existence.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":215994,"byte_end":216048,"line_start":127,"line_end":127,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6696},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216126,"byte_end":216133,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"name":"of_type","qualname":"::schema::meta::PlaceholderMeta::of_type","value":"ast::Type<'a>","parent":{"krate":0,"index":6694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6703},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216262,"byte_end":216268,"line_start":138,"line_end":138,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::schema::meta::MetaType::Scalar","value":"MetaType::Scalar(ScalarMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6706},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216312,"byte_end":216316,"line_start":140,"line_end":140,"column_start":5,"column_end":9},"name":"List","qualname":"::schema::meta::MetaType::List","value":"MetaType::List(ListMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6709},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216355,"byte_end":216363,"line_start":142,"line_end":142,"column_start":5,"column_end":13},"name":"Nullable","qualname":"::schema::meta::MetaType::Nullable","value":"MetaType::Nullable(NullableMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6712},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216406,"byte_end":216412,"line_start":144,"line_end":144,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::meta::MetaType::Object","value":"MetaType::Object(ObjectMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6715},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216456,"byte_end":216460,"line_start":146,"line_end":146,"column_start":5,"column_end":9},"name":"Enum","qualname":"::schema::meta::MetaType::Enum","value":"MetaType::Enum(EnumMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6718},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216502,"byte_end":216511,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"Interface","qualname":"::schema::meta::MetaType::Interface","value":"MetaType::Interface(InterfaceMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6721},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216558,"byte_end":216563,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"Union","qualname":"::schema::meta::MetaType::Union","value":"MetaType::Union(UnionMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6724},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216603,"byte_end":216614,"line_start":152,"line_end":152,"column_start":5,"column_end":16},"name":"InputObject","qualname":"::schema::meta::MetaType::InputObject","value":"MetaType::InputObject(InputObjectMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6727},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216663,"byte_end":216674,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"Placeholder","qualname":"::schema::meta::MetaType::Placeholder","value":"MetaType::Placeholder(PlaceholderMeta)","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6700},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216200,"byte_end":216208,"line_start":136,"line_end":136,"column_start":10,"column_end":18},"name":"MetaType","qualname":"::schema::meta::MetaType","value":"pub enum MetaType<'a, S = DefaultScalarValue> {\n    Scalar(ScalarMeta),\n    List(ListMeta),\n    Nullable(NullableMeta),\n    Object(ObjectMeta),\n    Enum(EnumMeta),\n    Interface(InterfaceMeta),\n    Union(UnionMeta),\n    InputObject(InputObjectMeta),\n    Placeholder(PlaceholderMeta),\n}","parent":null,"children":[{"krate":0,"index":6703},{"krate":0,"index":6706},{"krate":0,"index":6709},{"krate":0,"index":6712},{"krate":0,"index":6715},{"krate":0,"index":6718},{"krate":0,"index":6721},{"krate":0,"index":6724},{"krate":0,"index":6727}],"decl_id":null,"docs":" Generic type metadata\n","sig":null,"attributes":[{"value":"/ Generic type metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216148,"byte_end":216173,"line_start":134,"line_end":134,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6734},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216760,"byte_end":216765,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"Field","qualname":"::schema::meta::Field","value":"Field { name, description, arguments, field_type, deprecation_status }","parent":null,"children":[{"krate":0,"index":6737},{"krate":0,"index":6738},{"krate":0,"index":6739},{"krate":0,"index":6740},{"krate":0,"index":6741}],"decl_id":null,"docs":" Metadata for a field\n","sig":null,"attributes":[{"value":"/ Metadata for a field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216700,"byte_end":216724,"line_start":157,"line_end":157,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6737},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216802,"byte_end":216806,"line_start":161,"line_end":161,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::Field::name","value":"smartstring::SmartString<smartstring::LazyCompact>","parent":{"krate":0,"index":6734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6738},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216863,"byte_end":216874,"line_start":163,"line_end":163,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::Field::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6739},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216919,"byte_end":216928,"line_start":165,"line_end":165,"column_start":9,"column_end":18},"name":"arguments","qualname":"::schema::meta::Field::arguments","value":"std::option::Option<std::vec::Vec<schema::meta::Argument<'a, S>>>","parent":{"krate":0,"index":6734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6740},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":216987,"byte_end":216997,"line_start":167,"line_end":167,"column_start":9,"column_end":19},"name":"field_type","qualname":"::schema::meta::Field::field_type","value":"ast::Type<'a>","parent":{"krate":0,"index":6734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6741},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217036,"byte_end":217054,"line_start":169,"line_end":169,"column_start":9,"column_end":27},"name":"deprecation_status","qualname":"::schema::meta::Field::deprecation_status","value":"schema::meta::DeprecationStatus","parent":{"krate":0,"index":6734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217173,"byte_end":217183,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Field>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type is built-in to GraphQL.\n","sig":null,"attributes":[{"value":"/ Returns true if the type is built-in to GraphQL.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217109,"byte_end":217161,"line_start":173,"line_end":173,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6750},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217387,"byte_end":217395,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"Argument","qualname":"::schema::meta::Argument","value":"Argument { name, description, arg_type, default_value }","parent":null,"children":[{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756}],"decl_id":null,"docs":" Metadata for an argument to a field\n","sig":null,"attributes":[{"value":"/ Metadata for an argument to a field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217312,"byte_end":217351,"line_start":180,"line_end":180,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6753},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217432,"byte_end":217436,"line_start":184,"line_end":184,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::Argument::name","value":"std::string::String","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6754},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217473,"byte_end":217484,"line_start":186,"line_end":186,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::Argument::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6755},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217529,"byte_end":217537,"line_start":188,"line_end":188,"column_start":9,"column_end":17},"name":"arg_type","qualname":"::schema::meta::Argument::arg_type","value":"ast::Type<'a>","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6756},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217576,"byte_end":217589,"line_start":190,"line_end":190,"column_start":9,"column_end":22},"name":"default_value","qualname":"::schema::meta::Argument::default_value","value":"std::option::Option<ast::InputValue<S>>","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217715,"byte_end":217725,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Argument>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type is built-in to GraphQL.\n","sig":null,"attributes":[{"value":"/ Returns true if the type is built-in to GraphQL.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217651,"byte_end":217703,"line_start":194,"line_end":194,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6765},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217932,"byte_end":217941,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"EnumValue","qualname":"::schema::meta::EnumValue","value":"EnumValue { name, description, deprecation_status }","parent":null,"children":[{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6768}],"decl_id":null,"docs":" Metadata for a single value in an enum\n","sig":null,"attributes":[{"value":"/ Metadata for a single value in an enum","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217854,"byte_end":217896,"line_start":201,"line_end":201,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6766},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218071,"byte_end":218075,"line_start":207,"line_end":207,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::meta::EnumValue::name","value":"std::string::String","parent":{"krate":0,"index":6765},"children":[],"decl_id":null,"docs":" The name of the enum value","sig":null,"attributes":[{"value":"/ The name of the enum value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217948,"byte_end":217978,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217983,"byte_end":217986,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This is the string literal representation of the enum in responses.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217991,"byte_end":218062,"line_start":206,"line_end":206,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":6767},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218266,"byte_end":218277,"line_start":212,"line_end":212,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::meta::EnumValue::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6765},"children":[],"decl_id":null,"docs":" The optional description of the enum value.","sig":null,"attributes":[{"value":"/ The optional description of the enum value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218089,"byte_end":218136,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218141,"byte_end":218144,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note: this is not the description of the enum itself; it's the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218149,"byte_end":218215,"line_start":210,"line_end":210,"column_start":5,"column_end":71}},{"value":"/ description of this enum _value_.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218220,"byte_end":218257,"line_start":211,"line_end":211,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6768},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218376,"byte_end":218394,"line_start":214,"line_end":214,"column_start":9,"column_end":27},"name":"deprecation_status","qualname":"::schema::meta::EnumValue::deprecation_status","value":"schema::meta::DeprecationStatus","parent":{"krate":0,"index":6765},"children":[],"decl_id":null,"docs":" Whether the field is deprecated or not, with an optional reason.\n","sig":null,"attributes":[{"value":"/ Whether the field is deprecated or not, with an optional reason.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218299,"byte_end":218367,"line_start":213,"line_end":213,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218587,"byte_end":218591,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"name","qualname":"<MetaType>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Access the name of the type, if applicable","sig":null,"attributes":[{"value":"/ Access the name of the type, if applicable","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218452,"byte_end":218498,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218503,"byte_end":218506,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Lists, non-null wrappers, and placeholders don't have names.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218511,"byte_end":218575,"line_start":220,"line_end":220,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219208,"byte_end":219219,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"description","qualname":"<MetaType>::description","value":"pub fn description(&Self) -> Option<&String>","parent":null,"children":[],"decl_id":null,"docs":" Access the description of the type, if applicable","sig":null,"attributes":[{"value":"/ Access the description of the type, if applicable","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219066,"byte_end":219119,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219124,"byte_end":219127,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Lists, nullable wrappers, and placeholders don't have names.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219132,"byte_end":219196,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":220067,"byte_end":220076,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"type_kind","qualname":"<MetaType>::type_kind","value":"pub fn type_kind(&Self) -> TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Construct a `TypeKind` for a given type","sig":null,"attributes":[{"value":"/ Construct a `TypeKind` for a given type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219917,"byte_end":219960,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219965,"byte_end":219968,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219973,"byte_end":219985,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/ Panics if the type represents a placeholder or nullable type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":219990,"byte_end":220055,"line_start":263,"line_end":263,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":220871,"byte_end":220884,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"field_by_name","qualname":"<MetaType>::field_by_name","value":"pub fn field_by_name(&Self, &str) -> Option<&Field<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Access a field's meta data given its name","sig":null,"attributes":[{"value":"/ Access a field's meta data given its name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":220706,"byte_end":220751,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":220756,"byte_end":220759,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Only objects and interfaces have fields. This method always returns `None` for other types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":220764,"byte_end":220859,"line_start":280,"line_end":280,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221364,"byte_end":221383,"line_start":294,"line_end":294,"column_start":12,"column_end":31},"name":"input_field_by_name","qualname":"<MetaType>::input_field_by_name","value":"pub fn input_field_by_name(&Self, &str) -> Option<&Argument<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Access an input field's meta data given its name","sig":null,"attributes":[{"value":"/ Access an input field's meta data given its name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221195,"byte_end":221247,"line_start":291,"line_end":291,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221252,"byte_end":221255,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Only input objects have input fields. This method always returns `None` for other types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221260,"byte_end":221352,"line_start":293,"line_end":293,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221721,"byte_end":221728,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"as_type","qualname":"<MetaType>::as_type","value":"pub fn as_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Type` literal instance based on the metadata\n","sig":null,"attributes":[{"value":"/ Construct a `Type` literal instance based on the metadata","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":221648,"byte_end":221709,"line_start":303,"line_end":303,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223043,"byte_end":223063,"line_start":332,"line_end":332,"column_start":12,"column_end":32},"name":"input_value_parse_fn","qualname":"<MetaType>::input_value_parse_fn","value":"pub fn input_value_parse_fn(&Self)\n-> Option<for<'b>fn(: &'b InputValue<S>) -> bool>","parent":null,"children":[],"decl_id":null,"docs":" Access the input value parse function, if applicable","sig":null,"attributes":[{"value":"/ Access the input value parse function, if applicable","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222733,"byte_end":222789,"line_start":326,"line_end":326,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222794,"byte_end":222797,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ An input value parse function is a function that takes an `InputValue` instance and returns","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222802,"byte_end":222897,"line_start":328,"line_end":328,"column_start":5,"column_end":100}},{"value":"/ `true` if it can be parsed as the provided type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222902,"byte_end":222954,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222959,"byte_end":222962,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only scalars, enums, and input objects have parse functions.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":222967,"byte_end":223031,"line_start":331,"line_end":331,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223627,"byte_end":223639,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"is_composite","qualname":"<MetaType>::is_composite","value":"pub fn is_composite(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type is a composite type","sig":null,"attributes":[{"value":"/ Returns true if the type is a composite type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223504,"byte_end":223552,"line_start":347,"line_end":347,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223557,"byte_end":223560,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Objects, interfaces, and unions are composite.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223565,"byte_end":223615,"line_start":349,"line_end":349,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223927,"byte_end":223934,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"is_leaf","qualname":"<MetaType>::is_leaf","value":"pub fn is_leaf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type can occur in leaf positions in queries","sig":null,"attributes":[{"value":"/ Returns true if the type can occur in leaf positions in queries","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223793,"byte_end":223860,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223865,"byte_end":223868,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Only enums and scalars are leaf types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":223873,"byte_end":223915,"line_start":359,"line_end":359,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224143,"byte_end":224154,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"is_abstract","qualname":"<MetaType>::is_abstract","value":"pub fn is_abstract(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type is abstract","sig":null,"attributes":[{"value":"/ Returns true if the type is abstract","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224028,"byte_end":224068,"line_start":364,"line_end":364,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224073,"byte_end":224076,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Only interfaces and unions are abstract types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224081,"byte_end":224131,"line_start":366,"line_end":366,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224424,"byte_end":224432,"line_start":374,"line_end":374,"column_start":12,"column_end":20},"name":"is_input","qualname":"<MetaType>::is_input","value":"pub fn is_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type can be used in input positions, e.g. arguments or variables","sig":null,"attributes":[{"value":"/ Returns true if the type can be used in input positions, e.g. arguments or variables","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224252,"byte_end":224340,"line_start":371,"line_end":371,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224345,"byte_end":224348,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Only scalars, enums, and input objects are input types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224353,"byte_end":224412,"line_start":373,"line_end":373,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224651,"byte_end":224661,"line_start":382,"line_end":382,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<MetaType>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the type is built-in to GraphQL.\n","sig":null,"attributes":[{"value":"/ Returns true if the type is built-in to GraphQL.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":224587,"byte_end":224639,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226082,"byte_end":226085,"line_start":421,"line_end":421,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalarMeta>::new","value":"pub fn new<T>(Cow) -> Self where T: FromInputValue<S> + ParseScalarValue<S> +\n'a","parent":null,"children":[],"decl_id":null,"docs":" Build a new scalar type metadata with the specified name\n","sig":null,"attributes":[{"value":"/ Build a new scalar type metadata with the specified name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226010,"byte_end":226070,"line_start":420,"line_end":420,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226553,"byte_end":226564,"line_start":436,"line_end":436,"column_start":12,"column_end":23},"name":"description","qualname":"<ScalarMeta>::description","value":"pub fn description(Self, &str) -> ScalarMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description for the given scalar type","sig":null,"attributes":[{"value":"/ Set the description for the given scalar type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226389,"byte_end":226438,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226443,"byte_end":226446,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If a description already was set prior to calling this method, it will be overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226451,"byte_end":226541,"line_start":435,"line_end":435,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226752,"byte_end":226761,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<ScalarMeta>::into_meta","value":"pub fn into_meta(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap the scalar in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap the scalar in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226698,"byte_end":226740,"line_start":441,"line_end":441,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226925,"byte_end":226928,"line_start":449,"line_end":449,"column_start":12,"column_end":15},"name":"new","qualname":"<ListMeta>::new","value":"pub fn new(Type) -> ListMeta","parent":null,"children":[],"decl_id":null,"docs":" Build a new list type by wrapping the specified type\n","sig":null,"attributes":[{"value":"/ Build a new list type by wrapping the specified type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226857,"byte_end":226913,"line_start":448,"line_end":448,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227058,"byte_end":227067,"line_start":454,"line_end":454,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<ListMeta>::into_meta","value":"pub fn into_meta<S>(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap the list in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap the list in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227006,"byte_end":227046,"line_start":453,"line_end":453,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227240,"byte_end":227243,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"new","qualname":"<NullableMeta>::new","value":"pub fn new(Type) -> NullableMeta","parent":null,"children":[],"decl_id":null,"docs":" Build a new nullable type by wrapping the specified type\n","sig":null,"attributes":[{"value":"/ Build a new nullable type by wrapping the specified type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227168,"byte_end":227228,"line_start":460,"line_end":460,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227390,"byte_end":227399,"line_start":466,"line_end":466,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<NullableMeta>::into_meta","value":"pub fn into_meta<S>(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap the nullable type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap the nullable type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227329,"byte_end":227378,"line_start":465,"line_end":465,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227608,"byte_end":227611,"line_start":476,"line_end":476,"column_start":12,"column_end":15},"name":"new","qualname":"<ObjectMeta>::new","value":"pub fn new(Cow, &[Field]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build a new object type with the specified name and fields\n","sig":null,"attributes":[{"value":"/ Build a new object type with the specified name and fields","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227534,"byte_end":227596,"line_start":475,"line_end":475,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227982,"byte_end":227993,"line_start":488,"line_end":488,"column_start":12,"column_end":23},"name":"description","qualname":"<ObjectMeta>::description","value":"pub fn description(Self, &str) -> ObjectMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description for the object","sig":null,"attributes":[{"value":"/ Set the description for the object","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227832,"byte_end":227870,"line_start":485,"line_end":485,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227875,"byte_end":227878,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If a description was provided prior to calling this method, it will be overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227883,"byte_end":227970,"line_start":487,"line_end":487,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228307,"byte_end":228317,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"interfaces","qualname":"<ObjectMeta>::interfaces","value":"pub fn interfaces(Self, &[Type]) -> ObjectMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the interfaces this type implements","sig":null,"attributes":[{"value":"/ Set the interfaces this type implements","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228127,"byte_end":228170,"line_start":493,"line_end":493,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228175,"byte_end":228178,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ If a list of interfaces already was provided prior to calling this method, they will be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228183,"byte_end":228274,"line_start":495,"line_end":495,"column_start":5,"column_end":96}},{"value":"/ overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228279,"byte_end":228295,"line_start":496,"line_end":496,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228598,"byte_end":228607,"line_start":506,"line_end":506,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<ObjectMeta>::into_meta","value":"pub fn into_meta(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap this object type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap this object type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228538,"byte_end":228586,"line_start":505,"line_end":505,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228821,"byte_end":228824,"line_start":516,"line_end":516,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumMeta>::new","value":"pub fn new<T>(Cow, &[EnumValue]) -> Self where T: FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Build a new enum type with the specified name and possible values\n","sig":null,"attributes":[{"value":"/ Build a new enum type with the specified name and possible values","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228740,"byte_end":228809,"line_start":515,"line_end":515,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229244,"byte_end":229255,"line_start":531,"line_end":531,"column_start":12,"column_end":23},"name":"description","qualname":"<EnumMeta>::description","value":"pub fn description(Self, &str) -> EnumMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the type","sig":null,"attributes":[{"value":"/ Set the description of the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229098,"byte_end":229133,"line_start":528,"line_end":528,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229138,"byte_end":229141,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ If a description was provided prior to calling this method, it will be overwritten","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229146,"byte_end":229232,"line_start":530,"line_end":530,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229445,"byte_end":229454,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<EnumMeta>::into_meta","value":"pub fn into_meta(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap this enum type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap this enum type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229387,"byte_end":229433,"line_start":536,"line_end":536,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229662,"byte_end":229665,"line_start":547,"line_end":547,"column_start":12,"column_end":15},"name":"new","qualname":"<InterfaceMeta>::new","value":"pub fn new(Cow, &[Field]) -> InterfaceMeta","parent":null,"children":[],"decl_id":null,"docs":" Build a new interface type with the specified name and fields\n","sig":null,"attributes":[{"value":"/ Build a new interface type with the specified name and fields","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229585,"byte_end":229650,"line_start":546,"line_end":546,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230015,"byte_end":230026,"line_start":558,"line_end":558,"column_start":12,"column_end":23},"name":"description","qualname":"<InterfaceMeta>::description","value":"pub fn description(Self, &str) -> InterfaceMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the type","sig":null,"attributes":[{"value":"/ Set the description of the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229868,"byte_end":229903,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229908,"byte_end":229911,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ If a description was provided prior to calling this method, it will be overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229916,"byte_end":230003,"line_start":557,"line_end":557,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230226,"byte_end":230235,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<InterfaceMeta>::into_meta","value":"pub fn into_meta(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap this interface type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap this interface type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230163,"byte_end":230214,"line_start":563,"line_end":563,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230416,"byte_end":230419,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"new","qualname":"<UnionMeta>::new","value":"pub fn new(Cow, &[Type]) -> UnionMeta","parent":null,"children":[],"decl_id":null,"docs":" Build a new union type with the specified name and possible types\n","sig":null,"attributes":[{"value":"/ Build a new union type with the specified name and possible types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230335,"byte_end":230404,"line_start":570,"line_end":570,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230859,"byte_end":230870,"line_start":585,"line_end":585,"column_start":12,"column_end":23},"name":"description","qualname":"<UnionMeta>::description","value":"pub fn description(Self, &str) -> UnionMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the type","sig":null,"attributes":[{"value":"/ Set the description of the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230712,"byte_end":230747,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230752,"byte_end":230755,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If a description was provided prior to calling this method, it will be overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230760,"byte_end":230847,"line_start":584,"line_end":584,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231059,"byte_end":231068,"line_start":591,"line_end":591,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<UnionMeta>::into_meta","value":"pub fn into_meta<S>(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap this union type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap this union type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231000,"byte_end":231047,"line_start":590,"line_end":590,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231284,"byte_end":231287,"line_start":601,"line_end":601,"column_start":12,"column_end":15},"name":"new","qualname":"<InputObjectMeta>::new","value":"pub fn new<T: ?Sized>(Cow, &[Argument]) -> Self where T: FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Build a new input type with the specified name and input fields\n","sig":null,"attributes":[{"value":"/ Build a new input type with the specified name and input fields","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231205,"byte_end":231272,"line_start":600,"line_end":600,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231748,"byte_end":231759,"line_start":616,"line_end":616,"column_start":12,"column_end":23},"name":"description","qualname":"<InputObjectMeta>::description","value":"pub fn description(Self, &str) -> InputObjectMeta","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the type","sig":null,"attributes":[{"value":"/ Set the description of the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231601,"byte_end":231636,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231641,"byte_end":231644,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ If a description was provided prior to calling this method, it will be overwritten.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231649,"byte_end":231736,"line_start":615,"line_end":615,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231957,"byte_end":231966,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"into_meta","qualname":"<InputObjectMeta>::into_meta","value":"pub fn into_meta(Self) -> MetaType","parent":null,"children":[],"decl_id":null,"docs":" Wrap this union type in a generic meta type\n","sig":null,"attributes":[{"value":"/ Wrap this union type in a generic meta type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231898,"byte_end":231945,"line_start":621,"line_end":621,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232193,"byte_end":232204,"line_start":631,"line_end":631,"column_start":12,"column_end":23},"name":"description","qualname":"<Field>::description","value":"pub fn description(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the field","sig":null,"attributes":[{"value":"/ Set the description of the field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232070,"byte_end":232106,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232111,"byte_end":232114,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ This overwrites the description if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232119,"byte_end":232181,"line_start":630,"line_end":630,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232447,"byte_end":232455,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"argument","qualname":"<Field>::argument","value":"pub fn argument(Self, Argument) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the field","sig":null,"attributes":[{"value":"/ Add an argument to the field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232325,"byte_end":232357,"line_start":636,"line_end":636,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232362,"byte_end":232365,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Arguments are unordered and can't contain duplicates by name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232370,"byte_end":232435,"line_start":638,"line_end":638,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232901,"byte_end":232911,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<Field>::deprecated","value":"pub fn deprecated(Self, Option<&str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the field to be deprecated with an optional reason.","sig":null,"attributes":[{"value":"/ Set the field to be deprecated with an optional reason.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232748,"byte_end":232807,"line_start":652,"line_end":652,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232812,"byte_end":232815,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This overwrites the deprecation reason if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232820,"byte_end":232889,"line_start":654,"line_end":654,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233132,"byte_end":233135,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Argument>::new","value":"pub fn new(&str, Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233465,"byte_end":233476,"line_start":675,"line_end":675,"column_start":12,"column_end":23},"name":"description","qualname":"<Argument>::description","value":"pub fn description(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the argument","sig":null,"attributes":[{"value":"/ Set the description of the argument","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233339,"byte_end":233378,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233383,"byte_end":233386,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This overwrites the description if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233391,"byte_end":233453,"line_start":674,"line_end":674,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233727,"byte_end":233740,"line_start":683,"line_end":683,"column_start":12,"column_end":25},"name":"default_value","qualname":"<Argument>::default_value","value":"pub fn default_value(Self, InputValue<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the default value of the argument","sig":null,"attributes":[{"value":"/ Set the default value of the argument","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233597,"byte_end":233638,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233643,"byte_end":233646,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This overwrites the default value if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233651,"byte_end":233715,"line_start":682,"line_end":682,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233949,"byte_end":233952,"line_start":691,"line_end":691,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumValue>::new","value":"pub fn new(&str) -> EnumValue","parent":null,"children":[],"decl_id":null,"docs":" Construct a new enum value with the provided name\n","sig":null,"attributes":[{"value":"/ Construct a new enum value with the provided name","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233884,"byte_end":233937,"line_start":690,"line_end":690,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234275,"byte_end":234286,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"description","qualname":"<EnumValue>::description","value":"pub fn description(Self, &str) -> EnumValue","parent":null,"children":[],"decl_id":null,"docs":" Set the description of the enum value","sig":null,"attributes":[{"value":"/ Set the description of the enum value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234147,"byte_end":234188,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234193,"byte_end":234196,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This overwrites the description if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234201,"byte_end":234263,"line_start":701,"line_end":701,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234570,"byte_end":234580,"line_start":710,"line_end":710,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<EnumValue>::deprecated","value":"pub fn deprecated(Self, Option<&str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the enum value to be deprecated with an optional reason.","sig":null,"attributes":[{"value":"/ Set the enum value to be deprecated with an optional reason.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234412,"byte_end":234476,"line_start":707,"line_end":707,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234481,"byte_end":234484,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This overwrites the deprecation reason if any was previously set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234489,"byte_end":234558,"line_start":709,"line_end":709,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236549,"byte_end":236557,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"RootNode","qualname":"::schema::model::RootNode","value":"RootNode { query_type, query_info, mutation_type, mutation_info, subscription_type, subscription_info, schema }","parent":null,"children":[{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785}],"decl_id":null,"docs":" Root query node of a schema","sig":null,"attributes":[{"value":"/ Root query node of a schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236367,"byte_end":236398,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236399,"byte_end":236402,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This brings the mutation, subscription and query types together,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236403,"byte_end":236471,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ and provides the predefined metadata fields.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236472,"byte_end":236520,"line_start":22,"line_end":22,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6779},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236746,"byte_end":236756,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"query_type","qualname":"::schema::model::RootNode::query_type","value":"QueryT","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6780},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236793,"byte_end":236803,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"query_info","qualname":"::schema::model::RootNode::query_info","value":"<QueryT as types::base::GraphQLValue<S>>::TypeInfo","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6781},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236850,"byte_end":236863,"line_start":38,"line_end":38,"column_start":9,"column_end":22},"name":"mutation_type","qualname":"::schema::model::RootNode::mutation_type","value":"MutationT","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6782},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236903,"byte_end":236916,"line_start":40,"line_end":40,"column_start":9,"column_end":22},"name":"mutation_info","qualname":"::schema::model::RootNode::mutation_info","value":"<MutationT as types::base::GraphQLValue<S>>::TypeInfo","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6783},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":236966,"byte_end":236983,"line_start":42,"line_end":42,"column_start":9,"column_end":26},"name":"subscription_type","qualname":"::schema::model::RootNode::subscription_type","value":"SubscriptionT","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6784},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237027,"byte_end":237044,"line_start":44,"line_end":44,"column_start":9,"column_end":26},"name":"subscription_info","qualname":"::schema::model::RootNode::subscription_info","value":"<SubscriptionT as types::base::GraphQLValue<S>>::TypeInfo","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6785},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237098,"byte_end":237104,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::model::RootNode::schema","value":"schema::model::SchemaType<'a, S>","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6793},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237182,"byte_end":237192,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"SchemaType","qualname":"::schema::model::SchemaType","value":"SchemaType {  }","parent":null,"children":[{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800}],"decl_id":null,"docs":" Metadata for a schema\n","sig":null,"attributes":[{"value":"/ Metadata for a schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237128,"byte_end":237153,"line_start":49,"line_end":49,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6808},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237564,"byte_end":237572,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"Concrete","qualname":"::schema::model::TypeType::Concrete","value":"TypeType::Concrete(&'a MetaType)","parent":{"krate":0,"index":6805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6811},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237599,"byte_end":237606,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"NonNull","qualname":"::schema::model::TypeType::NonNull","value":"TypeType::NonNull(Box<TypeType>)","parent":{"krate":0,"index":6805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6814},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237634,"byte_end":237638,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"List","qualname":"::schema::model::TypeType::List","value":"TypeType::List(Box<TypeType>)","parent":{"krate":0,"index":6805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6805},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237538,"byte_end":237546,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TypeType","qualname":"::schema::model::TypeType","value":"pub enum TypeType<'a, S: 'a> {\n    Concrete(&'a MetaType),\n    NonNull(Box<TypeType>),\n    List(Box<TypeType>),\n}","parent":null,"children":[{"krate":0,"index":6808},{"krate":0,"index":6811},{"krate":0,"index":6814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6821},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237693,"byte_end":237706,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"DirectiveType","qualname":"::schema::model::DirectiveType","value":"DirectiveType { name, description, locations, arguments }","parent":null,"children":[{"krate":0,"index":6824},{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6827}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6824},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237724,"byte_end":237728,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"name":"name","qualname":"::schema::model::DirectiveType::name","value":"std::string::String","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6825},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237746,"byte_end":237757,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::model::DirectiveType::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6826},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237783,"byte_end":237792,"line_start":72,"line_end":72,"column_start":9,"column_end":18},"name":"locations","qualname":"::schema::model::DirectiveType::locations","value":"std::vec::Vec<schema::model::DirectiveLocation>","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6827},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237826,"byte_end":237835,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"arguments","qualname":"::schema::model::DirectiveType::arguments","value":"std::vec::Vec<schema::meta::Argument<'a, S>>","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6873},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237998,"byte_end":238003,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Query","qualname":"::schema::model::DirectiveLocation::Query","value":"DirectiveLocation::Query","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6875},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238009,"byte_end":238017,"line_start":80,"line_end":80,"column_start":5,"column_end":13},"name":"Mutation","qualname":"::schema::model::DirectiveLocation::Mutation","value":"DirectiveLocation::Mutation","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6877},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238023,"byte_end":238035,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"Subscription","qualname":"::schema::model::DirectiveLocation::Subscription","value":"DirectiveLocation::Subscription","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6879},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238041,"byte_end":238046,"line_start":82,"line_end":82,"column_start":5,"column_end":10},"name":"Field","qualname":"::schema::model::DirectiveLocation::Field","value":"DirectiveLocation::Field","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6881},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238097,"byte_end":238115,"line_start":84,"line_end":84,"column_start":5,"column_end":23},"name":"FragmentDefinition","qualname":"::schema::model::DirectiveLocation::FragmentDefinition","value":"DirectiveLocation::FragmentDefinition","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"graphql(name = \"FRAGMENT_DEFINITION\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238052,"byte_end":238092,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6883},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238162,"byte_end":238176,"line_start":86,"line_end":86,"column_start":5,"column_end":19},"name":"FragmentSpread","qualname":"::schema::model::DirectiveLocation::FragmentSpread","value":"DirectiveLocation::FragmentSpread","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"graphql(name = \"FRAGMENT_SPREAD\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238121,"byte_end":238157,"line_start":85,"line_end":85,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6885},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238223,"byte_end":238237,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"InlineFragment","qualname":"::schema::model::DirectiveLocation::InlineFragment","value":"DirectiveLocation::InlineFragment","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"graphql(name = \"INLINE_FRAGMENT\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238182,"byte_end":238218,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":6872},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237974,"byte_end":237991,"line_start":78,"line_end":78,"column_start":10,"column_end":27},"name":"DirectiveLocation","qualname":"::schema::model::DirectiveLocation","value":"pub enum DirectiveLocation {\n    Query,\n    Mutation,\n    Subscription,\n    Field,\n    FragmentDefinition,\n    FragmentSpread,\n    InlineFragment,\n}","parent":null,"children":[{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6885}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"graphql(name = \"__DirectiveLocation\", internal)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237914,"byte_end":237964,"line_start":77,"line_end":77,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238710,"byte_end":238713,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<RootNode>::new","value":"pub fn new(QueryT, MutationT, SubscriptionT) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`RootNode`] from `query`, `mutation` and `subscription` nodes,\n parametrizing it with a [`DefaultScalarValue`].\n","sig":null,"attributes":[{"value":"/ Constructs a new [`RootNode`] from `query`, `mutation` and `subscription` nodes,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238558,"byte_end":238642,"line_start":98,"line_end":98,"column_start":5,"column_end":89}},{"value":"/ parametrizing it with a [`DefaultScalarValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238647,"byte_end":238698,"line_start":99,"line_end":99,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239297,"byte_end":239318,"line_start":114,"line_end":114,"column_start":12,"column_end":33},"name":"new_with_scalar_value","qualname":"<RootNode>::new_with_scalar_value","value":"pub fn new_with_scalar_value(QueryT, MutationT, SubscriptionT) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`RootNode`] from `query`, `mutation` and `subscription` nodes,\n parametrizing it with the provided [`ScalarValue`].\n","sig":null,"attributes":[{"value":"/ Constructs a new [`RootNode`] from `query`, `mutation` and `subscription` nodes,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239141,"byte_end":239225,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/ parametrizing it with the provided [`ScalarValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239230,"byte_end":239285,"line_start":113,"line_end":113,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239897,"byte_end":239910,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"new_with_info","qualname":"<RootNode>::new_with_info","value":"pub fn new_with_info(QueryT, MutationT, SubscriptionT, QueryT::TypeInfo,\n                     MutationT::TypeInfo, SubscriptionT::TypeInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new root node from query and mutation nodes,\n while also providing type info objects for the query and\n mutation types.\n","sig":null,"attributes":[{"value":"/ Construct a new root node from query and mutation nodes,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239736,"byte_end":239796,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/ while also providing type info objects for the query and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239801,"byte_end":239861,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ mutation types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239866,"byte_end":239885,"line_start":132,"line_end":132,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240792,"byte_end":240810,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"as_schema_language","qualname":"<RootNode>::as_schema_language","value":"pub fn as_schema_language(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The schema definition as a `String` in the\n [GraphQL Schema Language](https://graphql.org/learn/schema/#type-language)\n format.\n","sig":null,"attributes":[{"value":"cfg(feature = \"schema-language\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240595,"byte_end":240630,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/ The schema definition as a `String` in the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240635,"byte_end":240681,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ [GraphQL Schema Language](https://graphql.org/learn/schema/#type-language)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240686,"byte_end":240764,"line_start":158,"line_end":158,"column_start":5,"column_end":83}},{"value":"/ format.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240769,"byte_end":240780,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241170,"byte_end":241188,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"as_parser_document","qualname":"<RootNode>::as_parser_document","value":"pub fn as_parser_document(&'a Self) -> Document","parent":null,"children":[],"decl_id":null,"docs":" The schema definition as a [`graphql_parser`](https://crates.io/crates/graphql-parser)\n [`Document`](https://docs.rs/graphql-parser/latest/graphql_parser/schema/struct.Document.html).\n","sig":null,"attributes":[{"value":"cfg(feature = \"graphql-parser-integration\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240913,"byte_end":240959,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/ The schema definition as a [`graphql_parser`](https://crates.io/crates/graphql-parser)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":240964,"byte_end":241054,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ [`Document`](https://docs.rs/graphql-parser/latest/graphql_parser/schema/struct.Document.html).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241059,"byte_end":241158,"line_start":167,"line_end":167,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241371,"byte_end":241374,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaType>::new","value":"pub fn new<QueryT, MutationT,\n           SubscriptionT>(&QueryT::TypeInfo, &MutationT::TypeInfo,\n                          &SubscriptionT::TypeInfo) -> Self where\nS: ScalarValue + 'a, QueryT: GraphQLType<S>, MutationT: GraphQLType<S>,\nSubscriptionT: GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Create a new schema.\n","sig":null,"attributes":[{"value":"/ Create a new schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241335,"byte_end":241359,"line_start":174,"line_end":174,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244060,"byte_end":244073,"line_start":255,"line_end":255,"column_start":12,"column_end":25},"name":"add_directive","qualname":"<SchemaType>::add_directive","value":"pub fn add_directive(&mut Self, DirectiveType)","parent":null,"children":[],"decl_id":null,"docs":" Add a directive like `skip` or `include`.\n","sig":null,"attributes":[{"value":"/ Add a directive like `skip` or `include`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244003,"byte_end":244048,"line_start":254,"line_end":254,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244233,"byte_end":244245,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"type_by_name","qualname":"<SchemaType>::type_by_name","value":"pub fn type_by_name(&Self, &str) -> Option<TypeType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get a type by name.\n","sig":null,"attributes":[{"value":"/ Get a type by name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244198,"byte_end":244221,"line_start":259,"line_end":259,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244405,"byte_end":244426,"line_start":265,"line_end":265,"column_start":12,"column_end":33},"name":"concrete_type_by_name","qualname":"<SchemaType>::concrete_type_by_name","value":"pub fn concrete_type_by_name(&Self, &str) -> Option<&MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get a concrete type by name.\n","sig":null,"attributes":[{"value":"/ Get a concrete type by name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244361,"byte_end":244393,"line_start":264,"line_end":264,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244902,"byte_end":244912,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"query_type","qualname":"<SchemaType>::query_type","value":"pub fn query_type(&Self) -> TypeType<, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the query type from the schema.\n","sig":null,"attributes":[{"value":"/ Get the query type from the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":244851,"byte_end":244890,"line_start":278,"line_end":278,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245177,"byte_end":245196,"line_start":288,"line_end":288,"column_start":12,"column_end":31},"name":"concrete_query_type","qualname":"<SchemaType>::concrete_query_type","value":"pub fn concrete_query_type(&Self) -> &MetaType<, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete query type from the schema.\n","sig":null,"attributes":[{"value":"/ Get the concrete query type from the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245117,"byte_end":245165,"line_start":287,"line_end":287,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245405,"byte_end":245418,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"mutation_type","qualname":"<SchemaType>::mutation_type","value":"pub fn mutation_type(&Self) -> Option<TypeType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the mutation type from the schema.\n","sig":null,"attributes":[{"value":"/ Get the mutation type from the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245351,"byte_end":245393,"line_start":294,"line_end":294,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245692,"byte_end":245714,"line_start":303,"line_end":303,"column_start":12,"column_end":34},"name":"concrete_mutation_type","qualname":"<SchemaType>::concrete_mutation_type","value":"pub fn concrete_mutation_type(&Self) -> Option<&MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete mutation type from the schema.\n","sig":null,"attributes":[{"value":"/ Get the concrete mutation type from the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245629,"byte_end":245680,"line_start":302,"line_end":302,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245977,"byte_end":245994,"line_start":311,"line_end":311,"column_start":12,"column_end":29},"name":"subscription_type","qualname":"<SchemaType>::subscription_type","value":"pub fn subscription_type(&Self) -> Option<TypeType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the subscription type.\n","sig":null,"attributes":[{"value":"/ Get the subscription type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":245935,"byte_end":245965,"line_start":310,"line_end":310,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246264,"byte_end":246290,"line_start":319,"line_end":319,"column_start":12,"column_end":38},"name":"concrete_subscription_type","qualname":"<SchemaType>::concrete_subscription_type","value":"pub fn concrete_subscription_type(&Self) -> Option<&MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete subscription type.\n","sig":null,"attributes":[{"value":"/ Get the concrete subscription type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246213,"byte_end":246252,"line_start":318,"line_end":318,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246555,"byte_end":246564,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"type_list","qualname":"<SchemaType>::type_list","value":"pub fn type_list(&Self) -> Vec<TypeType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of types.\n","sig":null,"attributes":[{"value":"/ Get a list of types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246519,"byte_end":246543,"line_start":326,"line_end":326,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246719,"byte_end":246737,"line_start":332,"line_end":332,"column_start":12,"column_end":30},"name":"concrete_type_list","qualname":"<SchemaType>::concrete_type_list","value":"pub fn concrete_type_list(&Self) -> Vec<&MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of concrete types.\n","sig":null,"attributes":[{"value":"/ Get a list of concrete types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246674,"byte_end":246707,"line_start":331,"line_end":331,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246845,"byte_end":246854,"line_start":337,"line_end":337,"column_start":12,"column_end":21},"name":"make_type","qualname":"<SchemaType>::make_type","value":"pub fn make_type(&Self, &Type) -> TypeType<, S>","parent":null,"children":[],"decl_id":null,"docs":" Make a type.\n","sig":null,"attributes":[{"value":"/ Make a type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":246817,"byte_end":246833,"line_start":336,"line_end":336,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247458,"byte_end":247472,"line_start":351,"line_end":351,"column_start":12,"column_end":26},"name":"directive_list","qualname":"<SchemaType>::directive_list","value":"pub fn directive_list(&Self) -> Vec<&DirectiveType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of directives.\n","sig":null,"attributes":[{"value":"/ Get a list of directives.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247417,"byte_end":247446,"line_start":350,"line_end":350,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247600,"byte_end":247617,"line_start":356,"line_end":356,"column_start":12,"column_end":29},"name":"directive_by_name","qualname":"<SchemaType>::directive_by_name","value":"pub fn directive_by_name(&Self, &str) -> Option<&DirectiveType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Get directive by name.\n","sig":null,"attributes":[{"value":"/ Get directive by name.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247562,"byte_end":247588,"line_start":355,"line_end":355,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247776,"byte_end":247788,"line_start":361,"line_end":361,"column_start":12,"column_end":24},"name":"type_overlap","qualname":"<SchemaType>::type_overlap","value":"pub fn type_overlap(&Self, &MetaType<, S>, &MetaType<, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if there is an overlap between types.\n","sig":null,"attributes":[{"value":"/ Determine if there is an overlap between types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":247713,"byte_end":247764,"line_start":360,"line_end":360,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":248352,"byte_end":248366,"line_start":378,"line_end":378,"column_start":12,"column_end":26},"name":"possible_types","qualname":"<SchemaType>::possible_types","value":"pub fn possible_types(&Self, &MetaType<, S>) -> Vec<&MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":" A list of possible typeees for a given type.\n","sig":null,"attributes":[{"value":"/ A list of possible typeees for a given type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":248292,"byte_end":248340,"line_start":377,"line_end":377,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":249269,"byte_end":249285,"line_start":402,"line_end":402,"column_start":12,"column_end":28},"name":"is_possible_type","qualname":"<SchemaType>::is_possible_type","value":"pub fn is_possible_type(&Self, &MetaType<, S>, &MetaType<, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If the abstract type is possible.\n","sig":null,"attributes":[{"value":"/ If the abstract type is possible.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":249220,"byte_end":249257,"line_start":401,"line_end":401,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":249583,"byte_end":249593,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"is_subtype","qualname":"<SchemaType>::is_subtype","value":"pub fn is_subtype<'b>(&Self, &Type, &Type) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If the type is a subtype of another type.\n","sig":null,"attributes":[{"value":"/ If the type is a subtype of another type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":249526,"byte_end":249571,"line_start":412,"line_end":412,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250454,"byte_end":250470,"line_start":436,"line_end":436,"column_start":12,"column_end":28},"name":"is_named_subtype","qualname":"<SchemaType>::is_named_subtype","value":"pub fn is_named_subtype(&Self, &str, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If the type is a named subtype.\n","sig":null,"attributes":[{"value":"/ If the type is a named subtype.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250407,"byte_end":250442,"line_start":435,"line_end":435,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250973,"byte_end":250984,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"to_concrete","qualname":"<TypeType>::to_concrete","value":"pub fn to_concrete(&Self) -> Option<&'a MetaType<, S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250952,"byte_end":250961,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251154,"byte_end":251172,"line_start":460,"line_end":460,"column_start":12,"column_end":30},"name":"innermost_concrete","qualname":"<TypeType>::innermost_concrete","value":"pub fn innermost_concrete(&Self) -> &'a MetaType<, S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251133,"byte_end":251142,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251393,"byte_end":251406,"line_start":468,"line_end":468,"column_start":12,"column_end":25},"name":"list_contents","qualname":"<TypeType>::list_contents","value":"pub fn list_contents(&Self) -> Option<&TypeType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251372,"byte_end":251381,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251636,"byte_end":251647,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"is_non_null","qualname":"<TypeType>::is_non_null","value":"pub fn is_non_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251615,"byte_end":251624,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251797,"byte_end":251800,"line_start":486,"line_end":486,"column_start":12,"column_end":15},"name":"new","qualname":"<DirectiveType>::new","value":"pub fn new(&str, &[DirectiveLocation], &[Argument]) -> DirectiveType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":252924,"byte_end":252935,"line_start":529,"line_end":529,"column_start":12,"column_end":23},"name":"description","qualname":"<DirectiveType>::description","value":"pub fn description(Self, &str) -> DirectiveType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2339},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283635,"byte_end":283652,"line_start":16,"line_end":16,"column_start":11,"column_end":28},"name":"GraphQLValueAsync","qualname":"::types::async_await::GraphQLValueAsync","value":"GraphQLValueAsync<S = DefaultScalarValue>: GraphQLValue<S> + Sync","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345}],"decl_id":null,"docs":" Extension of [`GraphQLValue`] trait with asynchronous queries/mutations resolvers.","sig":null,"attributes":[{"value":"/ Extension of [`GraphQLValue`] trait with asynchronous queries/mutations resolvers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283380,"byte_end":283466,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283467,"byte_end":283470,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Convenience macros related to asynchronous queries/mutations expand into an implementation of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283471,"byte_end":283568,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ this trait and [`GraphQLValue`] for the given type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283569,"byte_end":283624,"line_start":15,"line_end":15,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284270,"byte_end":284289,"line_start":34,"line_end":34,"column_start":8,"column_end":27},"name":"resolve_field_async","qualname":"::types::async_await::GraphQLValueAsync::resolve_field_async","value":"pub fn resolve_field_async<'a>(&'a Self, &'a Self::TypeInfo, &'a str,\n                               &'a Arguments<, S>,\n                               &'a Executor<, , Self::Context, S>)\n-> BoxFuture","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Resolves the value of a single field on this [`GraphQLValueAsync`].","sig":null,"attributes":[{"value":"/ Resolves the value of a single field on this [`GraphQLValueAsync`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283798,"byte_end":283869,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283874,"byte_end":283877,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The `arguments` object contains all the specified arguments, with default values being","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283882,"byte_end":283972,"line_start":24,"line_end":24,"column_start":5,"column_end":95}},{"value":"/ substituted for the ones not provided by the query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283977,"byte_end":284032,"line_start":25,"line_end":25,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284037,"byte_end":284040,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The `executor` can be used to drive selections into sub-[objects][3].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284045,"byte_end":284118,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284123,"byte_end":284126,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284131,"byte_end":284143,"line_start":29,"line_end":29,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284148,"byte_end":284151,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284156,"byte_end":284194,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284199,"byte_end":284202,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284207,"byte_end":284262,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285253,"byte_end":285276,"line_start":60,"line_end":60,"column_start":8,"column_end":31},"name":"resolve_into_type_async","qualname":"::types::async_await::GraphQLValueAsync::resolve_into_type_async","value":"pub fn resolve_into_type_async<'a>(&'a Self, &'a Self::TypeInfo, &str,\n                                   Option<&'a [Selection]>, &'a Executor)\n-> BoxFuture","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Resolves this [`GraphQLValueAsync`] (being an [interface][1] or an [union][2]) into a\n concrete downstream [object][3] type.","sig":null,"attributes":[{"value":"/ Resolves this [`GraphQLValueAsync`] (being an [interface][1] or an [union][2]) into a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284667,"byte_end":284756,"line_start":47,"line_end":47,"column_start":5,"column_end":94}},{"value":"/ concrete downstream [object][3] type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284761,"byte_end":284802,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284807,"byte_end":284810,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Tries to resolve this [`GraphQLValueAsync`] into the provided `type_name`. If the type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284815,"byte_end":284905,"line_start":50,"line_end":50,"column_start":5,"column_end":95}},{"value":"/ matches, then passes the instance along to [`Executor::resolve`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284910,"byte_end":284979,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284984,"byte_end":284987,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":284992,"byte_end":285004,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285009,"byte_end":285012,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285017,"byte_end":285055,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285060,"byte_end":285063,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285068,"byte_end":285126,"line_start":57,"line_end":57,"column_start":5,"column_end":63}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285131,"byte_end":285185,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285190,"byte_end":285245,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286773,"byte_end":286786,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"resolve_async","qualname":"::types::async_await::GraphQLValueAsync::resolve_async","value":"pub fn resolve_async<'a>(&'a Self, &'a Self::TypeInfo,\n                         Option<&'a [Selection<, S>]>,\n                         &'a Executor<, , Self::Context, S>) -> BoxFuture","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Resolves the provided `selection_set` against this [`GraphQLValueAsync`].","sig":null,"attributes":[{"value":"/ Resolves the provided `selection_set` against this [`GraphQLValueAsync`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285836,"byte_end":285913,"line_start":77,"line_end":77,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285918,"byte_end":285921,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ For non-[object][3] types, the `selection_set` will be [`None`] and the value should simply","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":285926,"byte_end":286021,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ be returned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286026,"byte_end":286042,"line_start":80,"line_end":80,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286047,"byte_end":286050,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ For [objects][3], all fields in the `selection_set` should be resolved. The default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286055,"byte_end":286142,"line_start":82,"line_end":82,"column_start":5,"column_end":92}},{"value":"/ implementation uses [`GraphQLValueAsync::resolve_field_async`] to resolve all fields,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286147,"byte_end":286236,"line_start":83,"line_end":83,"column_start":5,"column_end":94}},{"value":"/ including those through a fragment expansion.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286241,"byte_end":286290,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286295,"byte_end":286298,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Since the [GraphQL spec specifies][0] that errors during field processing should result in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286303,"byte_end":286397,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ a null-value, this might return `Ok(Null)` in case of a failure. Errors are recorded","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286402,"byte_end":286490,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ internally.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286495,"byte_end":286510,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286515,"byte_end":286518,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286523,"byte_end":286535,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286540,"byte_end":286543,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics, if `selection_set` is [`None`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286548,"byte_end":286618,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286623,"byte_end":286626,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [0]: https://spec.graphql.org/June2018/#sec-Errors-and-Non-Nullability","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286631,"byte_end":286705,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":286710,"byte_end":286765,"line_start":95,"line_end":95,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2348},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287573,"byte_end":287593,"line_start":119,"line_end":119,"column_start":10,"column_end":30},"name":"DynGraphQLValueAsync","qualname":"::types::async_await::DynGraphQLValueAsync","value":"dyn GraphQLValueAsync<S, Context = C, TypeInfo = C> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Helper alias for naming [trait objects][1] of [`GraphQLValueAsync`].","sig":null,"attributes":[{"value":"/ Helper alias for naming [trait objects][1] of [`GraphQLValueAsync`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287418,"byte_end":287490,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287491,"byte_end":287494,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287495,"byte_end":287563,"line_start":118,"line_end":118,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":2352},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287941,"byte_end":287957,"line_start":126,"line_end":126,"column_start":11,"column_end":27},"name":"GraphQLTypeAsync","qualname":"::types::async_await::GraphQLTypeAsync","value":"GraphQLTypeAsync<S = DefaultScalarValue>: GraphQLValueAsync<S> + GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Extension of [`GraphQLType`] trait with asynchronous queries/mutations resolvers.","sig":null,"attributes":[{"value":"/ Extension of [`GraphQLType`] trait with asynchronous queries/mutations resolvers.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287682,"byte_end":287767,"line_start":122,"line_end":122,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287768,"byte_end":287771,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ It's automatically implemented for [`GraphQLValueAsync`] and [`GraphQLType`] implementers, so","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287772,"byte_end":287869,"line_start":124,"line_end":124,"column_start":1,"column_end":98}},{"value":"/ doesn't require manual or code-generated implementation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287870,"byte_end":287930,"line_start":125,"line_end":125,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7381},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298826,"byte_end":298832,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::types::base::TypeKind::Scalar","value":"TypeKind::Scalar","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Scalar types","sig":null,"attributes":[{"value":"/ ## Scalar types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298585,"byte_end":298604,"line_start":19,"line_end":19,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298609,"byte_end":298612,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Scalar types appear as the leaf nodes of GraphQL queries. Strings,\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298617,"byte_end":298688,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ numbers, and booleans are the built in types, and while it's possible\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298693,"byte_end":298767,"line_start":22,"line_end":22,"column_start":5,"column_end":79}},{"value":"/ to define your own, it's relatively uncommon.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298772,"byte_end":298821,"line_start":23,"line_end":23,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7383},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298987,"byte_end":298993,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Object","qualname":"::types::base::TypeKind::Object","value":"TypeKind::Object","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Object types","sig":null,"attributes":[{"value":"/ ## Object types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298839,"byte_end":298858,"line_start":26,"line_end":26,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298863,"byte_end":298866,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The most common type to be implemented by users. Objects have fields\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298871,"byte_end":298944,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ and can implement interfaces.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298949,"byte_end":298982,"line_start":29,"line_end":29,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7385},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299177,"byte_end":299186,"line_start":36,"line_end":36,"column_start":5,"column_end":14},"name":"Interface","qualname":"::types::base::TypeKind::Interface","value":"TypeKind::Interface","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Interface types","sig":null,"attributes":[{"value":"/ ## Interface types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299000,"byte_end":299022,"line_start":32,"line_end":32,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299027,"byte_end":299030,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Interface types are used to represent overlapping fields between\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299035,"byte_end":299104,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ multiple types, and can be queried for their concrete type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299109,"byte_end":299172,"line_start":35,"line_end":35,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7387},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299319,"byte_end":299324,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Union","qualname":"::types::base::TypeKind::Union","value":"TypeKind::Union","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Union types","sig":null,"attributes":[{"value":"/ ## Union types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299193,"byte_end":299211,"line_start":38,"line_end":38,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299216,"byte_end":299219,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Unions are similar to interfaces but can not contain any fields on\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299224,"byte_end":299295,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ their own.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299300,"byte_end":299314,"line_start":41,"line_end":41,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7389},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299439,"byte_end":299443,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Enum","qualname":"::types::base::TypeKind::Enum","value":"TypeKind::Enum","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Enum types","sig":null,"attributes":[{"value":"/ ## Enum types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299331,"byte_end":299348,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299353,"byte_end":299356,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Like scalars, enum types appear as the leaf nodes of GraphQL queries.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299361,"byte_end":299434,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7393},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299594,"byte_end":299605,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"InputObject","qualname":"::types::base::TypeKind::InputObject","value":"TypeKind::InputObject","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Input objects","sig":null,"attributes":[{"value":"/ ## Input objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299450,"byte_end":299470,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299475,"byte_end":299478,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Represents complex values provided in queries _into_ the system.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299483,"byte_end":299551,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"graphql(name = \"INPUT_OBJECT\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299556,"byte_end":299589,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7391},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299826,"byte_end":299830,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"List","qualname":"::types::base::TypeKind::List","value":"TypeKind::List","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## List types","sig":null,"attributes":[{"value":"/ ## List types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299612,"byte_end":299629,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299634,"byte_end":299637,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Represent lists of other types. This library provides implementations\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299642,"byte_end":299716,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ for vectors and slices, but other Rust types can be extended to serve\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299721,"byte_end":299795,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ as GraphQL lists.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299800,"byte_end":299821,"line_start":59,"line_end":59,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7395},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300022,"byte_end":300029,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"NonNull","qualname":"::types::base::TypeKind::NonNull","value":"TypeKind::NonNull","parent":{"krate":0,"index":7380},"children":[],"decl_id":null,"docs":" ## Non-null types","sig":null,"attributes":[{"value":"/ ## Non-null types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299837,"byte_end":299858,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299863,"byte_end":299866,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ In GraphQL, nullable types are the default. By putting a `!` after a\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299871,"byte_end":299944,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ type, it becomes non-nullable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299949,"byte_end":299983,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"graphql(name = \"NON_NULL\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":299988,"byte_end":300017,"line_start":66,"line_end":66,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7380},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298570,"byte_end":298578,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"TypeKind","qualname":"::types::base::TypeKind","value":"pub enum TypeKind {\n    Scalar,\n    Object,\n    Interface,\n    Union,\n    Enum,\n    InputObject,\n    List,\n    NonNull,\n}","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7383},{"krate":0,"index":7385},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7393},{"krate":0,"index":7391},{"krate":0,"index":7395}],"decl_id":null,"docs":" GraphQL type kind","sig":null,"attributes":[{"value":"/ GraphQL type kind","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298348,"byte_end":298369,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298370,"byte_end":298373,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The GraphQL specification defines a number of type kinds - the meta type\\","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298374,"byte_end":298451,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ of a type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298452,"byte_end":298466,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"graphql(name = \"__TypeKind\", internal)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":298519,"byte_end":298560,"line_start":17,"line_end":17,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7397},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300091,"byte_end":300100,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"Arguments","qualname":"::types::base::Arguments","value":"Arguments {  }","parent":null,"children":[{"krate":0,"index":7400}],"decl_id":null,"docs":" Field argument container\n","sig":null,"attributes":[{"value":"/ Field argument container","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300034,"byte_end":300062,"line_start":70,"line_end":70,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300273,"byte_end":300276,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Arguments>::new","value":"pub fn new(Option<IndexMap<&'a str, InputValue<S>>>,\n           &'a Option<Vec<Argument<, S>>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301293,"byte_end":301296,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"get","qualname":"<Arguments>::get","value":"pub fn get<T>(&Self, &str) -> Option<T> where T: FromInputValue<S>","parent":null,"children":[],"decl_id":null,"docs":" Get and convert an argument into the desired type.","sig":null,"attributes":[{"value":"/ Get and convert an argument into the desired type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300983,"byte_end":301037,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301042,"byte_end":301045,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the argument is found, or a default argument has been provided,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301050,"byte_end":301120,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ the `InputValue` will be converted into the type `T`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301125,"byte_end":301182,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301187,"byte_end":301190,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if the argument is present _and_ type conversion","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301195,"byte_end":301262,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ succeeeds.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301267,"byte_end":301281,"line_start":108,"line_end":108,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":2460},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303460,"byte_end":303472,"line_start":155,"line_end":155,"column_start":11,"column_end":23},"name":"GraphQLValue","qualname":"::types::base::GraphQLValue","value":"GraphQLValue<S = DefaultScalarValue>","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469}],"decl_id":null,"docs":" Primary trait used to resolve GraphQL values.","sig":null,"attributes":[{"value":"/ Primary trait used to resolve GraphQL values.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301513,"byte_end":301562,"line_start":120,"line_end":120,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301563,"byte_end":301566,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ All the convenience macros ultimately expand into an implementation of this trait for the given","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301567,"byte_end":301666,"line_start":122,"line_end":122,"column_start":1,"column_end":100}},{"value":"/ type. The macros remove duplicated definitions of fields and arguments, and add type checks on","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301667,"byte_end":301765,"line_start":123,"line_end":123,"column_start":1,"column_end":99}},{"value":"/ all resolving functions automatically. This can all be done manually too.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301766,"byte_end":301843,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301844,"byte_end":301847,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`GraphQLValue`] provides _some_ convenience methods for you, in the form of optional trait","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301848,"byte_end":301943,"line_start":126,"line_end":126,"column_start":1,"column_end":96}},{"value":"/ methods. The `type_name` method is mandatory, but other than that, it depends on what type","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":301944,"byte_end":302038,"line_start":127,"line_end":127,"column_start":1,"column_end":95}},{"value":"/ you're exposing:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302039,"byte_end":302059,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/ - [Scalars][4], [enums][5], [lists][6] and [non-null wrappers][7] only require `resolve`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302060,"byte_end":302153,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ - [Interfaces][1] and [objects][3] require `resolve_field` _or_ `resolve` if you want to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302154,"byte_end":302246,"line_start":130,"line_end":130,"column_start":1,"column_end":93}},{"value":"/   implement a custom resolution logic (probably not).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302247,"byte_end":302304,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ - [Interfaces][1] and [unions][2] require `resolve_into_type` and `concrete_type_name`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302305,"byte_end":302396,"line_start":132,"line_end":132,"column_start":1,"column_end":92}},{"value":"/ - [Input objects][8] do not require anything.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302397,"byte_end":302446,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302447,"byte_end":302450,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Object safety","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302451,"byte_end":302470,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302471,"byte_end":302474,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This trait is [object safe][11], therefore may be turned into a [trait object][12] and used for","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302475,"byte_end":302574,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ resolving GraphQL values even when a concrete Rust type is erased.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302575,"byte_end":302645,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302646,"byte_end":302649,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302650,"byte_end":302663,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302664,"byte_end":302667,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be used in a conjunction with a [`GraphQLType`] trait. See the example","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302668,"byte_end":302768,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"/ in the documentation of a [`GraphQLType`] trait.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302769,"byte_end":302821,"line_start":143,"line_end":143,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302822,"byte_end":302825,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302826,"byte_end":302884,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302885,"byte_end":302939,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302940,"byte_end":302995,"line_start":147,"line_end":147,"column_start":1,"column_end":56}},{"value":"/ [4]: https://spec.graphql.org/June2018/#sec-Scalars","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":302996,"byte_end":303051,"line_start":148,"line_end":148,"column_start":1,"column_end":56}},{"value":"/ [5]: https://spec.graphql.org/June2018/#sec-Enums","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303052,"byte_end":303105,"line_start":149,"line_end":149,"column_start":1,"column_end":54}},{"value":"/ [6]: https://spec.graphql.org/June2018/#sec-Type-System.List","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303106,"byte_end":303170,"line_start":150,"line_end":150,"column_start":1,"column_end":65}},{"value":"/ [7]: https://spec.graphql.org/June2018/#sec-Type-System.Non-Null","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303171,"byte_end":303239,"line_start":151,"line_end":151,"column_start":1,"column_end":69}},{"value":"/ [8]: https://spec.graphql.org/June2018/#sec-Input-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303240,"byte_end":303301,"line_start":152,"line_end":152,"column_start":1,"column_end":62}},{"value":"/ [11]: https://doc.rust-lang.org/reference/items/traits.html#object-safety","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303302,"byte_end":303379,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ [12]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303380,"byte_end":303449,"line_start":154,"line_end":154,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":2462},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303764,"byte_end":303771,"line_start":163,"line_end":163,"column_start":10,"column_end":17},"name":"Context","qualname":"::types::base::GraphQLValue::Context","value":"type Context;","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Context type for this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Context type for this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303529,"byte_end":303572,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303577,"byte_end":303580,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ It's threaded through a query execution to all affected nodes, and can be used to hold","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303585,"byte_end":303675,"line_start":161,"line_end":161,"column_start":5,"column_end":95}},{"value":"/ common data, e.g. database connections or request session information.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303680,"byte_end":303754,"line_start":162,"line_end":162,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":2463},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304097,"byte_end":304105,"line_start":170,"line_end":170,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::types::base::GraphQLValue::TypeInfo","value":"type TypeInfo;","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Type that may carry additional schema information for this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Type that may carry additional schema information for this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303778,"byte_end":303858,"line_start":165,"line_end":165,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303863,"byte_end":303866,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ It can be used to implement a schema that is partly dynamic, meaning that it can use","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303871,"byte_end":303959,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"/ information that is not known at compile time, for instance by reading it from a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":303964,"byte_end":304048,"line_start":168,"line_end":168,"column_start":5,"column_end":89}},{"value":"/ configuration file at startup.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304053,"byte_end":304087,"line_start":169,"line_end":169,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304438,"byte_end":304447,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"type_name","qualname":"::types::base::GraphQLValue::type_name","value":"pub fn type_name<'i>(&Self, &'i Self::TypeInfo) -> Option<&'i str>","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Returns name of the [`GraphQLType`] exposed by this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Returns name of the [`GraphQLType`] exposed by this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304112,"byte_end":304185,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304190,"byte_end":304193,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function will be called multiple times during a query execution. It must _not_ perform","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304198,"byte_end":304293,"line_start":174,"line_end":174,"column_start":5,"column_end":100}},{"value":"/ any calculation and _always_ return the same value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304298,"byte_end":304353,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304358,"byte_end":304361,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Usually, it should just call a [`GraphQLType::name`] inside.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304366,"byte_end":304430,"line_start":177,"line_end":177,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304977,"byte_end":304990,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"resolve_field","qualname":"::types::base::GraphQLValue::resolve_field","value":"pub fn resolve_field(&Self, &Self::TypeInfo, &str, &Arguments<, S>,\n                     &Executor<, , Self::Context, S>) -> ExecutionResult<S>","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Resolves the value of a single field on this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Resolves the value of a single field on this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304510,"byte_end":304576,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304581,"byte_end":304584,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The `arguments` object contains all the specified arguments, with default values being","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304589,"byte_end":304679,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/ substituted for the ones not provided by the query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304684,"byte_end":304739,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304744,"byte_end":304747,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The `executor` can be used to drive selections into sub-[objects][3].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304752,"byte_end":304825,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304830,"byte_end":304833,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304838,"byte_end":304850,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304855,"byte_end":304858,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304863,"byte_end":304901,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304906,"byte_end":304909,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":304914,"byte_end":304969,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305861,"byte_end":305878,"line_start":215,"line_end":215,"column_start":8,"column_end":25},"name":"resolve_into_type","qualname":"::types::base::GraphQLValue::resolve_into_type","value":"pub fn resolve_into_type(&Self, &Self::TypeInfo, &str,\n                         Option<&[Selection<, S>]>,\n                         &Executor<, , Self::Context, S>)\n-> ExecutionResult<S>","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Resolves this [`GraphQLValue`] (being an [interface][1] or an [union][2]) into a concrete\n downstream [object][3] type.","sig":null,"attributes":[{"value":"/ Resolves this [`GraphQLValue`] (being an [interface][1] or an [union][2]) into a concrete","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305285,"byte_end":305378,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ downstream [object][3] type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305383,"byte_end":305415,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305420,"byte_end":305423,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Tries to resolve this [`GraphQLValue`] into the provided `type_name`. If the type matches,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305428,"byte_end":305522,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ then passes the instance along to [`Executor::resolve`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305527,"byte_end":305587,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305592,"byte_end":305595,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305600,"byte_end":305612,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305617,"byte_end":305620,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305625,"byte_end":305663,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305668,"byte_end":305671,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305676,"byte_end":305734,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305739,"byte_end":305793,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":305798,"byte_end":305853,"line_start":214,"line_end":214,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306800,"byte_end":306818,"line_start":242,"line_end":242,"column_start":8,"column_end":26},"name":"concrete_type_name","qualname":"::types::base::GraphQLValue::concrete_type_name","value":"pub fn concrete_type_name(&Self, &Self::Context, &Self::TypeInfo) -> String","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Returns the concrete [`GraphQLType`] name for this [`GraphQLValue`] being an [interface][1],\n an [union][2] or an [object][3].","sig":null,"attributes":[{"value":"/ Returns the concrete [`GraphQLType`] name for this [`GraphQLValue`] being an [interface][1],","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306358,"byte_end":306454,"line_start":231,"line_end":231,"column_start":5,"column_end":101}},{"value":"/ an [union][2] or an [object][3].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306459,"byte_end":306495,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306500,"byte_end":306503,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306508,"byte_end":306520,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306525,"byte_end":306528,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306533,"byte_end":306571,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306576,"byte_end":306579,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306584,"byte_end":306642,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306647,"byte_end":306701,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306706,"byte_end":306761,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"allow(unused_variables)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":306766,"byte_end":306792,"line_start":241,"line_end":241,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307964,"byte_end":307971,"line_start":268,"line_end":268,"column_start":8,"column_end":15},"name":"resolve","qualname":"::types::base::GraphQLValue::resolve","value":"pub fn resolve(&Self, &Self::TypeInfo, Option<&[Selection<, S>]>,\n               &Executor<, , Self::Context, S>) -> ExecutionResult<S>","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Resolves the provided `selection_set` against this [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Resolves the provided `selection_set` against this [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307043,"byte_end":307115,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307120,"byte_end":307123,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ For non-[object][3] types, the `selection_set` will be [`None`] and the value should simply","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307128,"byte_end":307223,"line_start":251,"line_end":251,"column_start":5,"column_end":100}},{"value":"/ be returned.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307228,"byte_end":307244,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307249,"byte_end":307252,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ For [objects][3], all fields in the `selection_set` should be resolved. The default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307257,"byte_end":307344,"line_start":254,"line_end":254,"column_start":5,"column_end":92}},{"value":"/ implementation uses [`GraphQLValue::resolve_field`] to resolve all fields, including those","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307349,"byte_end":307443,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ through a fragment expansion.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307448,"byte_end":307481,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307486,"byte_end":307489,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Since the [GraphQL spec specifies][0] that errors during field processing should result in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307494,"byte_end":307588,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ a null-value, this might return `Ok(Null)` in case of a failure. Errors are recorded","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307593,"byte_end":307681,"line_start":259,"line_end":259,"column_start":5,"column_end":93}},{"value":"/ internally.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307686,"byte_end":307701,"line_start":260,"line_end":260,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307706,"byte_end":307709,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307714,"byte_end":307726,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307731,"byte_end":307734,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics, if `selection_set` is [`None`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307739,"byte_end":307809,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307814,"byte_end":307817,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ [0]: https://spec.graphql.org/June2018/#sec-Errors-and-Non-Nullability","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307822,"byte_end":307896,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":307901,"byte_end":307956,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2470},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":308832,"byte_end":308847,"line_start":294,"line_end":294,"column_start":10,"column_end":25},"name":"DynGraphQLValue","qualname":"::types::base::DynGraphQLValue","value":"dyn GraphQLValue<S, Context = C, TypeInfo = C> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Helper alias for naming [trait objects][1] of [`GraphQLValue`].","sig":null,"attributes":[{"value":"/ Helper alias for naming [trait objects][1] of [`GraphQLValue`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":308682,"byte_end":308749,"line_start":291,"line_end":291,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":308750,"byte_end":308753,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/reference/types/trait-object.html","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":308754,"byte_end":308822,"line_start":293,"line_end":293,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":2474},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312736,"byte_end":312747,"line_start":387,"line_end":387,"column_start":11,"column_end":22},"name":"GraphQLType","qualname":"::types::base::GraphQLType","value":"GraphQLType<S = DefaultScalarValue>: GraphQLValue<S>","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477}],"decl_id":null,"docs":" Primary trait used to expose Rust types in a GraphQL schema.","sig":null,"attributes":[{"value":"/ Primary trait used to expose Rust types in a GraphQL schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":308938,"byte_end":309002,"line_start":297,"line_end":297,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309003,"byte_end":309006,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ All of the convenience macros ultimately expand into an implementation of","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309007,"byte_end":309084,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ this trait for the given type. This can all be done manually.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309085,"byte_end":309150,"line_start":300,"line_end":300,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309151,"byte_end":309154,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309155,"byte_end":309168,"line_start":302,"line_end":302,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309169,"byte_end":309172,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Manually deriving an [object][3] is straightforward, but tedious. This is the equivalent of the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309173,"byte_end":309272,"line_start":304,"line_end":304,"column_start":1,"column_end":100}},{"value":"/ `User` object as shown in the example in the documentation root:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309273,"byte_end":309341,"line_start":305,"line_end":305,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309342,"byte_end":309349,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309350,"byte_end":309386,"line_start":307,"line_end":307,"column_start":1,"column_end":37}},{"value":"/ use juniper::{","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309387,"byte_end":309405,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"/     meta::MetaType, Arguments, Context, DefaultScalarValue, Executor, ExecutionResult,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309406,"byte_end":309496,"line_start":309,"line_end":309,"column_start":1,"column_end":91}},{"value":"/     FieldResult, GraphQLType, GraphQLValue, Registry,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309497,"byte_end":309554,"line_start":310,"line_end":310,"column_start":1,"column_end":58}},{"value":"/ };","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309555,"byte_end":309561,"line_start":311,"line_end":311,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309562,"byte_end":309565,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309566,"byte_end":309586,"line_start":313,"line_end":313,"column_start":1,"column_end":21}},{"value":"/ struct Database { users: HashMap<String, User> }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309587,"byte_end":309639,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/ impl Context for Database {}","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309640,"byte_end":309672,"line_start":315,"line_end":315,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309673,"byte_end":309676,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309677,"byte_end":309697,"line_start":317,"line_end":317,"column_start":1,"column_end":21}},{"value":"/ struct User { id: String, name: String, friend_ids: Vec<String> }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309698,"byte_end":309767,"line_start":318,"line_end":318,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309768,"byte_end":309771,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ impl GraphQLType<DefaultScalarValue> for User {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309772,"byte_end":309823,"line_start":320,"line_end":320,"column_start":1,"column_end":52}},{"value":"/    fn name(_: &()) -> Option<&'static str> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309824,"byte_end":309872,"line_start":321,"line_end":321,"column_start":1,"column_end":49}},{"value":"/        Some(\"User\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309873,"byte_end":309896,"line_start":322,"line_end":322,"column_start":1,"column_end":24}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309897,"byte_end":309905,"line_start":323,"line_end":323,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309906,"byte_end":309909,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/    fn meta<'r>(_: &(), registry: &mut Registry<'r>) -> MetaType<'r>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309910,"byte_end":309981,"line_start":325,"line_end":325,"column_start":1,"column_end":72}},{"value":"/    where DefaultScalarValue: 'r,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":309982,"byte_end":310018,"line_start":326,"line_end":326,"column_start":1,"column_end":37}},{"value":"/    {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310019,"byte_end":310027,"line_start":327,"line_end":327,"column_start":1,"column_end":9}},{"value":"/        // First, we need to define all fields and their types on this type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310028,"byte_end":310107,"line_start":328,"line_end":328,"column_start":1,"column_end":80}},{"value":"/        //","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310108,"byte_end":310121,"line_start":329,"line_end":329,"column_start":1,"column_end":14}},{"value":"/        // If we need arguments, want to implement interfaces, or want to add documentation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310122,"byte_end":310216,"line_start":330,"line_end":330,"column_start":1,"column_end":95}},{"value":"/        // strings, we can do it here.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310217,"byte_end":310258,"line_start":331,"line_end":331,"column_start":1,"column_end":42}},{"value":"/        let fields = &[","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310259,"byte_end":310285,"line_start":332,"line_end":332,"column_start":1,"column_end":27}},{"value":"/            registry.field::<&String>(\"id\", &()),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310286,"byte_end":310338,"line_start":333,"line_end":333,"column_start":1,"column_end":53}},{"value":"/            registry.field::<&String>(\"name\", &()),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310339,"byte_end":310393,"line_start":334,"line_end":334,"column_start":1,"column_end":55}},{"value":"/            registry.field::<Vec<&User>>(\"friends\", &()),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310394,"byte_end":310454,"line_start":335,"line_end":335,"column_start":1,"column_end":61}},{"value":"/        ];","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310455,"byte_end":310468,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/        registry.build_object_type::<User>(&(), fields).into_meta()","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310469,"byte_end":310539,"line_start":337,"line_end":337,"column_start":1,"column_end":71}},{"value":"/    }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310540,"byte_end":310548,"line_start":338,"line_end":338,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310549,"byte_end":310554,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310555,"byte_end":310558,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ impl GraphQLValue<DefaultScalarValue> for User {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310559,"byte_end":310611,"line_start":341,"line_end":341,"column_start":1,"column_end":53}},{"value":"/     type Context = Database;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310612,"byte_end":310644,"line_start":342,"line_end":342,"column_start":1,"column_end":33}},{"value":"/     type TypeInfo = ();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310645,"byte_end":310672,"line_start":343,"line_end":343,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310673,"byte_end":310676,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/     fn type_name(&self, _: &()) -> Option<&'static str> {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310677,"byte_end":310738,"line_start":345,"line_end":345,"column_start":1,"column_end":62}},{"value":"/         <User as GraphQLType>::name(&())","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310739,"byte_end":310783,"line_start":346,"line_end":346,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310784,"byte_end":310793,"line_start":347,"line_end":347,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310794,"byte_end":310797,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/     fn resolve_field(","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310798,"byte_end":310823,"line_start":349,"line_end":349,"column_start":1,"column_end":26}},{"value":"/         &self,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310824,"byte_end":310842,"line_start":350,"line_end":350,"column_start":1,"column_end":19}},{"value":"/         info: &(),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310843,"byte_end":310865,"line_start":351,"line_end":351,"column_start":1,"column_end":23}},{"value":"/         field_name: &str,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310866,"byte_end":310895,"line_start":352,"line_end":352,"column_start":1,"column_end":30}},{"value":"/         args: &Arguments,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310896,"byte_end":310925,"line_start":353,"line_end":353,"column_start":1,"column_end":30}},{"value":"/         executor: &Executor<Database>","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310926,"byte_end":310967,"line_start":354,"line_end":354,"column_start":1,"column_end":42}},{"value":"/     ) -> ExecutionResult","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310968,"byte_end":310996,"line_start":355,"line_end":355,"column_start":1,"column_end":29}},{"value":"/     {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":310997,"byte_end":311006,"line_start":356,"line_end":356,"column_start":1,"column_end":10}},{"value":"/         // Next, we need to match the queried field name. All arms of this match statement","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311007,"byte_end":311101,"line_start":357,"line_end":357,"column_start":1,"column_end":95}},{"value":"/         // return `ExecutionResult`, which makes it hard to statically verify that the type you","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311102,"byte_end":311201,"line_start":358,"line_end":358,"column_start":1,"column_end":100}},{"value":"/         // pass on to `executor.resolve*` actually matches the one that you defined in `meta()`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311202,"byte_end":311301,"line_start":359,"line_end":359,"column_start":1,"column_end":100}},{"value":"/         // above.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311302,"byte_end":311323,"line_start":360,"line_end":360,"column_start":1,"column_end":22}},{"value":"/         let database = executor.context();","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311324,"byte_end":311370,"line_start":361,"line_end":361,"column_start":1,"column_end":47}},{"value":"/         match field_name {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311371,"byte_end":311401,"line_start":362,"line_end":362,"column_start":1,"column_end":31}},{"value":"/             // Because scalars are defined with another `Context` associated type, you must use","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311402,"byte_end":311501,"line_start":363,"line_end":363,"column_start":1,"column_end":100}},{"value":"/             // `resolve_with_ctx` here to make the `executor` perform automatic type conversion","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311502,"byte_end":311601,"line_start":364,"line_end":364,"column_start":1,"column_end":100}},{"value":"/             // of its argument.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311602,"byte_end":311637,"line_start":365,"line_end":365,"column_start":1,"column_end":36}},{"value":"/             \"id\" => executor.resolve_with_ctx(info, &self.id),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311638,"byte_end":311704,"line_start":366,"line_end":366,"column_start":1,"column_end":67}},{"value":"/             \"name\" => executor.resolve_with_ctx(info, &self.name),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311705,"byte_end":311775,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311776,"byte_end":311779,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/             // You pass a vector of `User` objects to `executor.resolve`, and it will determine","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311780,"byte_end":311879,"line_start":369,"line_end":369,"column_start":1,"column_end":100}},{"value":"/             // which fields of the sub-objects to actually resolve based on the query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311880,"byte_end":311970,"line_start":370,"line_end":370,"column_start":1,"column_end":91}},{"value":"/             // The `executor` instance keeps track of its current position in the query.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":311971,"byte_end":312063,"line_start":371,"line_end":371,"column_start":1,"column_end":93}},{"value":"/             \"friends\" => executor.resolve(info,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312064,"byte_end":312115,"line_start":372,"line_end":372,"column_start":1,"column_end":52}},{"value":"/                 &self.friend_ids.iter()","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312116,"byte_end":312159,"line_start":373,"line_end":373,"column_start":1,"column_end":44}},{"value":"/                     .filter_map(|id| database.users.get(id))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312160,"byte_end":312224,"line_start":374,"line_end":374,"column_start":1,"column_end":65}},{"value":"/                     .collect::<Vec<_>>()","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312225,"byte_end":312269,"line_start":375,"line_end":375,"column_start":1,"column_end":45}},{"value":"/             ),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312270,"byte_end":312288,"line_start":376,"line_end":376,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312289,"byte_end":312292,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/             // We can only reach this panic in two cases: either a mismatch between the defined","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312293,"byte_end":312392,"line_start":378,"line_end":378,"column_start":1,"column_end":100}},{"value":"/             // schema in `meta()` above, or a validation failed because of a this library bug.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312393,"byte_end":312491,"line_start":379,"line_end":379,"column_start":1,"column_end":99}},{"value":"/             //","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312492,"byte_end":312510,"line_start":380,"line_end":380,"column_start":1,"column_end":19}},{"value":"/             // In either of those two cases, the only reasonable way out is to panic the thread.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312511,"byte_end":312611,"line_start":381,"line_end":381,"column_start":1,"column_end":101}},{"value":"/             _ => panic!(\"Field {} not found on type User\", field_name),","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312612,"byte_end":312687,"line_start":382,"line_end":382,"column_start":1,"column_end":76}},{"value":"/         }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312688,"byte_end":312701,"line_start":383,"line_end":383,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312702,"byte_end":312711,"line_start":384,"line_end":384,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312712,"byte_end":312717,"line_start":385,"line_end":385,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312718,"byte_end":312725,"line_start":386,"line_end":386,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":313050,"byte_end":313054,"line_start":395,"line_end":395,"column_start":8,"column_end":12},"name":"name","qualname":"::types::base::GraphQLType::name","value":"pub fn name(&Self::TypeInfo) -> Option<&str>","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":" Returns name of this [`GraphQLType`] to expose.","sig":null,"attributes":[{"value":"/ Returns name of this [`GraphQLType`] to expose.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312821,"byte_end":312872,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312877,"byte_end":312880,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This function will be called multiple times during schema construction. It must _not_","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312885,"byte_end":312974,"line_start":393,"line_end":393,"column_start":5,"column_end":94}},{"value":"/ perform any calculation and _always_ return the same value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312979,"byte_end":313042,"line_start":394,"line_end":394,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":313167,"byte_end":313171,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"meta","qualname":"::types::base::GraphQLType::meta","value":"pub fn meta<'r>(&Self::TypeInfo, &mut Registry) -> MetaType where S: 'r","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":" Returns [`MetaType`] representing this [`GraphQLType`].\n","sig":null,"attributes":[{"value":"/ Returns [`MetaType`] representing this [`GraphQLType`].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":313100,"byte_end":313159,"line_start":397,"line_end":397,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2642},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"marker","qualname":"::types::marker","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2661},{"krate":0,"index":2665},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2677},{"krate":0,"index":2681},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2693},{"krate":0,"index":2697},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2709},{"krate":0,"index":2713},{"krate":0,"index":2717},{"krate":0,"index":2721},{"krate":0,"index":2725},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2735},{"krate":0,"index":2740},{"krate":0,"index":2744},{"krate":0,"index":2748},{"krate":0,"index":2752},{"krate":0,"index":2756},{"krate":0,"index":2760}],"decl_id":null,"docs":" Marker traits for GraphQL types.","sig":null,"attributes":[{"value":"/ Marker traits for GraphQL types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":329864,"byte_end":329900,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":329901,"byte_end":329904,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provide specialized types for GraphQL. To ensure that","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":329905,"byte_end":329974,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ only specification compliant construct compile, these marker","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":329975,"byte_end":330039,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/ traits are used. Encountering an error where one of these traits","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330040,"byte_end":330108,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ is involved implies that the construct is not valid in GraphQL.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330109,"byte_end":330176,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2653},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330651,"byte_end":330668,"line_start":20,"line_end":20,"column_start":11,"column_end":28},"name":"GraphQLObjectType","qualname":"::types::marker::GraphQLObjectType","value":"GraphQLObjectType<S: ScalarValue>: GraphQLType<S>","parent":null,"children":[{"krate":0,"index":2655}],"decl_id":null,"docs":" Maker object for GraphQL objects.","sig":null,"attributes":[{"value":"/ Maker object for GraphQL objects.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330239,"byte_end":330276,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330277,"byte_end":330280,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait extends the GraphQLType and is only used to mark","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330281,"byte_end":330344,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ object. During compile this addition information is required to","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330345,"byte_end":330412,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ prevent unwanted structure compiling. If an object requires this","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330413,"byte_end":330481,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ trait instead of the GraphQLType, then it explicitly requires an","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330482,"byte_end":330550,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ GraphQL objects. Other types (scalars, enums, and input objects)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330551,"byte_end":330619,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ are not allowed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330620,"byte_end":330640,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330903,"byte_end":330907,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"mark","qualname":"::types::marker::GraphQLObjectType::mark","value":"pub fn mark()","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" An arbitrary function without meaning.","sig":null,"attributes":[{"value":"/ An arbitrary function without meaning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330707,"byte_end":330749,"line_start":21,"line_end":21,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330754,"byte_end":330757,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ May contain compile timed check logic which ensures that types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330762,"byte_end":330828,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/ are used correctly according to the GraphQL specification.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330833,"byte_end":330895,"line_start":24,"line_end":24,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":2669},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332240,"byte_end":332256,"line_start":75,"line_end":75,"column_start":11,"column_end":27},"name":"GraphQLInterface","qualname":"::types::marker::GraphQLInterface","value":"GraphQLInterface<S: ScalarValue>: GraphQLType<S>","parent":null,"children":[{"krate":0,"index":2671}],"decl_id":null,"docs":" Maker trait for [GraphQL interfaces][1].","sig":null,"attributes":[{"value":"/ Maker trait for [GraphQL interfaces][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331414,"byte_end":331458,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331459,"byte_end":331462,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This trait extends the [`GraphQLType`] and is only used to mark an [interface][1]. During","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331463,"byte_end":331556,"line_start":63,"line_end":63,"column_start":1,"column_end":94}},{"value":"/ compile this addition information is required to prevent unwanted structure compiling. If an","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331557,"byte_end":331653,"line_start":64,"line_end":64,"column_start":1,"column_end":97}},{"value":"/ object requires this trait instead of the [`GraphQLType`], then it explicitly requires","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331654,"byte_end":331744,"line_start":65,"line_end":65,"column_start":1,"column_end":91}},{"value":"/ [GraphQL interfaces][1]. Other types ([scalars][2], [enums][3], [objects][4], [input objects][5]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331745,"byte_end":331845,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"/ and [unions][6]) are not allowed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331846,"byte_end":331883,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331884,"byte_end":331887,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331888,"byte_end":331946,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Scalars","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331947,"byte_end":332002,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Enums","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332003,"byte_end":332056,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [4]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332057,"byte_end":332112,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ [5]: https://spec.graphql.org/June2018/#sec-Input-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332113,"byte_end":332174,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/ [6]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332175,"byte_end":332229,"line_start":74,"line_end":74,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332552,"byte_end":332556,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"mark","qualname":"::types::marker::GraphQLInterface::mark","value":"pub fn mark()","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" An arbitrary function without meaning.","sig":null,"attributes":[{"value":"/ An arbitrary function without meaning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332295,"byte_end":332337,"line_start":76,"line_end":76,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332342,"byte_end":332345,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ May contain compile timed check logic which ensures that types are used correctly according","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332350,"byte_end":332445,"line_start":78,"line_end":78,"column_start":5,"column_end":100}},{"value":"/ to the [GraphQL specification][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332450,"byte_end":332488,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332493,"byte_end":332496,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [1]: https://spec.graphql.org/June2018/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332501,"byte_end":332544,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2685},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333875,"byte_end":333887,"line_start":132,"line_end":132,"column_start":11,"column_end":23},"name":"GraphQLUnion","qualname":"::types::marker::GraphQLUnion","value":"GraphQLUnion<S: ScalarValue>: GraphQLType<S>","parent":null,"children":[{"krate":0,"index":2687}],"decl_id":null,"docs":" Maker trait for [GraphQL unions][1].","sig":null,"attributes":[{"value":"/ Maker trait for [GraphQL unions][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333057,"byte_end":333097,"line_start":118,"line_end":118,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333098,"byte_end":333101,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This trait extends the [`GraphQLType`] and is only used to mark an [union][1]. During compile","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333102,"byte_end":333199,"line_start":120,"line_end":120,"column_start":1,"column_end":98}},{"value":"/ this addition information is required to prevent unwanted structure compiling. If an object","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333200,"byte_end":333295,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ requires this trait instead of the [`GraphQLType`], then it explicitly requires","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333296,"byte_end":333379,"line_start":122,"line_end":122,"column_start":1,"column_end":84}},{"value":"/ [GraphQL unions][1]. Other types ([scalars][2], [enums][3], [objects][4], [input objects][5] and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333380,"byte_end":333480,"line_start":123,"line_end":123,"column_start":1,"column_end":101}},{"value":"/ [interfaces][6]) are not allowed.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333481,"byte_end":333518,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333519,"byte_end":333522,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Unions","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333523,"byte_end":333577,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Scalars","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333578,"byte_end":333633,"line_start":127,"line_end":127,"column_start":1,"column_end":56}},{"value":"/ [3]: https://spec.graphql.org/June2018/#sec-Enums","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333634,"byte_end":333687,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/ [4]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333688,"byte_end":333743,"line_start":129,"line_end":129,"column_start":1,"column_end":56}},{"value":"/ [5]: https://spec.graphql.org/June2018/#sec-Input-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333744,"byte_end":333805,"line_start":130,"line_end":130,"column_start":1,"column_end":62}},{"value":"/ [6]: https://spec.graphql.org/June2018/#sec-Interfaces","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333806,"byte_end":333864,"line_start":131,"line_end":131,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334183,"byte_end":334187,"line_start":139,"line_end":139,"column_start":8,"column_end":12},"name":"mark","qualname":"::types::marker::GraphQLUnion::mark","value":"pub fn mark()","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":" An arbitrary function without meaning.","sig":null,"attributes":[{"value":"/ An arbitrary function without meaning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333926,"byte_end":333968,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333973,"byte_end":333976,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ May contain compile timed check logic which ensures that types are used correctly according","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333981,"byte_end":334076,"line_start":135,"line_end":135,"column_start":5,"column_end":100}},{"value":"/ to the [GraphQL specification][1].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334081,"byte_end":334119,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334124,"byte_end":334127,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [1]: https://spec.graphql.org/June2018/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334132,"byte_end":334175,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2701},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335041,"byte_end":335053,"line_start":182,"line_end":182,"column_start":11,"column_end":23},"name":"IsOutputType","qualname":"::types::marker::IsOutputType","value":"IsOutputType<S: ScalarValue>","parent":null,"children":[{"krate":0,"index":2703}],"decl_id":null,"docs":" Marker trait for types which can be used as output types.","sig":null,"attributes":[{"value":"/ Marker trait for types which can be used as output types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334664,"byte_end":334725,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334726,"byte_end":334729,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ The GraphQL specification differentiates between input and output","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334730,"byte_end":334799,"line_start":177,"line_end":177,"column_start":1,"column_end":70}},{"value":"/ types. Each type which can be used as an output type should","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334800,"byte_end":334863,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/ implement this trait. The specification defines enum, scalar,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334864,"byte_end":334929,"line_start":179,"line_end":179,"column_start":1,"column_end":66}},{"value":"/ object, union, and interface as output types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334930,"byte_end":334979,"line_start":180,"line_end":180,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335293,"byte_end":335297,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"mark","qualname":"::types::marker::IsOutputType::mark","value":"pub fn mark()","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":" An arbitrary function without meaning.","sig":null,"attributes":[{"value":"/ An arbitrary function without meaning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335097,"byte_end":335139,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335144,"byte_end":335147,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ May contain compile timed check logic which ensures that types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335152,"byte_end":335218,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/ are used correctly according to the GraphQL specification.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335223,"byte_end":335285,"line_start":186,"line_end":186,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":2732},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336584,"byte_end":336595,"line_start":264,"line_end":264,"column_start":11,"column_end":22},"name":"IsInputType","qualname":"::types::marker::IsInputType","value":"IsInputType<S: ScalarValue>: GraphQLType<S>","parent":null,"children":[{"krate":0,"index":2734}],"decl_id":null,"docs":" Marker trait for types which can be used as input types.","sig":null,"attributes":[{"value":"/ Marker trait for types which can be used as input types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336276,"byte_end":336336,"line_start":258,"line_end":258,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336337,"byte_end":336340,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ The GraphQL specification differentiates between input and output","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336341,"byte_end":336410,"line_start":260,"line_end":260,"column_start":1,"column_end":70}},{"value":"/ types. Each type which can be used as an input type should","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336411,"byte_end":336473,"line_start":261,"line_end":261,"column_start":1,"column_end":63}},{"value":"/ implement this trait. The specification defines enum, scalar, and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336474,"byte_end":336543,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/ input object input types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336544,"byte_end":336573,"line_start":263,"line_end":263,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336830,"byte_end":336834,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"mark","qualname":"::types::marker::IsInputType::mark","value":"pub fn mark()","parent":{"krate":0,"index":2732},"children":[],"decl_id":null,"docs":" An arbitrary function without meaning.","sig":null,"attributes":[{"value":"/ An arbitrary function without meaning.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336634,"byte_end":336676,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336681,"byte_end":336684,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ May contain compile timed check logic which ensures that types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336689,"byte_end":336755,"line_start":267,"line_end":267,"column_start":5,"column_end":71}},{"value":"/ are used correctly according to the GraphQL specification.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336760,"byte_end":336822,"line_start":268,"line_end":268,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7406},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338292,"byte_end":338296,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"Name","qualname":"::types::name::Name","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338330,"byte_end":338338,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Name>::is_valid","value":"pub fn is_valid(&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7427},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338690,"byte_end":338704,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"NameParseError","qualname":"::types::name::NameParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7447},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341030,"byte_end":341042,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"name":"ImplicitNull","qualname":"::types::nullable::Nullable::ImplicitNull","value":"Nullable::ImplicitNull","parent":{"krate":0,"index":7445},"children":[],"decl_id":null,"docs":" No value\n","sig":null,"attributes":[{"value":"/ No value","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341013,"byte_end":341025,"line_start":33,"line_end":33,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7449},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341098,"byte_end":341110,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"name":"ExplicitNull","qualname":"::types::nullable::Nullable::ExplicitNull","value":"Nullable::ExplicitNull","parent":{"krate":0,"index":7445},"children":[],"decl_id":null,"docs":" No value, explicitly specified to be null\n","sig":null,"attributes":[{"value":"/ No value, explicitly specified to be null","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341048,"byte_end":341093,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7451},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341139,"byte_end":341143,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Some","qualname":"::types::nullable::Nullable::Some","value":"Nullable::Some(T)","parent":{"krate":0,"index":7445},"children":[],"decl_id":null,"docs":" Some value `T`\n","sig":null,"attributes":[{"value":"/ Some value `T`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341116,"byte_end":341134,"line_start":37,"line_end":37,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":7445},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340995,"byte_end":341003,"line_start":32,"line_end":32,"column_start":10,"column_end":18},"name":"Nullable","qualname":"::types::nullable::Nullable","value":"pub enum Nullable<T> { ImplicitNull, ExplicitNull, Some(T), }","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7449},{"krate":0,"index":7451}],"decl_id":null,"docs":" `Nullable` can be used in situations where you need to distinguish between an implicitly and\n explicitly null input value.","sig":null,"attributes":[{"value":"/ `Nullable` can be used in situations where you need to distinguish between an implicitly and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340181,"byte_end":340277,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ explicitly null input value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340278,"byte_end":340310,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340311,"byte_end":340314,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The GraphQL spec states that these two field calls are similar, but are not identical:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340315,"byte_end":340405,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340406,"byte_end":340409,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```graphql","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340410,"byte_end":340424,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/ {","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340425,"byte_end":340430,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/   field(arg: null)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340431,"byte_end":340453,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340454,"byte_end":340465,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340466,"byte_end":340471,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340472,"byte_end":340479,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340480,"byte_end":340483,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The first has explicitly provided null to the argument “arg”, while the second has implicitly","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340484,"byte_end":340585,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ not provided a value to the argument “arg”. These two forms may be interpreted differently. For","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340586,"byte_end":340689,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ example, a mutation representing deleting a field vs not altering a field, respectively.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340690,"byte_end":340782,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340783,"byte_end":340786,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In cases where you do not need to be able to distinguish between the two types of null, you","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340787,"byte_end":340882,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/ should simply use `Option<T>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":340883,"byte_end":340917,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341361,"byte_end":341377,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"is_explicit_null","qualname":"<Nullable<T>>::is_explicit_null","value":"pub fn is_explicit_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the nullable is a `ExplicitNull` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the nullable is a `ExplicitNull` value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341274,"byte_end":341335,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341340,"byte_end":341349,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341536,"byte_end":341552,"line_start":56,"line_end":56,"column_start":12,"column_end":28},"name":"is_implicit_null","qualname":"<Nullable<T>>::is_implicit_null","value":"pub fn is_implicit_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the nullable is a `ImplicitNull` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the nullable is a `ImplicitNull` value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341449,"byte_end":341510,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341515,"byte_end":341524,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341703,"byte_end":341710,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_some","qualname":"<Nullable<T>>::is_some","value":"pub fn is_some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the nullable is a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the nullable is a `Some` value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341624,"byte_end":341677,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341682,"byte_end":341691,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341860,"byte_end":341867,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Nullable<T>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the nullable is not a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the nullable is not a `Some` value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341777,"byte_end":341834,"line_start":66,"line_end":66,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341839,"byte_end":341848,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342020,"byte_end":342026,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Nullable<T>>::as_mut","value":"pub fn as_mut(&mut Self) -> Nullable<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut Nullable<T>` to `Nullable<&mut T>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut Nullable<T>` to `Nullable<&mut T>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341935,"byte_end":341994,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341999,"byte_end":342008,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342512,"byte_end":342518,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"expect","qualname":"<Nullable<T>>::expect","value":"pub fn expect(Self, &str) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the contained `Some` value, consuming the `self` value.","sig":null,"attributes":[{"value":"/ Returns the contained `Some` value, consuming the `self` value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342275,"byte_end":342342,"line_start":82,"line_end":82,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342347,"byte_end":342350,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342355,"byte_end":342367,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342372,"byte_end":342375,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is not a `Some` with a custom panic message provided by `msg`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342380,"byte_end":342466,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342471,"byte_end":342480,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"track_caller","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342485,"byte_end":342500,"line_start":88,"line_end":88,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342673,"byte_end":342682,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"unwrap_or","qualname":"<Nullable<T>>::unwrap_or","value":"pub fn unwrap_or(Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the contained `Some` value or a provided default.\n","sig":null,"attributes":[{"value":"/ Returns the contained `Some` value or a provided default.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342586,"byte_end":342647,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342652,"byte_end":342661,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342853,"byte_end":342867,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"unwrap_or_else","qualname":"<Nullable<T>>::unwrap_or_else","value":"pub fn unwrap_or_else<F: FnOnce() -> T>(Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the contained `Some` value or computes it from a closure.\n","sig":null,"attributes":[{"value":"/ Returns the contained `Some` value or computes it from a closure.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342758,"byte_end":342827,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342832,"byte_end":342841,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343066,"byte_end":343069,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"map","qualname":"<Nullable<T>>::map","value":"pub fn map<U, F: FnOnce(T) -> U>(Self, F) -> Nullable<U>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Nullable<T>` to `Nullable<U>` by applying a function to a contained value.\n","sig":null,"attributes":[{"value":"/ Maps a `Nullable<T>` to `Nullable<U>` by applying a function to a contained value.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":342954,"byte_end":343040,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343045,"byte_end":343054,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343461,"byte_end":343467,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"map_or","qualname":"<Nullable<T>>::map_or","value":"pub fn map_or<U, F: FnOnce(T) -> U>(Self, U, F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Applies a function to the contained value (if any), or returns the provided default (if\n not).\n","sig":null,"attributes":[{"value":"/ Applies a function to the contained value (if any), or returns the provided default (if","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343330,"byte_end":343421,"line_start":115,"line_end":115,"column_start":5,"column_end":96}},{"value":"/ not).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343426,"byte_end":343435,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343440,"byte_end":343449,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343684,"byte_end":343695,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"map_or_else","qualname":"<Nullable<T>>::map_or_else","value":"pub fn map_or_else<U, D: FnOnce() -> U, F: FnOnce(T) -> U>(Self, D, F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Applies a function to the contained value (if any), or computes a default (if not).\n","sig":null,"attributes":[{"value":"/ Applies a function to the contained value (if any), or computes a default (if not).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343571,"byte_end":343658,"line_start":122,"line_end":122,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343663,"byte_end":343672,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343992,"byte_end":343997,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"ok_or","qualname":"<Nullable<T>>::ok_or","value":"pub fn ok_or<E>(Self, E) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the `Nullable<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and\n `ImplicitNull` or `ExplicitNull` to `Err(err)`.\n","sig":null,"attributes":[{"value":"/ Transforms the `Nullable<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343822,"byte_end":343910,"line_start":128,"line_end":128,"column_start":5,"column_end":93}},{"value":"/ `ImplicitNull` or `ExplicitNull` to `Err(err)`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343915,"byte_end":343966,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":343971,"byte_end":343980,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344247,"byte_end":344257,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"ok_or_else","qualname":"<Nullable<T>>::ok_or_else","value":"pub fn ok_or_else<E, F: FnOnce() -> E>(Self, F) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the `Nullable<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and\n `ImplicitNull` or `ExplicitNull` to `Err(err())`.\n","sig":null,"attributes":[{"value":"/ Transforms the `Nullable<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344075,"byte_end":344163,"line_start":135,"line_end":135,"column_start":5,"column_end":93}},{"value":"/ `ImplicitNull` or `ExplicitNull` to `Err(err())`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344168,"byte_end":344221,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344226,"byte_end":344235,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344455,"byte_end":344457,"line_start":144,"line_end":144,"column_start":12,"column_end":14},"name":"or","qualname":"<Nullable<T>>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the nullable if it contains a value, otherwise returns `b`.\n","sig":null,"attributes":[{"value":"/ Returns the nullable if it contains a value, otherwise returns `b`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344358,"byte_end":344429,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344434,"byte_end":344443,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344706,"byte_end":344713,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"or_else","qualname":"<Nullable<T>>::or_else","value":"pub fn or_else<F: FnOnce() -> Nullable<T>>(Self, F) -> Nullable<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the nullable if it contains a value, otherwise calls `f` and\n returns the result.\n","sig":null,"attributes":[{"value":"/ Returns the nullable if it contains a value, otherwise calls `f` and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344580,"byte_end":344652,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ returns the result.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344657,"byte_end":344680,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344685,"byte_end":344694,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345083,"byte_end":345090,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"replace","qualname":"<Nullable<T>>::replace","value":"pub fn replace(&mut Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replaces the actual value in the nullable by the value given in parameter, returning the\n old value if present, leaving a `Some` in its place without deinitializing either one.\n","sig":null,"attributes":[{"value":"/ Replaces the actual value in the nullable by the value given in parameter, returning the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344870,"byte_end":344962,"line_start":161,"line_end":161,"column_start":5,"column_end":97}},{"value":"/ old value if present, leaving a `Some` in its place without deinitializing either one.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":344967,"byte_end":345057,"line_start":162,"line_end":162,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345062,"byte_end":345071,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345243,"byte_end":345247,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"some","qualname":"<Nullable<T>>::some","value":"pub fn some(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Nullable<T>` to `Option<T>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Nullable<T>` to `Option<T>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345184,"byte_end":345231,"line_start":168,"line_end":168,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345547,"byte_end":345555,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"explicit","qualname":"<Nullable<T>>::explicit","value":"pub fn explicit(Self) -> Option<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Nullable<T>` to `Option<Option<T>>`, mapping `Some(v)` to `Some(Some(v))`,\n `ExplicitNull` to `Some(None)`, and `ImplicitNull` to `None`.\n","sig":null,"attributes":[{"value":"/ Converts from `Nullable<T>` to `Option<Option<T>>`, mapping `Some(v)` to `Some(Some(v))`,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345372,"byte_end":345465,"line_start":176,"line_end":176,"column_start":5,"column_end":98}},{"value":"/ `ExplicitNull` to `Some(None)`, and `ImplicitNull` to `None`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345470,"byte_end":345535,"line_start":177,"line_end":177,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345885,"byte_end":345891,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"copied","qualname":"<Nullable<&'_ T>>::copied","value":"pub fn copied(Self) -> Nullable<T>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Nullable<&T>` to a `Nullable<T>` by copying the contents of the nullable.\n","sig":null,"attributes":[{"value":"/ Maps a `Nullable<&T>` to a `Nullable<T>` by copying the contents of the nullable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345788,"byte_end":345873,"line_start":188,"line_end":188,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346087,"byte_end":346093,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"copied","qualname":"<Nullable<&'_ mut T>>::copied","value":"pub fn copied(Self) -> Nullable<T>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Nullable<&mut T>` to a `Nullable<T>` by copying the contents of the nullable.\n","sig":null,"attributes":[{"value":"/ Maps a `Nullable<&mut T>` to a `Nullable<T>` by copying the contents of the nullable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345986,"byte_end":346075,"line_start":195,"line_end":195,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346286,"byte_end":346292,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"cloned","qualname":"<Nullable<&'_ T>>::cloned","value":"pub fn cloned(Self) -> Nullable<T>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Nullable<&T>` to a `Nullable<T>` by cloning the contents of the nullable.\n","sig":null,"attributes":[{"value":"/ Maps a `Nullable<&T>` to a `Nullable<T>` by cloning the contents of the nullable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346189,"byte_end":346274,"line_start":202,"line_end":202,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346496,"byte_end":346502,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"cloned","qualname":"<Nullable<&'_ mut T>>::cloned","value":"pub fn cloned(Self) -> Nullable<T>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Nullable<&mut T>` to a `Nullable<T>` by cloning the contents of the nullable.\n","sig":null,"attributes":[{"value":"/ Maps a `Nullable<&mut T>` to a `Nullable<T>` by cloning the contents of the nullable.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346395,"byte_end":346484,"line_start":209,"line_end":209,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":7483},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357040,"byte_end":357042,"line_start":24,"line_end":24,"column_start":12,"column_end":14},"name":"ID","qualname":"::types::scalars::ID","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ID as defined by the GraphQL specification","sig":null,"attributes":[{"value":"/ An ID as defined by the GraphQL specification","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":356832,"byte_end":356881,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":356882,"byte_end":356885,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Represented as a string, but can be converted _to_ from an integer as well.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":356886,"byte_end":356965,"line_start":22,"line_end":22,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357224,"byte_end":357227,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<ID>::new","value":"pub fn new<S: Into<String>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new ID from anything implementing `Into<String>`\n","sig":null,"attributes":[{"value":"/ Construct a new ID from anything implementing `Into<String>`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357148,"byte_end":357212,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7695},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366207,"byte_end":366220,"line_start":354,"line_end":354,"column_start":12,"column_end":25},"name":"EmptyMutation","qualname":"::types::scalars::EmptyMutation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utility type to define read-only schemas","sig":null,"attributes":[{"value":"/ Utility type to define read-only schemas","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366019,"byte_end":366063,"line_start":349,"line_end":349,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366064,"byte_end":366067,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ If you instantiate `RootNode` with this as the mutation, no mutation will be","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366068,"byte_end":366148,"line_start":351,"line_end":351,"column_start":1,"column_end":81}},{"value":"/ generated for the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366149,"byte_end":366178,"line_start":352,"line_end":352,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366529,"byte_end":366532,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<EmptyMutation<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new empty mutation\n","sig":null,"attributes":[{"value":"/ Construct a new empty mutation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366469,"byte_end":366503,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366508,"byte_end":366517,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3239},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367610,"byte_end":367627,"line_start":414,"line_end":414,"column_start":12,"column_end":29},"name":"EmptySubscription","qualname":"::types::scalars::EmptySubscription","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utillity type to define read-only schemas","sig":null,"attributes":[{"value":"/ Utillity type to define read-only schemas","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367429,"byte_end":367474,"line_start":410,"line_end":410,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367475,"byte_end":367478,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ If you instantiate `RootNode` with this as the subscription,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367479,"byte_end":367543,"line_start":412,"line_end":412,"column_start":1,"column_end":65}},{"value":"/ no subscriptions will be generated for the schema.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367544,"byte_end":367598,"line_start":413,"line_end":413,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3245},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367952,"byte_end":367955,"line_start":422,"line_end":422,"column_start":12,"column_end":15},"name":"new","qualname":"<EmptySubscription<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new empty subscription\n","sig":null,"attributes":[{"value":"/ Construct a new empty subscription","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367888,"byte_end":367926,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367931,"byte_end":367940,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7710},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372716,"byte_end":372731,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"ExecutionOutput","qualname":"::types::subscriptions::ExecutionOutput","value":"ExecutionOutput { data, errors }","parent":null,"children":[{"krate":0,"index":7712},{"krate":0,"index":7723}],"decl_id":null,"docs":" Represents the result of executing a GraphQL operation (after parsing and validating has been\n done).\n","sig":null,"attributes":[{"value":"/ Represents the result of executing a GraphQL operation (after parsing and validating has been","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372568,"byte_end":372665,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ done).","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372666,"byte_end":372676,"line_start":13,"line_end":13,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":7712},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372770,"byte_end":372774,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"data","qualname":"::types::subscriptions::ExecutionOutput::data","value":"value::Value<S>","parent":{"krate":0,"index":7710},"children":[],"decl_id":null,"docs":" The output data.\n","sig":null,"attributes":[{"value":"/ The output data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372741,"byte_end":372761,"line_start":16,"line_end":16,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7723},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372994,"byte_end":373000,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"errors","qualname":"::types::subscriptions::ExecutionOutput::errors","value":"std::vec::Vec<executor::ExecutionError<S>>","parent":{"krate":0,"index":7710},"children":[],"decl_id":null,"docs":" The errors that occurred. Note that the presence of errors does not mean there is no data.\n The output can have both data and errors.\n","sig":null,"attributes":[{"value":"/ The errors that occurred. Note that the presence of errors does not mean there is no data.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372791,"byte_end":372885,"line_start":19,"line_end":19,"column_start":5,"column_end":99}},{"value":"/ The output can have both data and errors.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372890,"byte_end":372935,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"serde(bound(serialize = \"S: ScalarValue\"))","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":372940,"byte_end":372985,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373129,"byte_end":373138,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"from_data","qualname":"<ExecutionOutput<S>>::from_data","value":"pub fn from_data(Value<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates execution output from data, with no errors.\n","sig":null,"attributes":[{"value":"/ Creates execution output from data, with no errors.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373062,"byte_end":373117,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":3332},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374142,"byte_end":374165,"line_start":54,"line_end":54,"column_start":11,"column_end":34},"name":"SubscriptionCoordinator","qualname":"::types::subscriptions::SubscriptionCoordinator","value":"SubscriptionCoordinator<'a, CtxT, S>","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338}],"decl_id":null,"docs":" Global subscription coordinator trait.","sig":null,"attributes":[{"value":"/ Global subscription coordinator trait.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373245,"byte_end":373287,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373288,"byte_end":373291,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ With regular queries we could get away with not having some in-between","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373292,"byte_end":373366,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ layer, but for subscriptions it is needed, otherwise the integration crates","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373367,"byte_end":373446,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ can become really messy and cumbersome to maintain. Subscriptions are also","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373447,"byte_end":373525,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ quite a bit more stability sensitive than regular queries, they provide a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373526,"byte_end":373603,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ great vector for DOS attacks and can bring down a server easily if not","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373604,"byte_end":373678,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ handled right.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373679,"byte_end":373697,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373698,"byte_end":373701,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This trait implementation might include the following features:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373702,"byte_end":373769,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/  - contains the schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373770,"byte_end":373796,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/  - keeps track of subscription connections","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373797,"byte_end":373843,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/  - handles subscription start, maintains a global subscription id","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373844,"byte_end":373913,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/  - max subscription limits / concurrency limits","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373914,"byte_end":373965,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/  - subscription de-duplication","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373966,"byte_end":374000,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/  - reconnection on connection loss / buffering / re-synchronisation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374001,"byte_end":374072,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374073,"byte_end":374076,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374077,"byte_end":374080,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ `'a` is how long spawned connections live for.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374081,"byte_end":374131,"line_start":53,"line_end":53,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3336},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374309,"byte_end":374319,"line_start":60,"line_end":60,"column_start":10,"column_end":20},"name":"Connection","qualname":"::types::subscriptions::SubscriptionCoordinator::Connection","value":"type Connection: SubscriptionConnection<S>;","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":" Type of [`SubscriptionConnection`]s this [`SubscriptionCoordinator`]\n returns\n","sig":null,"attributes":[{"value":"/ Type of [`SubscriptionConnection`]s this [`SubscriptionCoordinator`]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374211,"byte_end":374283,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ returns","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374288,"byte_end":374299,"line_start":59,"line_end":59,"column_start":5,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":3337},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374429,"byte_end":374434,"line_start":63,"line_end":63,"column_start":10,"column_end":15},"name":"Error","qualname":"::types::subscriptions::SubscriptionCoordinator::Error","value":"type Error;","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":" Type of error while trying to spawn [`SubscriptionConnection`]\n","sig":null,"attributes":[{"value":"/ Type of error while trying to spawn [`SubscriptionConnection`]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374353,"byte_end":374419,"line_start":62,"line_end":62,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374520,"byte_end":374529,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::types::subscriptions::SubscriptionCoordinator::subscribe","value":"pub fn subscribe(&'a Self, &'a GraphQLRequest<S>, &'a CtxT) -> BoxFuture","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":" Return [`SubscriptionConnection`] based on given [`GraphQLRequest`]\n","sig":null,"attributes":[{"value":"/ Return [`SubscriptionConnection`] based on given [`GraphQLRequest`]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374441,"byte_end":374512,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":3339},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375137,"byte_end":375159,"line_start":85,"line_end":85,"column_start":11,"column_end":33},"name":"SubscriptionConnection","qualname":"::types::subscriptions::SubscriptionConnection","value":"SubscriptionConnection<S>: futures::Stream<Item = ExecutionOutput<S>>","parent":null,"children":[],"decl_id":null,"docs":" Single subscription connection.","sig":null,"attributes":[{"value":"/ Single subscription connection.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374670,"byte_end":374705,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374706,"byte_end":374709,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This trait implementation might:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374710,"byte_end":374746,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ - hold schema + context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374747,"byte_end":374774,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ - process subscribe, unsubscribe","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374775,"byte_end":374811,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ - unregister from coordinator upon close/shutdown","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374812,"byte_end":374865,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/ - connection-local + global de-duplication, talk to coordinator","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374866,"byte_end":374933,"line_start":79,"line_end":79,"column_start":1,"column_end":68}},{"value":"/ - concurrency limits","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374934,"byte_end":374958,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/ - machinery with coordinator to allow reconnection","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":374959,"byte_end":375013,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375014,"byte_end":375017,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It can be treated as [`futures::Stream`] yielding [`GraphQLResponse`]s in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375018,"byte_end":375095,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ server integration crates.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375096,"byte_end":375126,"line_start":84,"line_end":84,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":3341},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375781,"byte_end":375805,"line_start":98,"line_end":98,"column_start":11,"column_end":35},"name":"GraphQLSubscriptionValue","qualname":"::types::subscriptions::GraphQLSubscriptionValue","value":"GraphQLSubscriptionValue<S = DefaultScalarValue>: GraphQLValue<S> + Sync","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3351},{"krate":0,"index":3360}],"decl_id":null,"docs":" Extension of [`GraphQLValue`] trait with asynchronous [subscription][1] execution logic.\n It should be used with [`GraphQLValue`] in order to implement [subscription][1] resolvers on\n [GraphQL objects][2].","sig":null,"attributes":[{"value":"/ Extension of [`GraphQLValue`] trait with asynchronous [subscription][1] execution logic.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375211,"byte_end":375303,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/ It should be used with [`GraphQLValue`] in order to implement [subscription][1] resolvers on","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375304,"byte_end":375400,"line_start":88,"line_end":88,"column_start":1,"column_end":97}},{"value":"/ [GraphQL objects][2].","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375401,"byte_end":375426,"line_start":89,"line_end":89,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375427,"byte_end":375430,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [Subscription][1]-related convenience macros expand into an implementation of this trait and","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375431,"byte_end":375527,"line_start":91,"line_end":91,"column_start":1,"column_end":97}},{"value":"/ [`GraphQLValue`] for the given type.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375528,"byte_end":375568,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375569,"byte_end":375572,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ See trait methods for more detailed explanation on how this trait works.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375573,"byte_end":375649,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375650,"byte_end":375653,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Subscription","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375654,"byte_end":375714,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/ [2]: https://spec.graphql.org/June2018/#sec-Objects","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375715,"byte_end":375770,"line_start":97,"line_end":97,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376422,"byte_end":376441,"line_start":115,"line_end":115,"column_start":8,"column_end":27},"name":"resolve_into_stream","qualname":"::types::subscriptions::GraphQLSubscriptionValue::resolve_into_stream","value":"pub fn resolve_into_stream<'s, 'i, 'ref_e, 'e, 'res,\n                           'f>(&'s Self, &'i Self::TypeInfo, &'ref_e Executor)\n-> BoxFuture where 'e:'res, 'i:'res, 's:'f, 'ref_e:'f, 'res:'f","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" Resolves into `Value<ValuesStream>`.","sig":null,"attributes":[{"value":"/ Resolves into `Value<ValuesStream>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375951,"byte_end":375991,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375996,"byte_end":375999,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ## Default implementation","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376004,"byte_end":376033,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376038,"byte_end":376041,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ In order to resolve selection set on object types, default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376046,"byte_end":376108,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/ implementation calls `resolve_field_into_stream` every time a field","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376113,"byte_end":376184,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ needs to be resolved and `resolve_into_type_stream` every time a","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376189,"byte_end":376257,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ fragment needs to be resolved.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376262,"byte_end":376296,"line_start":111,"line_end":111,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376301,"byte_end":376304,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For non-object types, the selection set will be `None` and default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376309,"byte_end":376379,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/ implementation will panic.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":376384,"byte_end":376414,"line_start":114,"line_end":114,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377483,"byte_end":377508,"line_start":145,"line_end":145,"column_start":8,"column_end":33},"name":"resolve_field_into_stream","qualname":"::types::subscriptions::GraphQLSubscriptionValue::resolve_field_into_stream","value":"pub fn resolve_field_into_stream<'s, 'i, 'ft, 'args, 'e, 'ref_e, 'res,\n                                 'f>(&'s Self, &'i Self::TypeInfo, &'ft str,\n                                     Arguments, &'ref_e Executor) -> BoxFuture\nwhere 's:'f, 'i:'res, 'ft:'f, 'args:'f, 'ref_e:'f, 'res:'f, 'e:'res","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" This method is called by Self's `resolve_into_stream` default\n implementation every time any field is found in selection set.","sig":null,"attributes":[{"value":"/ This method is called by Self's `resolve_into_stream` default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377066,"byte_end":377131,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ implementation every time any field is found in selection set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377136,"byte_end":377202,"line_start":137,"line_end":137,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377207,"byte_end":377210,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ It replaces `GraphQLValue::resolve_field`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377215,"byte_end":377261,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/ Unlike `resolve_field`, which resolves each field into a single","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377266,"byte_end":377333,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/ `Value<S>`, this method resolves each field into","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377338,"byte_end":377390,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/ `Value<ValuesStream<S>>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377395,"byte_end":377424,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377429,"byte_end":377432,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":377437,"byte_end":377475,"line_start":144,"line_end":144,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378670,"byte_end":378694,"line_start":174,"line_end":174,"column_start":8,"column_end":32},"name":"resolve_into_type_stream","qualname":"::types::subscriptions::GraphQLSubscriptionValue::resolve_into_type_stream","value":"pub fn resolve_into_type_stream<'s, 'i, 'tn, 'e, 'ref_e, 'res,\n                                'f>(&'s Self, &'i Self::TypeInfo, &'tn str,\n                                    &'ref_e Executor) -> BoxFuture where\n'i:'res, 'e:'res, 's:'f, 'tn:'f, 'ref_e:'f, 'res:'f","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" This method is called by Self's `resolve_into_stream` default\n implementation every time any fragment is found in selection set.","sig":null,"attributes":[{"value":"/ This method is called by Self's `resolve_into_stream` default","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378241,"byte_end":378306,"line_start":165,"line_end":165,"column_start":5,"column_end":70}},{"value":"/ implementation every time any fragment is found in selection set.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378311,"byte_end":378380,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378385,"byte_end":378388,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ It replaces `GraphQLValue::resolve_into_type`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378393,"byte_end":378443,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ Unlike `resolve_into_type`, which resolves each fragment","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378448,"byte_end":378508,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ a single `Value<S>`, this method resolves each fragment into","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378513,"byte_end":378577,"line_start":170,"line_end":170,"column_start":5,"column_end":69}},{"value":"/ `Value<ValuesStream<S>>`.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378582,"byte_end":378611,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378616,"byte_end":378619,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation panics.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":378624,"byte_end":378662,"line_start":173,"line_end":173,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":3369},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379995,"byte_end":380018,"line_start":207,"line_end":207,"column_start":11,"column_end":34},"name":"GraphQLSubscriptionType","qualname":"::types::subscriptions::GraphQLSubscriptionType","value":"GraphQLSubscriptionType<S = DefaultScalarValue>: GraphQLSubscriptionValue<S> + GraphQLType<S>","parent":null,"children":[],"decl_id":null,"docs":" Extension of [`GraphQLType`] trait with asynchronous [subscription][1] execution logic.","sig":null,"attributes":[{"value":"/ Extension of [`GraphQLType`] trait with asynchronous [subscription][1] execution logic.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379658,"byte_end":379749,"line_start":201,"line_end":201,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379750,"byte_end":379753,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It's automatically implemented for [`GraphQLSubscriptionValue`] and [`GraphQLType`]","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379754,"byte_end":379841,"line_start":203,"line_end":203,"column_start":1,"column_end":88}},{"value":"/ implementers, so doesn't require manual or code-generated implementation.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379842,"byte_end":379919,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379920,"byte_end":379923,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ [1]: https://spec.graphql.org/June2018/#sec-Subscription","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":379924,"byte_end":379984,"line_start":206,"line_end":206,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3438},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/util.rs","byte_start":391549,"byte_end":391562,"line_start":7,"line_end":7,"column_start":8,"column_end":21},"name":"to_camel_case","qualname":"::util::to_camel_case","value":"pub fn to_camel_case(&str) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Convert string to camel case.","sig":null,"attributes":[{"value":"/ Convert string to camel case.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/util.rs","byte_start":391429,"byte_end":391462,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/util.rs","byte_start":391463,"byte_end":391466,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Note: needs to be public because several macros use it.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/util.rs","byte_start":391467,"byte_end":391526,"line_start":5,"line_end":5,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3439},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"validation","qualname":"::validation","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3513},{"krate":0,"index":3594},{"krate":0,"index":3701},{"krate":0,"index":4944},{"krate":0,"index":5026},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5186},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5201}],"decl_id":null,"docs":" Query validation related methods and data structures\n","sig":null,"attributes":[{"value":"/ Query validation related methods and data structures","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/mod.rs","byte_start":392912,"byte_end":392968,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":7725},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":393757,"byte_end":393766,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"RuleError","qualname":"::validation::context::RuleError","value":"RuleError {  }","parent":null,"children":[{"krate":0,"index":7726},{"krate":0,"index":7727}],"decl_id":null,"docs":" Query validation error\n","sig":null,"attributes":[{"value":"/ Query validation error","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":393670,"byte_end":393696,"line_start":12,"line_end":12,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3472},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":393855,"byte_end":393871,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"name":"ValidatorContext","qualname":"::validation::context::ValidatorContext","value":"ValidatorContext { schema }","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3475},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":393901,"byte_end":393907,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"schema","qualname":"::validation::context::ValidatorContext::schema","value":"&'a schema::model::SchemaType<'a, S>","parent":{"krate":0,"index":3472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394311,"byte_end":394314,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<RuleError>::new","value":"pub fn new(&str, &[SourcePosition]) -> RuleError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394557,"byte_end":394564,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"message","qualname":"<RuleError>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Access the message for a validation error\n","sig":null,"attributes":[{"value":"/ Access the message for a validation error","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394500,"byte_end":394545,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394828,"byte_end":394837,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"locations","qualname":"<RuleError>::locations","value":"pub fn locations(&Self) -> &[SourcePosition]","parent":null,"children":[],"decl_id":null,"docs":" Access the positions of the validation error","sig":null,"attributes":[{"value":"/ Access the positions of the validation error","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394615,"byte_end":394663,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394668,"byte_end":394671,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ All validation errors contain at least one source position, but some","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394676,"byte_end":394748,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ validators supply extra context through multiple positions.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394753,"byte_end":394816,"line_start":48,"line_end":48,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":395446,"byte_end":395449,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<ValidatorContext>::new","value":"pub fn new(&'a SchemaType<, S>, &Document) -> ValidatorContext","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":396142,"byte_end":396155,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"append_errors","qualname":"<ValidatorContext>::append_errors","value":"pub fn append_errors(&mut Self, Vec<RuleError>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":396275,"byte_end":396287,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"report_error","qualname":"<ValidatorContext>::report_error","value":"pub fn report_error(&mut Self, &str, &[SourcePosition])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":396444,"byte_end":396455,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"into_errors","qualname":"<ValidatorContext>::into_errors","value":"pub fn into_errors(Self) -> Vec<RuleError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":396571,"byte_end":396587,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"with_pushed_type","qualname":"<ValidatorContext>::with_pushed_type","value":"pub fn with_pushed_type<F, R>(&mut Self, Option<&Type>, F) -> R where\nF: FnOnce(&mut ValidatorContext) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":397110,"byte_end":397133,"line_start":129,"line_end":129,"column_start":12,"column_end":35},"name":"with_pushed_parent_type","qualname":"<ValidatorContext>::with_pushed_parent_type","value":"pub fn with_pushed_parent_type<F, R>(&mut Self, F) -> R where\nF: FnOnce(&mut ValidatorContext) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":397439,"byte_end":397461,"line_start":142,"line_end":142,"column_start":12,"column_end":34},"name":"with_pushed_input_type","qualname":"<ValidatorContext>::with_pushed_input_type","value":"pub fn with_pushed_input_type<F, R>(&mut Self, Option<&Type>, F) -> R where\nF: FnOnce(&mut ValidatorContext) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":398014,"byte_end":398026,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"current_type","qualname":"<ValidatorContext>::current_type","value":"pub fn current_type(&Self) -> Option<&'a MetaType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":398153,"byte_end":398173,"line_start":169,"line_end":169,"column_start":12,"column_end":32},"name":"current_type_literal","qualname":"<ValidatorContext>::current_type_literal","value":"pub fn current_type_literal(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":398364,"byte_end":398375,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"parent_type","qualname":"<ValidatorContext>::parent_type","value":"pub fn parent_type(&Self) -> Option<&'a MetaType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":398509,"byte_end":398535,"line_start":182,"line_end":182,"column_start":12,"column_end":38},"name":"current_input_type_literal","qualname":"<ValidatorContext>::current_input_type_literal","value":"pub fn current_input_type_literal(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":398732,"byte_end":398749,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"is_known_fragment","qualname":"<ValidatorContext>::is_known_fragment","value":"pub fn is_known_fragment(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3569},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/input_value.rs","byte_start":399330,"byte_end":399351,"line_start":23,"line_end":23,"column_start":8,"column_end":29},"name":"validate_input_values","qualname":"::validation::input_value::validate_input_values","value":"pub fn validate_input_values<S>(&Variables<S>, &Spanning<Operation<, S>>,\n                                &SchemaType<, S>) -> Vec<RuleError> where\nS: ScalarValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3640},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409474,"byte_end":409489,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"MultiVisitorNil","qualname":"::validation::multi_visitor::MultiVisitorNil","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409541,"byte_end":409545,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"with","qualname":"<MultiVisitorNil>::with","value":"pub fn with<V>(Self, V) -> MultiVisitorCons<V, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3645},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409673,"byte_end":409689,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"MultiVisitorCons","qualname":"::validation::multi_visitor::MultiVisitorCons","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409751,"byte_end":409755,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"with","qualname":"<MultiVisitorCons<A, B>>::with","value":"pub fn with<V>(Self, V) -> MultiVisitorCons<V, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4941},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/mod.rs","byte_start":418333,"byte_end":418348,"line_start":34,"line_end":34,"column_start":8,"column_end":23},"name":"visit_all_rules","qualname":"::validation::rules::visit_all_rules","value":"pub fn visit_all_rules<'a, S: Debug>(&mut ValidatorContext, &'a Document<, S>)\nwhere S: ScalarValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4986},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668409,"byte_end":668416,"line_start":12,"line_end":12,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::validation::traits::Visitor","value":"Visitor<'a, S>","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668459,"byte_end":668473,"line_start":16,"line_end":16,"column_start":8,"column_end":22},"name":"enter_document","qualname":"::validation::traits::Visitor::enter_document","value":"pub fn enter_document(&mut Self, &mut ValidatorContext, &'a Document<, S>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4990},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668548,"byte_end":668561,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"exit_document","qualname":"::validation::traits::Visitor::exit_document","value":"pub fn exit_document(&mut Self, &mut ValidatorContext, &'a Document<, S>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4991},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668637,"byte_end":668663,"line_start":19,"line_end":19,"column_start":8,"column_end":34},"name":"enter_operation_definition","qualname":"::validation::traits::Visitor::enter_operation_definition","value":"pub fn enter_operation_definition(&mut Self, &mut ValidatorContext,\n                                  &'a Spanning<Operation<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4992},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668785,"byte_end":668810,"line_start":25,"line_end":25,"column_start":8,"column_end":33},"name":"exit_operation_definition","qualname":"::validation::traits::Visitor::exit_operation_definition","value":"pub fn exit_operation_definition(&mut Self, &mut ValidatorContext,\n                                 &'a Spanning<Operation<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4993},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":668933,"byte_end":668958,"line_start":32,"line_end":32,"column_start":8,"column_end":33},"name":"enter_fragment_definition","qualname":"::validation::traits::Visitor::enter_fragment_definition","value":"pub fn enter_fragment_definition(&mut Self, &mut ValidatorContext,\n                                 &'a Spanning<Fragment<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4994},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669079,"byte_end":669103,"line_start":38,"line_end":38,"column_start":8,"column_end":32},"name":"exit_fragment_definition","qualname":"::validation::traits::Visitor::exit_fragment_definition","value":"pub fn exit_fragment_definition(&mut Self, &mut ValidatorContext,\n                                &'a Spanning<Fragment<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4995},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669225,"byte_end":669250,"line_start":45,"line_end":45,"column_start":8,"column_end":33},"name":"enter_variable_definition","qualname":"::validation::traits::Visitor::enter_variable_definition","value":"pub fn enter_variable_definition(&mut Self, &mut ValidatorContext,\n                                 &'a (Spanning<&'a str>,\n                                      VariableDefinition<, S>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4996},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669392,"byte_end":669416,"line_start":51,"line_end":51,"column_start":8,"column_end":32},"name":"exit_variable_definition","qualname":"::validation::traits::Visitor::exit_variable_definition","value":"pub fn exit_variable_definition(&mut Self, &mut ValidatorContext,\n                                &'a (Spanning<&'a str>,\n                                     VariableDefinition<, S>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4997},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669559,"byte_end":669574,"line_start":58,"line_end":58,"column_start":8,"column_end":23},"name":"enter_directive","qualname":"::validation::traits::Visitor::enter_directive","value":"pub fn enter_directive(&mut Self, &mut ValidatorContext,\n                       &'a Spanning<Directive<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4998},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669660,"byte_end":669674,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"exit_directive","qualname":"::validation::traits::Visitor::exit_directive","value":"pub fn exit_directive(&mut Self, &mut ValidatorContext,\n                      &'a Spanning<Directive<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4999},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669761,"byte_end":669775,"line_start":61,"line_end":61,"column_start":8,"column_end":22},"name":"enter_argument","qualname":"::validation::traits::Visitor::enter_argument","value":"pub fn enter_argument(&mut Self, &mut ValidatorContext,\n                      &'a (Spanning<&'a str>, Spanning<InputValue<S>>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5000},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":669919,"byte_end":669932,"line_start":67,"line_end":67,"column_start":8,"column_end":21},"name":"exit_argument","qualname":"::validation::traits::Visitor::exit_argument","value":"pub fn exit_argument(&mut Self, &mut ValidatorContext,\n                     &'a (Spanning<&'a str>, Spanning<InputValue<S>>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5001},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670077,"byte_end":670096,"line_start":74,"line_end":74,"column_start":8,"column_end":27},"name":"enter_selection_set","qualname":"::validation::traits::Visitor::enter_selection_set","value":"pub fn enter_selection_set(&mut Self, &mut ValidatorContext,\n                           &'a [Selection<, S>])","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5002},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670174,"byte_end":670192,"line_start":75,"line_end":75,"column_start":8,"column_end":26},"name":"exit_selection_set","qualname":"::validation::traits::Visitor::exit_selection_set","value":"pub fn exit_selection_set(&mut Self, &mut ValidatorContext,\n                          &'a [Selection<, S>])","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670271,"byte_end":670282,"line_start":77,"line_end":77,"column_start":8,"column_end":19},"name":"enter_field","qualname":"::validation::traits::Visitor::enter_field","value":"pub fn enter_field(&mut Self, &mut ValidatorContext, &'a Spanning<Field<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670364,"byte_end":670374,"line_start":78,"line_end":78,"column_start":8,"column_end":18},"name":"exit_field","qualname":"::validation::traits::Visitor::exit_field","value":"pub fn exit_field(&mut Self, &mut ValidatorContext, &'a Spanning<Field<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5005},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670457,"byte_end":670478,"line_start":80,"line_end":80,"column_start":8,"column_end":29},"name":"enter_fragment_spread","qualname":"::validation::traits::Visitor::enter_fragment_spread","value":"pub fn enter_fragment_spread(&mut Self, &mut ValidatorContext,\n                             &'a Spanning<FragmentSpread<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670605,"byte_end":670625,"line_start":86,"line_end":86,"column_start":8,"column_end":28},"name":"exit_fragment_spread","qualname":"::validation::traits::Visitor::exit_fragment_spread","value":"pub fn exit_fragment_spread(&mut Self, &mut ValidatorContext,\n                            &'a Spanning<FragmentSpread<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670753,"byte_end":670774,"line_start":93,"line_end":93,"column_start":8,"column_end":29},"name":"enter_inline_fragment","qualname":"::validation::traits::Visitor::enter_inline_fragment","value":"pub fn enter_inline_fragment(&mut Self, &mut ValidatorContext,\n                             &'a Spanning<InlineFragment<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5008},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":670901,"byte_end":670921,"line_start":99,"line_end":99,"column_start":8,"column_end":28},"name":"exit_inline_fragment","qualname":"::validation::traits::Visitor::exit_inline_fragment","value":"pub fn exit_inline_fragment(&mut Self, &mut ValidatorContext,\n                            &'a Spanning<InlineFragment<, S>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5009},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671049,"byte_end":671065,"line_start":106,"line_end":106,"column_start":8,"column_end":24},"name":"enter_null_value","qualname":"::validation::traits::Visitor::enter_null_value","value":"pub fn enter_null_value(&mut Self, &mut ValidatorContext, Spanning<()>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671137,"byte_end":671152,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"exit_null_value","qualname":"::validation::traits::Visitor::exit_null_value","value":"pub fn exit_null_value(&mut Self, &mut ValidatorContext, Spanning<()>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5011},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671225,"byte_end":671243,"line_start":109,"line_end":109,"column_start":8,"column_end":26},"name":"enter_scalar_value","qualname":"::validation::traits::Visitor::enter_scalar_value","value":"pub fn enter_scalar_value(&mut Self, &mut ValidatorContext, Spanning<&'a S>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671318,"byte_end":671335,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"exit_scalar_value","qualname":"::validation::traits::Visitor::exit_scalar_value","value":"pub fn exit_scalar_value(&mut Self, &mut ValidatorContext, Spanning<&'a S>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671411,"byte_end":671427,"line_start":112,"line_end":112,"column_start":8,"column_end":24},"name":"enter_enum_value","qualname":"::validation::traits::Visitor::enter_enum_value","value":"pub fn enter_enum_value(&mut Self, &mut ValidatorContext,\n                        Spanning<&'a String>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671507,"byte_end":671522,"line_start":113,"line_end":113,"column_start":8,"column_end":23},"name":"exit_enum_value","qualname":"::validation::traits::Visitor::exit_enum_value","value":"pub fn exit_enum_value(&mut Self, &mut ValidatorContext, Spanning<&'a String>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5015},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671603,"byte_end":671623,"line_start":115,"line_end":115,"column_start":8,"column_end":28},"name":"enter_variable_value","qualname":"::validation::traits::Visitor::enter_variable_value","value":"pub fn enter_variable_value(&mut Self, &mut ValidatorContext,\n                            Spanning<&'a String>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5016},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671703,"byte_end":671722,"line_start":116,"line_end":116,"column_start":8,"column_end":27},"name":"exit_variable_value","qualname":"::validation::traits::Visitor::exit_variable_value","value":"pub fn exit_variable_value(&mut Self, &mut ValidatorContext,\n                           Spanning<&'a String>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671803,"byte_end":671819,"line_start":118,"line_end":118,"column_start":8,"column_end":24},"name":"enter_list_value","qualname":"::validation::traits::Visitor::enter_list_value","value":"pub fn enter_list_value(&mut Self, &mut ValidatorContext,\n                        Spanning<&'a Vec<Spanning<InputValue<S>>>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5018},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":671957,"byte_end":671972,"line_start":124,"line_end":124,"column_start":8,"column_end":23},"name":"exit_list_value","qualname":"::validation::traits::Visitor::exit_list_value","value":"pub fn exit_list_value(&mut Self, &mut ValidatorContext,\n                       Spanning<&'a Vec<Spanning<InputValue<S>>>>)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5019},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":672111,"byte_end":672129,"line_start":131,"line_end":131,"column_start":8,"column_end":26},"name":"enter_object_value","qualname":"::validation::traits::Visitor::enter_object_value","value":"pub fn enter_object_value(&mut Self, &mut ValidatorContext, SpannedObject)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":672209,"byte_end":672226,"line_start":132,"line_end":132,"column_start":8,"column_end":25},"name":"exit_object_value","qualname":"::validation::traits::Visitor::exit_object_value","value":"pub fn exit_object_value(&mut Self, &mut ValidatorContext, SpannedObject)","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":672307,"byte_end":672325,"line_start":134,"line_end":134,"column_start":8,"column_end":26},"name":"enter_object_field","qualname":"::validation::traits::Visitor::enter_object_field","value":"pub fn enter_object_field(&mut Self, &mut ValidatorContext,\n                          &'a (Spanning<String>, Spanning<InputValue<S>>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5022},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/traits.rs","byte_start":672468,"byte_end":672485,"line_start":140,"line_end":140,"column_start":8,"column_end":25},"name":"exit_object_field","qualname":"::validation::traits::Visitor::exit_object_field","value":"pub fn exit_object_field(&mut Self, &mut ValidatorContext,\n                         &'a (Spanning<String>, Spanning<InputValue<S>>))","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5093},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/visitor.rs","byte_start":673134,"byte_end":673139,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"visit","qualname":"::validation::visitor::visit","value":"pub fn visit<'a, A, B,\n             S>(&mut MultiVisitorCons<A, B>, &mut ValidatorContext,\n                &'a Document<, S>) where S: ScalarValue,\nMultiVisitorCons<A, B>: Visitor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5204},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::http","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","parent":null,"children":[{"krate":0,"index":5205},{"krate":0,"index":5207},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5241},{"krate":0,"index":5244},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5262},{"krate":0,"index":5265},{"krate":0,"index":7941},{"krate":0,"index":7944},{"krate":0,"index":7992},{"krate":0,"index":7995},{"krate":0,"index":8002},{"krate":0,"index":8004},{"krate":0,"index":8008},{"krate":0,"index":5268},{"krate":0,"index":5288},{"krate":0,"index":8013},{"krate":0,"index":8018},{"krate":0,"index":5299},{"krate":0,"index":5305},{"krate":0,"index":8040},{"krate":0,"index":8022},{"krate":0,"index":8025},{"krate":0,"index":8034},{"krate":0,"index":8036},{"krate":0,"index":5310},{"krate":0,"index":5317},{"krate":0,"index":8056},{"krate":0,"index":8048},{"krate":0,"index":5335}],"decl_id":null,"docs":" Utilities for building HTTP endpoints in a library-agnostic manner\n","sig":null,"attributes":[{"value":"/ Utilities for building HTTP endpoints in a library-agnostic manner","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":684778,"byte_end":684848,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":5205},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphiql","qualname":"::http::graphiql","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","parent":null,"children":[{"krate":0,"index":5206}],"decl_id":null,"docs":" Utility module to generate a GraphiQL interface\n","sig":null,"attributes":[{"value":"/ Utility module to generate a GraphiQL interface","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710492,"byte_end":710543,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":5206},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710853,"byte_end":710868,"line_start":11,"line_end":11,"column_start":8,"column_end":23},"name":"graphiql_source","qualname":"::http::graphiql::graphiql_source","value":"pub fn graphiql_source(&str, Option<&str>) -> String","parent":null,"children":[],"decl_id":null,"docs":" Generate the HTML source to show a GraphiQL interface","sig":null,"attributes":[{"value":"/ Generate the HTML source to show a GraphiQL interface","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710545,"byte_end":710602,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710603,"byte_end":710606,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The subscriptions endpoint URL can optionally be provided. For example:","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710607,"byte_end":710682,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710683,"byte_end":710686,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710687,"byte_end":710694,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # use juniper::http::graphiql::graphiql_source;","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710695,"byte_end":710746,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ let graphiql = graphiql_source(\"/graphql\", Some(\"ws://localhost:8080/subscriptions\"));","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710747,"byte_end":710837,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/graphiql.rs","byte_start":710838,"byte_end":710845,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5207},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/playground.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"playground","qualname":"::http::playground","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/playground.rs","parent":null,"children":[{"krate":0,"index":5208}],"decl_id":null,"docs":" Utility module to generate a GraphQL Playground interface\n","sig":null,"attributes":[{"value":"/ Utility module to generate a GraphQL Playground interface","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/playground.rs","byte_start":714557,"byte_end":714618,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":5208},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/playground.rs","byte_start":714815,"byte_end":714832,"line_start":5,"line_end":5,"column_start":8,"column_end":25},"name":"playground_source","qualname":"::http::playground::playground_source","value":"pub fn playground_source(&str, Option<&str>) -> String","parent":null,"children":[],"decl_id":null,"docs":" Generate the HTML source to show a GraphQL Playground interface\n","sig":null,"attributes":[{"value":"/ Generate the HTML source to show a GraphQL Playground interface","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/playground.rs","byte_start":714620,"byte_end":714687,"line_start":3,"line_end":3,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7941},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685659,"byte_end":685673,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"GraphQLRequest","qualname":"::http::GraphQLRequest","value":"GraphQLRequest {  }","parent":null,"children":[{"krate":0,"index":7943},{"krate":0,"index":8011},{"krate":0,"index":8012}],"decl_id":null,"docs":" The expected structure of the decoded JSON document for either POST or GET requests.","sig":null,"attributes":[{"value":"/ The expected structure of the decoded JSON document for either POST or GET requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685221,"byte_end":685309,"line_start":20,"line_end":20,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685310,"byte_end":685313,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ For POST, you can use Serde to deserialize the incoming JSON data directly","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685314,"byte_end":685392,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ into this struct - it derives Deserialize for exactly this reason.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685393,"byte_end":685463,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685464,"byte_end":685467,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For GET, you will need to parse the query string and extract \"query\",","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685468,"byte_end":685541,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ \"operationName\", and \"variables\" manually.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685542,"byte_end":685588,"line_start":26,"line_end":26,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686074,"byte_end":686088,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"operation_name","qualname":"<GraphQLRequest<S>>::operation_name","value":"pub fn operation_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `operation_name` associated with this request.\n","sig":null,"attributes":[{"value":"/ Returns the `operation_name` associated with this request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686000,"byte_end":686062,"line_start":43,"line_end":43,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686593,"byte_end":686596,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphQLRequest<S>>::new","value":"pub fn new(String, Option<String>, Option<InputValue<S>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new GraphQL request from parts\n","sig":null,"attributes":[{"value":"/ Construct a new GraphQL request from parts","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686535,"byte_end":686581,"line_start":61,"line_end":61,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687053,"byte_end":687065,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"execute_sync","qualname":"<GraphQLRequest<S>>::execute_sync","value":"pub fn execute_sync<'a, QueryT, MutationT,\n                    SubscriptionT>(&'a Self,\n                                   &'a RootNode<, QueryT, MutationT,\n                                                SubscriptionT, S>,\n                                   &QueryT::Context) -> GraphQLResponse where\nS: ScalarValue, QueryT: GraphQLType<S>, MutationT: GraphQLType<S, Context =\nQueryT::Context>, SubscriptionT: GraphQLType<S, Context = QueryT::Context>","parent":null,"children":[],"decl_id":null,"docs":" Execute a GraphQL request synchronously using the specified schema and context","sig":null,"attributes":[{"value":"/ Execute a GraphQL request synchronously using the specified schema and context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686835,"byte_end":686917,"line_start":74,"line_end":74,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686922,"byte_end":686925,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This is a simple wrapper around the `execute_sync` function exposed at the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":686930,"byte_end":687008,"line_start":76,"line_end":76,"column_start":5,"column_end":83}},{"value":"/ top level of this crate.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687013,"byte_end":687041,"line_start":77,"line_end":77,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687867,"byte_end":687874,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"name":"execute","qualname":"<GraphQLRequest<S>>::execute","value":"pub async fn execute<'a, QueryT, MutationT,\n                     SubscriptionT>(&'a Self, &'a RootNode,\n                                    &'a QueryT::Context) -> /*impl Trait*/\nwhere QueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync,\nQueryT::Context: Sync, MutationT: GraphQLTypeAsync<S, Context =\nQueryT::Context>, MutationT::TypeInfo: Sync, SubscriptionT: GraphQLType<S,\nContext = QueryT::Context> + Sync, SubscriptionT::TypeInfo: Sync,\nS: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Execute a GraphQL request using the specified schema and context","sig":null,"attributes":[{"value":"/ Execute a GraphQL request using the specified schema and context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687662,"byte_end":687730,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687735,"byte_end":687738,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is a simple wrapper around the `execute` function exposed at the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687743,"byte_end":687816,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ top level of this crate.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":687821,"byte_end":687849,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":5288},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":688872,"byte_end":688891,"line_start":128,"line_end":128,"column_start":14,"column_end":33},"name":"resolve_into_stream","qualname":"::http::resolve_into_stream","value":"pub async fn resolve_into_stream<'req, 'rn, 'ctx, 'a, QueryT, MutationT,\n                                 SubscriptionT,\n                                 S>(&'req GraphQLRequest<S>, &'rn RootNode,\n                                    &'ctx QueryT::Context) -> /*impl Trait*/\nwhere 'req:'a, 'rn:'a, 'ctx:'a, QueryT: GraphQLTypeAsync<S>,\nQueryT::TypeInfo: Sync, QueryT::Context: Sync, MutationT: GraphQLTypeAsync<S,\nContext = QueryT::Context>, MutationT::TypeInfo: Sync,\nSubscriptionT: GraphQLSubscriptionType<S, Context = QueryT::Context>,\nSubscriptionT::TypeInfo: Sync, S: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve a GraphQL subscription into `Value<ValuesStream<S>` using the\n specified schema and context.\n This is a wrapper around the `resolve_into_stream` function exposed at the top\n level of this crate.\n","sig":null,"attributes":[{"value":"/ Resolve a GraphQL subscription into `Value<ValuesStream<S>` using the","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":688643,"byte_end":688716,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ specified schema and context.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":688717,"byte_end":688750,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/ This is a wrapper around the `resolve_into_stream` function exposed at the top","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":688751,"byte_end":688833,"line_start":126,"line_end":126,"column_start":1,"column_end":83}},{"value":"/ level of this crate.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":688834,"byte_end":688858,"line_start":127,"line_end":127,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":8013},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689998,"byte_end":690013,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"GraphQLResponse","qualname":"::http::GraphQLResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple wrapper around the result from executing a GraphQL query","sig":null,"attributes":[{"value":"/ Simple wrapper around the result from executing a GraphQL query","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689701,"byte_end":689768,"line_start":152,"line_end":152,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689769,"byte_end":689772,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This struct implements Serialize, so you can simply serialize this","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689773,"byte_end":689843,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ to JSON and send it over the wire. Use the `is_ok` method to determine","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689844,"byte_end":689918,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ whether to send a 200 or 400 HTTP status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":689919,"byte_end":689969,"line_start":156,"line_end":156,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690251,"byte_end":690262,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"from_result","qualname":"<GraphQLResponse>::from_result","value":"pub fn from_result(Result<(Value<S>, Vec<ExecutionError<S>>), GraphQLError>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `GraphQLResponse` using the given result\n","sig":null,"attributes":[{"value":"/ Constructs new `GraphQLResponse` using the given result","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690180,"byte_end":690239,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690446,"byte_end":690451,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"error","qualname":"<GraphQLResponse>::error","value":"pub fn error(FieldError<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an error response outside of the normal execution flow\n","sig":null,"attributes":[{"value":"/ Constructs an error response outside of the normal execution flow","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690365,"byte_end":690434,"line_start":171,"line_end":171,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690770,"byte_end":690775,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<GraphQLResponse>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was the request successful or not?","sig":null,"attributes":[{"value":"/ Was the request successful or not?","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690580,"byte_end":690618,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690623,"byte_end":690626,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that there still might be errors in the response even though it's","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690631,"byte_end":690705,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ considered OK. This is by design in GraphQL.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690710,"byte_end":690758,"line_start":179,"line_end":179,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8042},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692086,"byte_end":692092,"line_start":229,"line_end":229,"column_start":5,"column_end":11},"name":"Single","qualname":"::http::GraphQLBatchRequest::Single","value":"GraphQLBatchRequest::Single(GraphQLRequest<S>)","parent":{"krate":0,"index":8040},"children":[],"decl_id":null,"docs":" A single operation request.\n","sig":null,"attributes":[{"value":"/ A single operation request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692050,"byte_end":692081,"line_start":228,"line_end":228,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8045},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692301,"byte_end":692306,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Batch","qualname":"::http::GraphQLBatchRequest::Batch","value":"GraphQLBatchRequest::Batch(Vec<GraphQLRequest<S>>)","parent":{"krate":0,"index":8040},"children":[],"decl_id":null,"docs":" A batch operation request.","sig":null,"attributes":[{"value":"/ A batch operation request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692118,"byte_end":692148,"line_start":231,"line_end":231,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692153,"byte_end":692156,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Empty batch is considered as invalid value, so cannot be deserialized.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692161,"byte_end":692235,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"serde(deserialize_with = \"deserialize_non_empty_vec\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692240,"byte_end":692296,"line_start":234,"line_end":234,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":8040},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":691974,"byte_end":691993,"line_start":224,"line_end":224,"column_start":10,"column_end":29},"name":"GraphQLBatchRequest","qualname":"::http::GraphQLBatchRequest","value":"pub enum GraphQLBatchRequest<S = DefaultScalarValue> where S: ScalarValue {\n    Single(GraphQLRequest<S>),\n    Batch(Vec<GraphQLRequest<S>>),\n}","parent":null,"children":[{"krate":0,"index":8042},{"krate":0,"index":8045}],"decl_id":null,"docs":" Simple wrapper around GraphQLRequest to allow the handling of Batch requests.\n","sig":null,"attributes":[{"value":"/ Simple wrapper around GraphQLRequest to allow the handling of Batch requests.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":691771,"byte_end":691852,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"serde(untagged)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":691894,"byte_end":691912,"line_start":222,"line_end":222,"column_start":1,"column_end":19}},{"value":"serde(bound = \"InputValue<S>: Deserialize<'de>\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":691913,"byte_end":691964,"line_start":223,"line_end":223,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692946,"byte_end":692958,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"execute_sync","qualname":"<GraphQLBatchRequest<S>>::execute_sync","value":"pub fn execute_sync<'a, QueryT, MutationT,\n                    SubscriptionT>(&'a Self,\n                                   &'a RootNode<, QueryT, MutationT,\n                                                SubscriptionT, S>,\n                                   &QueryT::Context) -> GraphQLBatchResponse\nwhere QueryT: GraphQLType<S>, MutationT: GraphQLType<S, Context =\nQueryT::Context>, SubscriptionT: GraphQLType<S, Context = QueryT::Context>","parent":null,"children":[],"decl_id":null,"docs":" Execute a GraphQL batch request synchronously using the specified schema and context","sig":null,"attributes":[{"value":"/ Execute a GraphQL batch request synchronously using the specified schema and context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692743,"byte_end":692831,"line_start":257,"line_end":257,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692836,"byte_end":692839,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This is a simple wrapper around the `execute_sync` function exposed in GraphQLRequest.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692844,"byte_end":692934,"line_start":259,"line_end":259,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":693915,"byte_end":693922,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"name":"execute","qualname":"<GraphQLBatchRequest<S>>::execute","value":"pub async fn execute<'a, QueryT, MutationT,\n                     SubscriptionT>(&'a Self, &'a RootNode,\n                                    &'a QueryT::Context) -> /*impl Trait*/\nwhere QueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync,\nQueryT::Context: Sync, MutationT: GraphQLTypeAsync<S, Context =\nQueryT::Context>, MutationT::TypeInfo: Sync,\nSubscriptionT: GraphQLSubscriptionType<S, Context = QueryT::Context>,\nSubscriptionT::TypeInfo: Sync, S: Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Executes a GraphQL request using the specified schema and context","sig":null,"attributes":[{"value":"/ Executes a GraphQL request using the specified schema and context","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":693723,"byte_end":693792,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":693797,"byte_end":693800,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This is a simple wrapper around the `execute` function exposed in","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":693805,"byte_end":693874,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ GraphQLRequest","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":693879,"byte_end":693897,"line_start":285,"line_end":285,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":5333},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695020,"byte_end":695035,"line_start":317,"line_end":317,"column_start":12,"column_end":27},"name":"operation_names","qualname":"<GraphQLBatchRequest<S>>::operation_names","value":"pub fn operation_names(&Self) -> Vec<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" The operation names of the request.\n","sig":null,"attributes":[{"value":"/ The operation names of the request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":694969,"byte_end":695008,"line_start":316,"line_end":316,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8059},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695729,"byte_end":695735,"line_start":337,"line_end":337,"column_start":5,"column_end":11},"name":"Single","qualname":"::http::GraphQLBatchResponse::Single","value":"GraphQLBatchResponse::Single(GraphQLResponse)","parent":{"krate":0,"index":8056},"children":[],"decl_id":null,"docs":" Result of a single operation in a GraphQL request.\n","sig":null,"attributes":[{"value":"/ Result of a single operation in a GraphQL request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695670,"byte_end":695724,"line_start":336,"line_end":336,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8062},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695823,"byte_end":695828,"line_start":339,"line_end":339,"column_start":5,"column_end":10},"name":"Batch","qualname":"::http::GraphQLBatchResponse::Batch","value":"GraphQLBatchResponse::Batch(Vec<GraphQLResponse>)","parent":{"krate":0,"index":8056},"children":[],"decl_id":null,"docs":" Result of a batch operation in a GraphQL request.\n","sig":null,"attributes":[{"value":"/ Result of a batch operation in a GraphQL request.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695765,"byte_end":695818,"line_start":338,"line_end":338,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":8056},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695589,"byte_end":695609,"line_start":332,"line_end":332,"column_start":10,"column_end":30},"name":"GraphQLBatchResponse","qualname":"::http::GraphQLBatchResponse","value":"pub enum GraphQLBatchResponse<'a, S = DefaultScalarValue> where S: ScalarValue\n         {\n    Single(GraphQLResponse),\n    Batch(Vec<GraphQLResponse>),\n}","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8062}],"decl_id":null,"docs":" Simple wrapper around the result (GraphQLResponse) from executing a GraphQLBatchRequest","sig":null,"attributes":[{"value":"/ Simple wrapper around the result (GraphQLResponse) from executing a GraphQLBatchRequest","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695255,"byte_end":695346,"line_start":325,"line_end":325,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695347,"byte_end":695350,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ This struct implements Serialize, so you can simply serialize this","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695351,"byte_end":695421,"line_start":327,"line_end":327,"column_start":1,"column_end":71}},{"value":"/ to JSON and send it over the wire. use the `is_ok` to determine","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695422,"byte_end":695489,"line_start":328,"line_end":328,"column_start":1,"column_end":68}},{"value":"/ wheter to send a 200 or 400 HTTP status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695490,"byte_end":695539,"line_start":329,"line_end":329,"column_start":1,"column_end":50}},{"value":"serde(untagged)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695561,"byte_end":695579,"line_start":331,"line_end":331,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":696092,"byte_end":696097,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<GraphQLBatchResponse>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if all the GraphQLResponse in this operation are ok,\n you can use it to determine wheter to send a 200 or 400 HTTP status code.\n","sig":null,"attributes":[{"value":"/ Returns if all the GraphQLResponse in this operation are ok,","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695934,"byte_end":695998,"line_start":346,"line_end":346,"column_start":5,"column_end":69}},{"value":"/ you can use it to determine wheter to send a 200 or 400 HTTP status code.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":696003,"byte_end":696080,"line_start":347,"line_end":347,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":5339},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"integrations","qualname":"::integrations","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","parent":null,"children":[{"krate":0,"index":5340},{"krate":0,"index":5482},{"krate":0,"index":5506},{"krate":0,"index":5521},{"krate":0,"index":5542}],"decl_id":null,"docs":" Provides GraphQLType implementations for some external types\n","sig":null,"attributes":[{"value":"/ Provides GraphQLType implementations for some external types","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734306,"byte_end":734370,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":5340},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde","qualname":"::integrations::serde","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","parent":null,"children":[{"krate":0,"index":5341},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5365},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5372},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5384},{"krate":0,"index":5387},{"krate":0,"index":5390},{"krate":0,"index":8065},{"krate":0,"index":8067},{"krate":0,"index":5393},{"krate":0,"index":5397},{"krate":0,"index":5401},{"krate":0,"index":5458},{"krate":0,"index":5464},{"krate":0,"index":5467},{"krate":0,"index":5470},{"krate":0,"index":5474},{"krate":0,"index":5478}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5482},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chrono","qualname":"::integrations::chrono","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","parent":null,"children":[{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5489},{"krate":0,"index":5492},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":8077},{"krate":0,"index":8084},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8093},{"krate":0,"index":8100},{"krate":0,"index":8103},{"krate":0,"index":8107},{"krate":0,"index":8111},{"krate":0,"index":8118},{"krate":0,"index":8120},{"krate":0,"index":8122},{"krate":0,"index":8127},{"krate":0,"index":8134},{"krate":0,"index":8137},{"krate":0,"index":8141},{"krate":0,"index":8145},{"krate":0,"index":8152},{"krate":0,"index":8154},{"krate":0,"index":8156},{"krate":0,"index":8161},{"krate":0,"index":8168},{"krate":0,"index":8171},{"krate":0,"index":8175},{"krate":0,"index":8179},{"krate":0,"index":8186},{"krate":0,"index":8188},{"krate":0,"index":8190},{"krate":0,"index":8195},{"krate":0,"index":8202},{"krate":0,"index":8205},{"krate":0,"index":8209}],"decl_id":null,"docs":" GraphQL support for [chrono](https://github.com/chronotope/chrono) types.\n# Supported types","sig":null,"attributes":[{"value":"cfg(feature = \"chrono\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734403,"byte_end":734429,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/ GraphQL support for [chrono](https://github.com/chronotope/chrono) types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734430,"byte_end":734507,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"*\n\n# Supported types\n\n| Rust Type               | JSON Serialization     | Notes                                     |\n|-------------------------|------------------------|-------------------------------------------|\n| `DateTime<FixedOffset>` | RFC3339 string         |                                           |\n| `DateTime<Utc>`         | RFC3339 string         |                                           |\n| `NaiveDate`             | YYYY-MM-DD             |                                           |\n| `NaiveDateTime`         | float (unix timestamp) | JSON numbers (i.e. IEEE doubles) are not  |\n|                         |                        | precise enough for nanoseconds.           |\n|                         |                        | Values will be truncated to microsecond   |\n|                         |                        | resolution.                               |\n| `NaiveTime`             | H:M:S                  | Optional. Use the `scalar-naivetime`      |\n|                         |                        | feature.                                  |\n\n*/","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","byte_start":748398,"byte_end":749492,"line_start":1,"line_end":17,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","byte_start":749493,"byte_end":749530,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Static","id":{"krate":0,"index":5505},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/chrono.rs","byte_start":749706,"byte_end":749720,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"RFC3339_FORMAT","qualname":"::integrations::chrono::RFC3339_FORMAT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5506},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"url","qualname":"::integrations::url","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/url.rs","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5515},{"krate":0,"index":5518},{"krate":0,"index":8213},{"krate":0,"index":8220},{"krate":0,"index":8222},{"krate":0,"index":8224},{"krate":0,"index":8229},{"krate":0,"index":8236},{"krate":0,"index":8239},{"krate":0,"index":8243}],"decl_id":null,"docs":" GraphQL support for [url](https://github.com/servo/rust-url) types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"url\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734659,"byte_end":734682,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ GraphQL support for [url](https://github.com/servo/rust-url) types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734683,"byte_end":734754,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":5521},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/uuid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uuid","qualname":"::integrations::uuid","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/uuid.rs","parent":null,"children":[{"krate":0,"index":5522},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5530},{"krate":0,"index":5533},{"krate":0,"index":5536},{"krate":0,"index":5539},{"krate":0,"index":8247},{"krate":0,"index":8254},{"krate":0,"index":8256},{"krate":0,"index":8258},{"krate":0,"index":8263},{"krate":0,"index":8270},{"krate":0,"index":8273},{"krate":0,"index":8277}],"decl_id":null,"docs":" GraphQL support for [uuid](https://doc.rust-lang.org/uuid/uuid/struct.Uuid.html) types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"uuid\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734769,"byte_end":734793,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ GraphQL support for [uuid](https://doc.rust-lang.org/uuid/uuid/struct.Uuid.html) types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734794,"byte_end":734885,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/uuid.rs","byte_start":760886,"byte_end":760923,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":5542},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bson","qualname":"::integrations::bson","value":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/bson.rs","parent":null,"children":[{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5553},{"krate":0,"index":5556},{"krate":0,"index":5559},{"krate":0,"index":5562},{"krate":0,"index":5565},{"krate":0,"index":8281},{"krate":0,"index":8288},{"krate":0,"index":8290},{"krate":0,"index":8292},{"krate":0,"index":8297},{"krate":0,"index":8304},{"krate":0,"index":8307},{"krate":0,"index":8311},{"krate":0,"index":8315},{"krate":0,"index":8322},{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":8331},{"krate":0,"index":8338},{"krate":0,"index":8341},{"krate":0,"index":8345}],"decl_id":null,"docs":" GraphQL support for [bson](https://github.com/mongodb/bson-rust) types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"bson\")","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734901,"byte_end":734925,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/ GraphQL support for [bson](https://github.com/mongodb/bson-rust) types.","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734926,"byte_end":735001,"line_start":23,"line_end":23,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8351},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6336,"byte_end":6346,"line_start":191,"line_end":191,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::GraphQLError::ParseError","value":"GraphQLError::ParseError(Spanning<ParseError>)","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8354},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6378,"byte_end":6393,"line_start":192,"line_end":192,"column_start":5,"column_end":20},"name":"ValidationError","qualname":"::GraphQLError::ValidationError","value":"GraphQLError::ValidationError(Vec<RuleError>)","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8357},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6415,"byte_end":6434,"line_start":193,"line_end":193,"column_start":5,"column_end":24},"name":"NoOperationProvided","qualname":"::GraphQLError::NoOperationProvided","value":"GraphQLError::NoOperationProvided","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8359},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6440,"byte_end":6466,"line_start":194,"line_end":194,"column_start":5,"column_end":31},"name":"MultipleOperationsProvided","qualname":"::GraphQLError::MultipleOperationsProvided","value":"GraphQLError::MultipleOperationsProvided","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8361},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6472,"byte_end":6492,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"UnknownOperationName","qualname":"::GraphQLError::UnknownOperationName","value":"GraphQLError::UnknownOperationName","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8363},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6498,"byte_end":6512,"line_start":196,"line_end":196,"column_start":5,"column_end":19},"name":"IsSubscription","qualname":"::GraphQLError::IsSubscription","value":"GraphQLError::IsSubscription","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8365},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6518,"byte_end":6533,"line_start":197,"line_end":197,"column_start":5,"column_end":20},"name":"NotSubscription","qualname":"::GraphQLError::NotSubscription","value":"GraphQLError::NotSubscription","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8349},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6313,"byte_end":6325,"line_start":190,"line_end":190,"column_start":10,"column_end":22},"name":"GraphQLError","qualname":"::GraphQLError","value":"pub enum GraphQLError<'a> {\n    ParseError(Spanning<ParseError>),\n    ValidationError(Vec<RuleError>),\n    NoOperationProvided,\n    MultipleOperationsProvided,\n    UnknownOperationName,\n    IsSubscription,\n    NotSubscription,\n}","parent":null,"children":[{"krate":0,"index":8351},{"krate":0,"index":8354},{"krate":0,"index":8357},{"krate":0,"index":8359},{"krate":0,"index":8361},{"krate":0,"index":8363},{"krate":0,"index":8365}],"decl_id":null,"docs":" An error that prevented query execution\n","sig":null,"attributes":[{"value":"/ An error that prevented query execution","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6209,"byte_end":6252,"line_start":187,"line_end":187,"column_start":1,"column_end":44}},{"value":"allow(missing_docs)","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6281,"byte_end":6303,"line_start":189,"line_end":189,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5808},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":7510,"byte_end":7522,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"execute_sync","qualname":"::execute_sync","value":"pub fn execute_sync<'a, S, QueryT, MutationT,\n                    SubscriptionT>(&'a str, Option<&str>,\n                                   &'a RootNode<, QueryT, MutationT,\n                                                SubscriptionT, S>,\n                                   &Variables<S>, &QueryT::Context)\n-> Result<(Value<S>, Vec<ExecutionError<S>>), GraphQLError> where\nS: ScalarValue, QueryT: GraphQLType<S>, MutationT: GraphQLType<S, Context =\nQueryT::Context>, SubscriptionT: GraphQLType<S, Context = QueryT::Context>","parent":null,"children":[],"decl_id":null,"docs":" Execute a query synchronously in a provided schema\n","sig":null,"attributes":[{"value":"/ Execute a query synchronously in a provided schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":7448,"byte_end":7502,"line_start":221,"line_end":221,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5814},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":8764,"byte_end":8771,"line_start":261,"line_end":261,"column_start":14,"column_end":21},"name":"execute","qualname":"::execute","value":"pub async fn execute<'a, S, QueryT, MutationT, SubscriptionT, '_, '_,\n                     '_>(&'a str, Option<&'_ str>, &'a RootNode,\n                         &'_ Variables<S>, &'_ QueryT::Context)\n-> /*impl Trait*/ where QueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync,\nQueryT::Context: Sync, MutationT: GraphQLTypeAsync<S, Context =\nQueryT::Context>, MutationT::TypeInfo: Sync, SubscriptionT: GraphQLType<S,\nContext = QueryT::Context> + Sync, SubscriptionT::TypeInfo: Sync,\nS: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Execute a query in a provided schema\n","sig":null,"attributes":[{"value":"/ Execute a query in a provided schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":8710,"byte_end":8750,"line_start":260,"line_end":260,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5822},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":10204,"byte_end":10223,"line_start":305,"line_end":305,"column_start":14,"column_end":33},"name":"resolve_into_stream","qualname":"::resolve_into_stream","value":"pub async fn resolve_into_stream<'a, S, QueryT, MutationT, SubscriptionT, '_,\n                                 '_>(&'a str, Option<&'_ str>, &'a RootNode,\n                                     &'_ Variables<S>, &'a QueryT::Context)\n-> /*impl Trait*/ where QueryT: GraphQLTypeAsync<S>, QueryT::TypeInfo: Sync,\nQueryT::Context: Sync, MutationT: GraphQLTypeAsync<S, Context =\nQueryT::Context>, MutationT::TypeInfo: Sync,\nSubscriptionT: GraphQLSubscriptionType<S, Context = QueryT::Context>,\nSubscriptionT::TypeInfo: Sync, S: ScalarValue + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Resolve subscription into `ValuesStream`\n","sig":null,"attributes":[{"value":"/ Resolve subscription into `ValuesStream`","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":10146,"byte_end":10190,"line_start":304,"line_end":304,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":5830},"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":11744,"byte_end":11754,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"introspect","qualname":"::introspect","value":"pub fn introspect<'a, S, QueryT, MutationT,\n                  SubscriptionT>(&'a RootNode<, QueryT, MutationT,\n                                              SubscriptionT, S>,\n                                 &QueryT::Context, IntrospectionFormat)\n-> Result<(Value<S>, Vec<ExecutionError<S>>), GraphQLError> where\nS: ScalarValue, QueryT: GraphQLType<S>, MutationT: GraphQLType<S, Context =\nQueryT::Context>, SubscriptionT: GraphQLType<S, Context = QueryT::Context>","parent":null,"children":[],"decl_id":null,"docs":" Execute the reference introspection query in the provided schema\n","sig":null,"attributes":[{"value":"/ Execute the reference introspection query in the provided schema","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":11668,"byte_end":11736,"line_start":349,"line_end":349,"column_start":1,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26080,"byte_end":26086,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27968,"byte_end":27974,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":28185,"byte_end":28190,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":28309,"byte_end":28315,"line_start":85,"line_end":85,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37270,"byte_end":37288,"line_start":276,"line_end":276,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":38569,"byte_end":38587,"line_start":332,"line_end":332,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":38773,"byte_end":38798,"line_start":341,"line_end":341,"column_start":32,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13615,"byte_end":13620,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":17813,"byte_end":17818,"line_start":186,"line_end":186,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":18620,"byte_end":18625,"line_start":210,"line_end":210,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":19810,"byte_end":19815,"line_start":250,"line_end":250,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20045,"byte_end":20050,"line_start":263,"line_end":263,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20186,"byte_end":20191,"line_start":272,"line_end":272,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20312,"byte_end":20317,"line_start":281,"line_end":281,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20435,"byte_end":20440,"line_start":290,"line_end":290,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20559,"byte_end":20564,"line_start":299,"line_end":299,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42861,"byte_end":42867,"line_start":22,"line_end":22,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43107,"byte_end":43108,"line_start":34,"line_end":34,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44271,"byte_end":44272,"line_start":74,"line_end":74,"column_start":56,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44442,"byte_end":44444,"line_start":83,"line_end":83,"column_start":62,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44629,"byte_end":44635,"line_start":92,"line_end":92,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44820,"byte_end":44826,"line_start":101,"line_end":101,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50527,"byte_end":50531,"line_start":178,"line_end":178,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51374,"byte_end":51378,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51727,"byte_end":51737,"line_start":216,"line_end":216,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":59036,"byte_end":59046,"line_start":449,"line_end":449,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60338,"byte_end":60347,"line_start":494,"line_end":494,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":61040,"byte_end":61059,"line_start":520,"line_end":520,"column_start":13,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104550,"byte_end":104564,"line_start":35,"line_end":35,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":105883,"byte_end":105900,"line_start":74,"line_end":74,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106946,"byte_end":106964,"line_start":115,"line_end":115,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":107195,"byte_end":107213,"line_start":129,"line_end":129,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116605,"byte_end":116631,"line_start":373,"line_end":373,"column_start":41,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":117336,"byte_end":117354,"line_start":403,"line_end":403,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":156913,"byte_end":156926,"line_start":28,"line_end":28,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":157489,"byte_end":157502,"line_start":47,"line_end":47,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160106,"byte_end":160119,"line_start":126,"line_end":126,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65605,"byte_end":65619,"line_start":97,"line_end":97,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65657,"byte_end":65671,"line_start":99,"line_end":99,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65990,"byte_end":66004,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66309,"byte_end":66323,"line_start":123,"line_end":123,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67292,"byte_end":67302,"line_start":158,"line_end":158,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67511,"byte_end":67521,"line_start":170,"line_end":170,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70330,"byte_end":70340,"line_start":258,"line_end":258,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70496,"byte_end":70506,"line_start":265,"line_end":265,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70860,"byte_end":70861,"line_start":283,"line_end":283,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":71175,"byte_end":71181,"line_start":296,"line_end":296,"column_start":73,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":71822,"byte_end":71828,"line_start":322,"line_end":322,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72158,"byte_end":72169,"line_start":335,"line_end":335,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72506,"byte_end":72517,"line_start":349,"line_end":349,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73806,"byte_end":73807,"line_start":393,"line_end":393,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73911,"byte_end":73919,"line_start":402,"line_end":402,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1009},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":85527,"byte_end":85536,"line_start":745,"line_end":745,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86000,"byte_end":86014,"line_start":763,"line_end":763,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97383,"byte_end":97391,"line_start":1128,"line_end":1128,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161320,"byte_end":161339,"line_start":15,"line_end":15,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180730,"byte_end":180735,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":191925,"byte_end":191930,"line_start":436,"line_end":436,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":193747,"byte_end":193752,"line_start":483,"line_end":483,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":195273,"byte_end":195283,"line_start":527,"line_end":527,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":196139,"byte_end":196149,"line_start":545,"line_end":545,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197063,"byte_end":197069,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":201430,"byte_end":201440,"line_start":196,"line_end":196,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":201879,"byte_end":201889,"line_start":207,"line_end":207,"column_start":32,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202718,"byte_end":202726,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204248,"byte_end":204256,"line_start":93,"line_end":93,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204433,"byte_end":204441,"line_start":99,"line_end":99,"column_start":50,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204454,"byte_end":204468,"line_start":101,"line_end":101,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205726,"byte_end":205740,"line_start":154,"line_end":154,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213412,"byte_end":213429,"line_start":25,"line_end":25,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217090,"byte_end":217095,"line_start":172,"line_end":172,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217629,"byte_end":217637,"line_start":193,"line_end":193,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218430,"byte_end":218438,"line_start":217,"line_end":217,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":225955,"byte_end":225965,"line_start":416,"line_end":416,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226838,"byte_end":226846,"line_start":447,"line_end":447,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227145,"byte_end":227157,"line_start":459,"line_end":459,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227484,"byte_end":227494,"line_start":471,"line_end":471,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228687,"byte_end":228695,"line_start":511,"line_end":511,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229532,"byte_end":229545,"line_start":542,"line_end":542,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230315,"byte_end":230324,"line_start":569,"line_end":569,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231150,"byte_end":231165,"line_start":596,"line_end":596,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232051,"byte_end":232056,"line_start":627,"line_end":627,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233084,"byte_end":233092,"line_start":661,"line_end":661,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233868,"byte_end":233877,"line_start":689,"line_end":689,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234780,"byte_end":234790,"line_start":716,"line_end":716,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":235062,"byte_end":235070,"line_start":725,"line_end":725,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":235383,"byte_end":235398,"line_start":735,"line_end":735,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237490,"byte_end":237500,"line_start":59,"line_end":59,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238289,"byte_end":238297,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238915,"byte_end":238923,"line_start":105,"line_end":105,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239555,"byte_end":239563,"line_start":123,"line_end":123,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241311,"byte_end":241321,"line_start":173,"line_end":173,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250930,"byte_end":250938,"line_start":450,"line_end":450,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251732,"byte_end":251745,"line_start":482,"line_end":482,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":253092,"byte_end":253109,"line_start":535,"line_end":535,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":253682,"byte_end":253690,"line_start":549,"line_end":549,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":259127,"byte_end":259135,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":259677,"byte_end":259685,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":261802,"byte_end":261810,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":272691,"byte_end":272699,"line_start":28,"line_end":28,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":272973,"byte_end":272996,"line_start":39,"line_end":39,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":274164,"byte_end":274187,"line_start":78,"line_end":78,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2250},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2273},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":288152,"byte_end":288153,"line_start":134,"line_end":134,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300198,"byte_end":300207,"line_start":76,"line_end":76,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":322507,"byte_end":322513,"line_start":12,"line_end":12,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":322867,"byte_end":322873,"line_start":29,"line_end":29,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":323433,"byte_end":323439,"line_start":54,"line_end":54,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324074,"byte_end":324080,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324357,"byte_end":324363,"line_start":91,"line_end":91,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324625,"byte_end":324628,"line_start":104,"line_end":104,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324978,"byte_end":324981,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":325467,"byte_end":325470,"line_start":143,"line_end":143,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":325941,"byte_end":325944,"line_start":161,"line_end":161,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":326479,"byte_end":326482,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331118,"byte_end":331121,"line_start":39,"line_end":39,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331284,"byte_end":331287,"line_start":50,"line_end":50,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332764,"byte_end":332767,"line_start":96,"line_end":96,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332928,"byte_end":332931,"line_start":107,"line_end":107,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334383,"byte_end":334386,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334539,"byte_end":334542,"line_start":164,"line_end":164,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335493,"byte_end":335496,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335649,"byte_end":335652,"line_start":212,"line_end":212,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335805,"byte_end":335811,"line_start":223,"line_end":223,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335955,"byte_end":335958,"line_start":234,"line_end":234,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337027,"byte_end":337030,"line_start":283,"line_end":283,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337181,"byte_end":337184,"line_start":294,"line_end":294,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337335,"byte_end":337341,"line_start":305,"line_end":305,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337483,"byte_end":337486,"line_start":316,"line_end":316,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338312,"byte_end":338316,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338732,"byte_end":338746,"line_start":37,"line_end":37,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338847,"byte_end":338861,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338942,"byte_end":338946,"line_start":49,"line_end":49,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":339318,"byte_end":339322,"line_start":63,"line_end":63,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":339405,"byte_end":339409,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341171,"byte_end":341179,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341256,"byte_end":341264,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345769,"byte_end":345777,"line_start":187,"line_end":187,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345963,"byte_end":345971,"line_start":194,"line_end":194,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346170,"byte_end":346178,"line_start":201,"line_end":201,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346372,"byte_end":346380,"line_start":208,"line_end":208,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346597,"byte_end":346605,"line_start":215,"line_end":215,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346959,"byte_end":346967,"line_start":232,"line_end":232,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":347530,"byte_end":347538,"line_start":257,"line_end":257,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348176,"byte_end":348184,"line_start":281,"line_end":281,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348555,"byte_end":348563,"line_start":298,"line_end":298,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348828,"byte_end":348836,"line_start":311,"line_end":311,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":349267,"byte_end":349270,"line_start":15,"line_end":15,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":349609,"byte_end":349612,"line_start":32,"line_end":32,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":350703,"byte_end":350706,"line_start":74,"line_end":74,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":351163,"byte_end":351166,"line_start":91,"line_end":91,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":351395,"byte_end":351398,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":353987,"byte_end":353990,"line_start":207,"line_end":207,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":354329,"byte_end":354332,"line_start":224,"line_end":224,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":355427,"byte_end":355430,"line_start":266,"line_end":266,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":355894,"byte_end":355897,"line_start":283,"line_end":283,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":356126,"byte_end":356129,"line_start":293,"line_end":293,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357075,"byte_end":357077,"line_start":26,"line_end":26,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357139,"byte_end":357141,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357314,"byte_end":357316,"line_start":39,"line_end":39,"column_start":16,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357420,"byte_end":357422,"line_start":47,"line_end":47,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366446,"byte_end":366459,"line_start":359,"line_end":359,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366610,"byte_end":366623,"line_start":367,"line_end":367,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366950,"byte_end":366963,"line_start":383,"line_end":383,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367207,"byte_end":367220,"line_start":395,"line_end":395,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367340,"byte_end":367353,"line_start":403,"line_end":403,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367861,"byte_end":367878,"line_start":419,"line_end":419,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368033,"byte_end":368050,"line_start":427,"line_end":427,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368381,"byte_end":368398,"line_start":443,"line_end":443,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368649,"byte_end":368666,"line_start":455,"line_end":455,"column_start":44,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368796,"byte_end":368813,"line_start":463,"line_end":463,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373037,"byte_end":373052,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":380231,"byte_end":380232,"line_start":216,"line_end":216,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394269,"byte_end":394278,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394923,"byte_end":394932,"line_start":54,"line_end":54,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":395357,"byte_end":395366,"line_start":67,"line_end":67,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":395390,"byte_end":395406,"line_start":69,"line_end":69,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/input_value.rs","byte_start":408849,"byte_end":408853,"line_start":345,"line_end":345,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409512,"byte_end":409527,"line_start":15,"line_end":15,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3643}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409715,"byte_end":409731,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409888,"byte_end":409903,"line_start":30,"line_end":30,"column_start":32,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409966,"byte_end":409982,"line_start":32,"line_end":32,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/arguments_of_correct_type.rs","byte_start":420349,"byte_end":420371,"line_start":19,"line_end":19,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/default_values_of_correct_type.rs","byte_start":446874,"byte_end":446900,"line_start":15,"line_end":15,"column_start":32,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/fields_on_correct_type.rs","byte_start":452283,"byte_end":452302,"line_start":15,"line_end":15,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/fragments_on_composite_types.rs","byte_start":461211,"byte_end":461236,"line_start":14,"line_end":14,"column_start":32,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3844},{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_argument_names.rs","byte_start":466663,"byte_end":466681,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3897},{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_directives.rs","byte_start":474483,"byte_end":474498,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_fragment_names.rs","byte_start":482559,"byte_end":482577,"line_start":14,"line_end":14,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_type_names.rs","byte_start":485207,"byte_end":485221,"line_start":15,"line_end":15,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/lone_anonymous_operation.rs","byte_start":488324,"byte_end":488346,"line_start":18,"line_end":18,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_fragment_cycles.rs","byte_start":492067,"byte_end":492083,"line_start":31,"line_end":31,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_fragment_cycles.rs","byte_start":493872,"byte_end":493885,"line_start":94,"line_end":94,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_undefined_variables.rs","byte_start":502729,"byte_end":502749,"line_start":31,"line_end":31,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_undefined_variables.rs","byte_start":503547,"byte_end":503567,"line_start":61,"line_end":61,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_fragments.rs","byte_start":519984,"byte_end":520001,"line_start":30,"line_end":30,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4246}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_fragments.rs","byte_start":520527,"byte_end":520544,"line_start":48,"line_end":48,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4252},{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_variables.rs","byte_start":527449,"byte_end":527466,"line_start":31,"line_end":31,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4311}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_variables.rs","byte_start":528233,"byte_end":528250,"line_start":61,"line_end":61,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":539010,"byte_end":539020,"line_start":46,"line_end":46,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4421}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":540045,"byte_end":540059,"line_start":94,"line_end":94,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":540282,"byte_end":540289,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4435}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":541397,"byte_end":541425,"line_start":148,"line_end":148,"column_start":20,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":558294,"byte_end":558322,"line_start":682,"line_end":682,"column_start":32,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/possible_fragment_spreads.rs","byte_start":602055,"byte_end":602078,"line_start":22,"line_end":22,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/provided_non_null_arguments.rs","byte_start":613854,"byte_end":613878,"line_start":15,"line_end":15,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/scalar_leafs.rs","byte_start":623087,"byte_end":623098,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_argument_names.rs","byte_start":629011,"byte_end":629030,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_fragment_names.rs","byte_start":635406,"byte_end":635425,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_input_field_names.rs","byte_start":639687,"byte_end":639708,"line_start":20,"line_end":20,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_operation_names.rs","byte_start":644042,"byte_end":644062,"line_start":20,"line_end":20,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4775}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_variable_names.rs","byte_start":648163,"byte_end":648182,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_are_input_types.rs","byte_start":651144,"byte_end":651163,"line_start":14,"line_end":14,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4845}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_in_allowed_position.rs","byte_start":654261,"byte_end":654286,"line_start":36,"line_end":36,"column_start":20,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4908}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_in_allowed_position.rs","byte_start":656139,"byte_end":656164,"line_start":86,"line_end":86,"column_start":32,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685950,"byte_end":685964,"line_start":39,"line_end":39,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690125,"byte_end":690140,"line_start":162,"line_end":162,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690851,"byte_end":690866,"line_start":185,"line_end":185,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692688,"byte_end":692707,"line_start":253,"line_end":253,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5325},{"krate":0,"index":5333}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695874,"byte_end":695894,"line_start":342,"line_end":342,"column_start":13,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":735423,"byte_end":735437,"line_start":23,"line_end":23,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":736169,"byte_end":736181,"line_start":52,"line_end":52,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5399}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737483,"byte_end":737493,"line_start":85,"line_end":85,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5404}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737753,"byte_end":737770,"line_start":95,"line_end":95,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737935,"byte_end":737952,"line_start":101,"line_end":101,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5420},{"krate":0,"index":5422},{"krate":0,"index":5424},{"krate":0,"index":5426},{"krate":0,"index":8073},{"krate":0,"index":5428},{"krate":0,"index":5430},{"krate":0,"index":5432},{"krate":0,"index":5434},{"krate":0,"index":8075},{"krate":0,"index":5436},{"krate":0,"index":5438},{"krate":0,"index":5440},{"krate":0,"index":5442},{"krate":0,"index":5444},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5450},{"krate":0,"index":5452},{"krate":0,"index":5454},{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":743634,"byte_end":743644,"line_start":288,"line_end":288,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":744483,"byte_end":744492,"line_start":314,"line_end":314,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5465}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":744894,"byte_end":744908,"line_start":331,"line_end":331,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5468}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":745366,"byte_end":745374,"line_start":350,"line_end":350,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5472}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":746055,"byte_end":746061,"line_start":374,"line_end":374,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":746466,"byte_end":746471,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5480}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6564,"byte_end":6576,"line_start":200,"line_end":200,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":7427,"byte_end":7439,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":12510,"byte_end":12522,"line_start":373,"line_end":373,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4077,"byte_end":4085,"line_start":122,"line_end":122,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":492}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4114,"byte_end":4120,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1164}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/mod.rs","byte_start":212751,"byte_end":212755,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1647}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/mod.rs","byte_start":282989,"byte_end":282995,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2642}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4174,"byte_end":4184,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":3439}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4316,"byte_end":4320,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5204}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":684858,"byte_end":684866,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":5205}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":684876,"byte_end":684886,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":5207}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":4330,"byte_end":4342,"line_start":132,"line_end":132,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":5339}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734395,"byte_end":734400,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5340}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734516,"byte_end":734522,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5482}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734763,"byte_end":734766,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5506}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":734894,"byte_end":734898,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5521}},{"kind":"Mod","span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/mod.rs","byte_start":735010,"byte_end":735014,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5542}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":26080,"byte_end":26086,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":27968,"byte_end":27974,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":5839},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":28185,"byte_end":28190,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/object.rs","byte_start":28309,"byte_end":28315,"line_start":85,"line_end":85,"column_start":44,"column_end":50},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5839},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34083,"byte_end":34088,"line_start":176,"line_end":176,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34100,"byte_end":34107,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":8969},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34114,"byte_end":34123,"line_start":178,"line_end":178,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2531},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34130,"byte_end":34135,"line_start":179,"line_end":179,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34142,"byte_end":34151,"line_start":180,"line_end":180,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":33,"index":2077},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34158,"byte_end":34162,"line_start":181,"line_end":181,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2786},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34177,"byte_end":34181,"line_start":182,"line_end":182,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2786},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34194,"byte_end":34198,"line_start":183,"line_end":183,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2786},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":34210,"byte_end":34214,"line_start":184,"line_end":184,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2786},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":37270,"byte_end":37288,"line_start":276,"line_end":276,"column_start":22,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5854},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":38569,"byte_end":38587,"line_start":332,"line_end":332,"column_start":28,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5854},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/scalar.rs","byte_start":38773,"byte_end":38798,"line_start":341,"line_end":341,"column_start":32,"column_end":57},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5908},"to":{"krate":33,"index":1622}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":13615,"byte_end":13620,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":17813,"byte_end":17818,"line_start":186,"line_end":186,"column_start":42,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5917},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":18620,"byte_end":18625,"line_start":210,"line_end":210,"column_start":34,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":19810,"byte_end":19815,"line_start":250,"line_end":250,"column_start":32,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20045,"byte_end":20050,"line_start":263,"line_end":263,"column_start":31,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20186,"byte_end":20191,"line_start":272,"line_end":272,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20312,"byte_end":20317,"line_start":281,"line_end":281,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20435,"byte_end":20440,"line_start":290,"line_end":290,"column_start":23,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/value/mod.rs","byte_start":20559,"byte_end":20564,"line_start":299,"line_end":299,"column_start":24,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5917},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":42861,"byte_end":42867,"line_start":22,"line_end":22,"column_start":41,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":40385},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":43107,"byte_end":43108,"line_start":34,"line_end":34,"column_start":38,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44271,"byte_end":44272,"line_start":74,"line_end":74,"column_start":56,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":321}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44442,"byte_end":44444,"line_start":83,"line_end":83,"column_start":62,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":321}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44629,"byte_end":44635,"line_start":92,"line_end":92,"column_start":65,"column_end":71},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":40385},"to":{"krate":0,"index":321}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/macros/helper/subscription.rs","byte_start":44820,"byte_end":44826,"line_start":101,"line_end":101,"column_start":71,"column_end":77},"kind":{"Impl":{"id":27}},"from":{"krate":2,"index":40385},"to":{"krate":0,"index":321}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":49794,"byte_end":49799,"line_start":159,"line_end":159,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50427,"byte_end":50432,"line_start":173,"line_end":173,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":50527,"byte_end":50531,"line_start":178,"line_end":178,"column_start":10,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51374,"byte_end":51378,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5943},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":51727,"byte_end":51737,"line_start":216,"line_end":216,"column_start":9,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":59036,"byte_end":59046,"line_start":449,"line_end":449,"column_start":26,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":60338,"byte_end":60347,"line_start":494,"line_end":494,"column_start":13,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/ast.rs","byte_start":61040,"byte_end":61059,"line_start":520,"line_end":520,"column_start":13,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":104550,"byte_end":104564,"line_start":35,"line_end":35,"column_start":13,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":105883,"byte_end":105900,"line_start":74,"line_end":74,"column_start":13,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":106946,"byte_end":106964,"line_start":115,"line_end":115,"column_start":25,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6362},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":107195,"byte_end":107213,"line_start":129,"line_end":129,"column_start":13,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":116605,"byte_end":116631,"line_start":373,"line_end":373,"column_start":41,"column_end":67},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6385},"to":{"krate":0,"index":750}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/look_ahead.rs","byte_start":117336,"byte_end":117354,"line_start":403,"line_end":403,"column_start":41,"column_end":59},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6362},"to":{"krate":0,"index":750}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":156913,"byte_end":156926,"line_start":28,"line_end":28,"column_start":29,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":157489,"byte_end":157502,"line_start":47,"line_end":47,"column_start":19,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/owned_executor.rs","byte_start":160106,"byte_end":160119,"line_start":126,"line_end":126,"column_start":19,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65605,"byte_end":65619,"line_start":97,"line_end":97,"column_start":16,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6417},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65657,"byte_end":65671,"line_start":99,"line_end":99,"column_start":9,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":65990,"byte_end":66004,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6417},"to":{"krate":2,"index":2578}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":66309,"byte_end":66323,"line_start":123,"line_end":123,"column_start":17,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6417},"to":{"krate":2,"index":2567}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67292,"byte_end":67302,"line_start":158,"line_end":158,"column_start":33,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6431},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":67511,"byte_end":67521,"line_start":170,"line_end":170,"column_start":9,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70330,"byte_end":70340,"line_start":258,"line_end":258,"column_start":63,"column_end":73},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6431},"to":{"krate":0,"index":916}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70496,"byte_end":70506,"line_start":265,"line_end":265,"column_start":45,"column_end":55},"kind":{"Impl":{"id":50}},"from":{"krate":2,"index":31758},"to":{"krate":0,"index":916}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":70860,"byte_end":70861,"line_start":283,"line_end":283,"column_start":51,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":71175,"byte_end":71181,"line_start":296,"line_end":296,"column_start":73,"column_end":79},"kind":{"Impl":{"id":52}},"from":{"krate":2,"index":40385},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":71822,"byte_end":71828,"line_start":322,"line_end":322,"column_start":59,"column_end":65},"kind":{"Impl":{"id":53}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72158,"byte_end":72169,"line_start":335,"line_end":335,"column_start":57,"column_end":68},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":906},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":72506,"byte_end":72517,"line_start":349,"line_end":349,"column_start":9,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":906},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73806,"byte_end":73807,"line_start":393,"line_end":393,"column_start":28,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":994},"to":{"krate":0,"index":982}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":73911,"byte_end":73919,"line_start":402,"line_end":402,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":85527,"byte_end":85536,"line_start":745,"line_end":745,"column_start":10,"column_end":19},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":86000,"byte_end":86014,"line_start":763,"line_end":763,"column_start":9,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/executor/mod.rs","byte_start":97383,"byte_end":97391,"line_start":1128,"line_end":1128,"column_start":13,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/introspection/mod.rs","byte_start":161320,"byte_end":161339,"line_start":15,"line_end":15,"column_start":18,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":180730,"byte_end":180735,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":191925,"byte_end":191930,"line_start":436,"line_end":436,"column_start":23,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6444},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":193747,"byte_end":193752,"line_start":483,"line_end":483,"column_start":27,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":195273,"byte_end":195283,"line_start":527,"line_end":527,"column_start":23,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6529},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/lexer.rs","byte_start":196139,"byte_end":196149,"line_start":545,"line_end":545,"column_start":28,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6529},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":197063,"byte_end":197069,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":201430,"byte_end":201440,"line_start":196,"line_end":196,"column_start":27,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/parser.rs","byte_start":201879,"byte_end":201889,"line_start":207,"line_end":207,"column_start":32,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6557},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":202718,"byte_end":202726,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204248,"byte_end":204256,"line_start":93,"line_end":93,"column_start":40,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6608},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204433,"byte_end":204441,"line_start":99,"line_end":99,"column_start":50,"column_end":58},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6608},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":204454,"byte_end":204468,"line_start":101,"line_end":101,"column_start":6,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/parser/utils.rs","byte_start":205726,"byte_end":205740,"line_start":154,"line_end":154,"column_start":23,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6585},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":213412,"byte_end":213429,"line_start":25,"line_end":25,"column_start":6,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217090,"byte_end":217095,"line_start":172,"line_end":172,"column_start":13,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":217629,"byte_end":217637,"line_start":193,"line_end":193,"column_start":13,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":218430,"byte_end":218438,"line_start":217,"line_end":217,"column_start":13,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":225955,"byte_end":225965,"line_start":416,"line_end":416,"column_start":13,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":226838,"byte_end":226846,"line_start":447,"line_end":447,"column_start":10,"column_end":18},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227145,"byte_end":227157,"line_start":459,"line_end":459,"column_start":10,"column_end":22},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":227484,"byte_end":227494,"line_start":471,"line_end":471,"column_start":13,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":228687,"byte_end":228695,"line_start":511,"line_end":511,"column_start":13,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":229532,"byte_end":229545,"line_start":542,"line_end":542,"column_start":13,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":230315,"byte_end":230324,"line_start":569,"line_end":569,"column_start":10,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":231150,"byte_end":231165,"line_start":596,"line_end":596,"column_start":13,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":232051,"byte_end":232056,"line_start":627,"line_end":627,"column_start":13,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233084,"byte_end":233092,"line_start":661,"line_end":661,"column_start":13,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":233868,"byte_end":233877,"line_start":689,"line_end":689,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":234780,"byte_end":234790,"line_start":716,"line_end":716,"column_start":40,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":235062,"byte_end":235070,"line_start":725,"line_end":725,"column_start":40,"column_end":48},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/meta.rs","byte_start":235383,"byte_end":235398,"line_start":735,"line_end":735,"column_start":40,"column_end":55},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":237490,"byte_end":237500,"line_start":59,"line_end":59,"column_start":25,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6793},"to":{"krate":0,"index":985}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238289,"byte_end":238297,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":238915,"byte_end":238923,"line_start":105,"line_end":105,"column_start":47,"column_end":55},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":239555,"byte_end":239563,"line_start":123,"line_end":123,"column_start":47,"column_end":55},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":241311,"byte_end":241321,"line_start":173,"line_end":173,"column_start":13,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":250930,"byte_end":250938,"line_start":450,"line_end":450,"column_start":13,"column_end":21},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":251732,"byte_end":251745,"line_start":482,"line_end":482,"column_start":13,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":253092,"byte_end":253109,"line_start":535,"line_end":535,"column_start":23,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6872},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/model.rs","byte_start":253682,"byte_end":253690,"line_start":549,"line_end":549,"column_start":30,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6805},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":259127,"byte_end":259135,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6773},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":259677,"byte_end":259685,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6773},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/schema.rs","byte_start":261802,"byte_end":261810,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6773},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":272691,"byte_end":272699,"line_start":28,"line_end":28,"column_start":52,"column_end":60},"kind":{"Impl":{"id":135}},"from":{"krate":40,"index":1685},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":272973,"byte_end":272996,"line_start":39,"line_end":39,"column_start":9,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":2121}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/schema/translate/graphql_parser.rs","byte_start":274164,"byte_end":274187,"line_start":78,"line_end":78,"column_start":6,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283678,"byte_end":283690,"line_start":16,"line_end":16,"column_start":54,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":2460},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":283696,"byte_end":283700,"line_start":16,"line_end":16,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":287983,"byte_end":288000,"line_start":126,"line_end":126,"column_start":53,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":2339},"to":{"krate":0,"index":2352}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":288006,"byte_end":288017,"line_start":126,"line_end":126,"column_start":76,"column_end":87},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":2352}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/async_await.rs","byte_start":288152,"byte_end":288153,"line_start":134,"line_end":134,"column_start":36,"column_end":37},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":2352}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":300198,"byte_end":300207,"line_start":76,"line_end":76,"column_start":13,"column_end":22},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/base.rs","byte_start":312773,"byte_end":312785,"line_start":387,"line_end":387,"column_start":48,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":2460},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":322507,"byte_end":322513,"line_start":12,"line_end":12,"column_start":31,"column_end":37},"kind":{"Impl":{"id":141}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":322867,"byte_end":322873,"line_start":29,"line_end":29,"column_start":32,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":323433,"byte_end":323439,"line_start":54,"line_end":54,"column_start":37,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324074,"byte_end":324080,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"kind":{"Impl":{"id":144}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324357,"byte_end":324363,"line_start":91,"line_end":91,"column_start":32,"column_end":38},"kind":{"Impl":{"id":145}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324625,"byte_end":324628,"line_start":104,"line_end":104,"column_start":31,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":324978,"byte_end":324981,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":325467,"byte_end":325470,"line_start":143,"line_end":143,"column_start":37,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":325941,"byte_end":325944,"line_start":161,"line_end":161,"column_start":34,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/containers.rs","byte_start":326479,"byte_end":326482,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":330686,"byte_end":330697,"line_start":20,"line_end":20,"column_start":46,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331118,"byte_end":331121,"line_start":39,"line_end":39,"column_start":37,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":331284,"byte_end":331287,"line_start":50,"line_end":50,"column_start":37,"column_end":40},"kind":{"Impl":{"id":152}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332274,"byte_end":332285,"line_start":75,"line_end":75,"column_start":45,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332764,"byte_end":332767,"line_start":96,"line_end":96,"column_start":36,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":332928,"byte_end":332931,"line_start":107,"line_end":107,"column_start":36,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":333905,"byte_end":333916,"line_start":132,"line_end":132,"column_start":41,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":2685}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334383,"byte_end":334386,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2685}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":334539,"byte_end":334542,"line_start":164,"line_end":164,"column_start":32,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2685}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335493,"byte_end":335496,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2701}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335649,"byte_end":335652,"line_start":212,"line_end":212,"column_start":32,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2701}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335805,"byte_end":335811,"line_start":223,"line_end":223,"column_start":32,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":2701}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":335955,"byte_end":335958,"line_start":234,"line_end":234,"column_start":32,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2701}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":336613,"byte_end":336624,"line_start":264,"line_end":264,"column_start":40,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337027,"byte_end":337030,"line_start":283,"line_end":283,"column_start":31,"column_end":34},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337181,"byte_end":337184,"line_start":294,"line_end":294,"column_start":31,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337335,"byte_end":337341,"line_start":305,"line_end":305,"column_start":31,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":2,"index":40259},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/marker.rs","byte_start":337483,"byte_end":337486,"line_start":316,"line_end":316,"column_start":31,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338312,"byte_end":338316,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338732,"byte_end":338746,"line_start":37,"line_end":37,"column_start":18,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7427},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338847,"byte_end":338861,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7427},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":338942,"byte_end":338946,"line_start":49,"line_end":49,"column_start":18,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":11449}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":339318,"byte_end":339322,"line_start":63,"line_end":63,"column_start":25,"column_end":29},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/name.rs","byte_start":339405,"byte_end":339409,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341171,"byte_end":341179,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7445},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":341256,"byte_end":341264,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345769,"byte_end":345777,"line_start":187,"line_end":187,"column_start":15,"column_end":23},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":345963,"byte_end":345971,"line_start":194,"line_end":194,"column_start":15,"column_end":23},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346170,"byte_end":346178,"line_start":201,"line_end":201,"column_start":16,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346372,"byte_end":346380,"line_start":208,"line_end":208,"column_start":16,"column_end":24},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346597,"byte_end":346605,"line_start":215,"line_end":215,"column_start":31,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":346959,"byte_end":346967,"line_start":232,"line_end":232,"column_start":32,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":347530,"byte_end":347538,"line_start":257,"line_end":257,"column_start":37,"column_end":45},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348176,"byte_end":348184,"line_start":281,"line_end":281,"column_start":34,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348555,"byte_end":348563,"line_start":298,"line_end":298,"column_start":32,"column_end":40},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/nullable.rs","byte_start":348828,"byte_end":348836,"line_start":311,"line_end":311,"column_start":31,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7445},"to":{"krate":0,"index":2732}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":349267,"byte_end":349270,"line_start":15,"line_end":15,"column_start":31,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":349609,"byte_end":349612,"line_start":32,"line_end":32,"column_start":32,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":350703,"byte_end":350706,"line_start":74,"line_end":74,"column_start":37,"column_end":40},"kind":{"Impl":{"id":187}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":351163,"byte_end":351166,"line_start":91,"line_end":91,"column_start":34,"column_end":37},"kind":{"Impl":{"id":188}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":351395,"byte_end":351398,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":353987,"byte_end":353990,"line_start":207,"line_end":207,"column_start":31,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":354329,"byte_end":354332,"line_start":224,"line_end":224,"column_start":32,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":355427,"byte_end":355430,"line_start":266,"line_end":266,"column_start":41,"column_end":44},"kind":{"Impl":{"id":192}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":355894,"byte_end":355897,"line_start":283,"line_end":283,"column_start":34,"column_end":37},"kind":{"Impl":{"id":193}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/pointers.rs","byte_start":356126,"byte_end":356129,"line_start":293,"line_end":293,"column_start":32,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":5,"index":5711},"to":{"krate":0,"index":412}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357075,"byte_end":357077,"line_start":26,"line_end":26,"column_start":23,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357139,"byte_end":357141,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357314,"byte_end":357316,"line_start":39,"line_end":39,"column_start":16,"column_end":18},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":357420,"byte_end":357422,"line_start":47,"line_end":47,"column_start":23,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366446,"byte_end":366459,"line_start":359,"line_end":359,"column_start":17,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":7695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366610,"byte_end":366623,"line_start":367,"line_end":367,"column_start":31,"column_end":44},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":7695},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":366950,"byte_end":366963,"line_start":383,"line_end":383,"column_start":32,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":7695},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367207,"byte_end":367220,"line_start":395,"line_end":395,"column_start":37,"column_end":50},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":7695},"to":{"krate":0,"index":2339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367340,"byte_end":367353,"line_start":403,"line_end":403,"column_start":21,"column_end":34},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":7695},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":367861,"byte_end":367878,"line_start":419,"line_end":419,"column_start":17,"column_end":34},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368033,"byte_end":368050,"line_start":427,"line_end":427,"column_start":31,"column_end":48},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":2474}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368381,"byte_end":368398,"line_start":443,"line_end":443,"column_start":32,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":2460}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368649,"byte_end":368666,"line_start":455,"line_end":455,"column_start":44,"column_end":61},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":3341}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/scalars.rs","byte_start":368796,"byte_end":368813,"line_start":463,"line_end":463,"column_start":21,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":373037,"byte_end":373052,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":7710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375173,"byte_end":375179,"line_start":85,"line_end":85,"column_start":47,"column_end":53},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":3339}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375831,"byte_end":375843,"line_start":98,"line_end":98,"column_start":61,"column_end":73},"kind":"SuperTrait","from":{"krate":0,"index":2460},"to":{"krate":0,"index":3341}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":375849,"byte_end":375853,"line_start":98,"line_end":98,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":3341}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":380048,"byte_end":380072,"line_start":208,"line_end":208,"column_start":5,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3341},"to":{"krate":0,"index":3369}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":380078,"byte_end":380089,"line_start":208,"line_end":208,"column_start":35,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":2474},"to":{"krate":0,"index":3369}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/types/subscriptions.rs","byte_start":380231,"byte_end":380232,"line_start":216,"line_end":216,"column_start":43,"column_end":44},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3373},"to":{"krate":0,"index":3369}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394269,"byte_end":394278,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":7725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":394923,"byte_end":394932,"line_start":54,"line_end":54,"column_start":23,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":7725},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":395357,"byte_end":395366,"line_start":67,"line_end":67,"column_start":28,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7725},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/context.rs","byte_start":395390,"byte_end":395406,"line_start":69,"line_end":69,"column_start":20,"column_end":36},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/input_value.rs","byte_start":408849,"byte_end":408853,"line_start":345,"line_end":345,"column_start":27,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7741},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409512,"byte_end":409527,"line_start":15,"line_end":15,"column_start":6,"column_end":21},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409715,"byte_end":409731,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409888,"byte_end":409903,"line_start":30,"line_end":30,"column_start":32,"column_end":47},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3640},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/multi_visitor.rs","byte_start":409966,"byte_end":409982,"line_start":32,"line_end":32,"column_start":38,"column_end":54},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3645},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/arguments_of_correct_type.rs","byte_start":420349,"byte_end":420371,"line_start":19,"line_end":19,"column_start":32,"column_end":54},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3736},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/default_values_of_correct_type.rs","byte_start":446874,"byte_end":446900,"line_start":15,"line_end":15,"column_start":32,"column_end":58},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3778},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/fields_on_correct_type.rs","byte_start":452283,"byte_end":452302,"line_start":15,"line_end":15,"column_start":32,"column_end":51},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/fragments_on_composite_types.rs","byte_start":461211,"byte_end":461236,"line_start":14,"line_end":14,"column_start":32,"column_end":57},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3838},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_argument_names.rs","byte_start":466663,"byte_end":466681,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3880},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_directives.rs","byte_start":474483,"byte_end":474498,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3942},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_fragment_names.rs","byte_start":482559,"byte_end":482577,"line_start":14,"line_end":14,"column_start":32,"column_end":50},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3980},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/known_type_names.rs","byte_start":485207,"byte_end":485221,"line_start":15,"line_end":15,"column_start":32,"column_end":46},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4020},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/lone_anonymous_operation.rs","byte_start":488324,"byte_end":488346,"line_start":18,"line_end":18,"column_start":32,"column_end":54},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4058},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_fragment_cycles.rs","byte_start":492067,"byte_end":492083,"line_start":31,"line_end":31,"column_start":32,"column_end":48},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4103},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_fragment_cycles.rs","byte_start":493872,"byte_end":493885,"line_start":94,"line_end":94,"column_start":10,"column_end":23},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_undefined_variables.rs","byte_start":502729,"byte_end":502749,"line_start":31,"line_end":31,"column_start":10,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_undefined_variables.rs","byte_start":503547,"byte_end":503567,"line_start":61,"line_end":61,"column_start":32,"column_end":52},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4175},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_fragments.rs","byte_start":519984,"byte_end":520001,"line_start":30,"line_end":30,"column_start":10,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_fragments.rs","byte_start":520527,"byte_end":520544,"line_start":48,"line_end":48,"column_start":32,"column_end":49},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4237},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_variables.rs","byte_start":527449,"byte_end":527466,"line_start":31,"line_end":31,"column_start":10,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/no_unused_variables.rs","byte_start":528233,"byte_end":528250,"line_start":61,"line_end":61,"column_start":32,"column_end":49},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4301},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":539010,"byte_end":539020,"line_start":46,"line_end":46,"column_start":31,"column_end":41},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":540045,"byte_end":540059,"line_start":94,"line_end":94,"column_start":49,"column_end":63},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":540282,"byte_end":540289,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":541397,"byte_end":541425,"line_start":148,"line_end":148,"column_start":20,"column_end":48},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/overlapping_fields_can_be_merged.rs","byte_start":558294,"byte_end":558322,"line_start":682,"line_end":682,"column_start":32,"column_end":60},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4436},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/possible_fragment_spreads.rs","byte_start":602055,"byte_end":602078,"line_start":22,"line_end":22,"column_start":32,"column_end":55},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4520},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/provided_non_null_arguments.rs","byte_start":613854,"byte_end":613878,"line_start":15,"line_end":15,"column_start":32,"column_end":56},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4564},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/scalar_leafs.rs","byte_start":623087,"byte_end":623098,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4598},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_argument_names.rs","byte_start":629011,"byte_end":629030,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4643},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_fragment_names.rs","byte_start":635406,"byte_end":635425,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4684},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_input_field_names.rs","byte_start":639687,"byte_end":639708,"line_start":20,"line_end":20,"column_start":32,"column_end":53},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4723},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_operation_names.rs","byte_start":644042,"byte_end":644062,"line_start":20,"line_end":20,"column_start":32,"column_end":52},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4767},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/unique_variable_names.rs","byte_start":648163,"byte_end":648182,"line_start":20,"line_end":20,"column_start":32,"column_end":51},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4810},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_are_input_types.rs","byte_start":651144,"byte_end":651163,"line_start":14,"line_end":14,"column_start":32,"column_end":51},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4839},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_in_allowed_position.rs","byte_start":654261,"byte_end":654286,"line_start":36,"line_end":36,"column_start":20,"column_end":45},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/validation/rules/variables_in_allowed_position.rs","byte_start":656139,"byte_end":656164,"line_start":86,"line_end":86,"column_start":32,"column_end":57},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4895},"to":{"krate":0,"index":4986}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":685950,"byte_end":685964,"line_start":39,"line_end":39,"column_start":9,"column_end":23},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690125,"byte_end":690140,"line_start":162,"line_end":162,"column_start":13,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":8013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":690851,"byte_end":690866,"line_start":185,"line_end":185,"column_start":27,"column_end":42},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":8013},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":692688,"byte_end":692707,"line_start":253,"line_end":253,"column_start":9,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":8040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/http/mod.rs","byte_start":695874,"byte_end":695894,"line_start":342,"line_end":342,"column_start":13,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":8056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":735423,"byte_end":735437,"line_start":23,"line_end":23,"column_start":28,"column_end":42},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6417},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":736169,"byte_end":736181,"line_start":52,"line_end":52,"column_start":29,"column_end":41},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":8349},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737483,"byte_end":737493,"line_start":85,"line_end":85,"column_start":39,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5974},"to":{"krate":33,"index":1538}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737753,"byte_end":737770,"line_start":95,"line_end":95,"column_start":42,"column_end":59},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":737935,"byte_end":737952,"line_start":101,"line_end":101,"column_start":43,"column_end":60},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5406},"to":{"krate":33,"index":1622}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":743634,"byte_end":743644,"line_start":288,"line_end":288,"column_start":28,"column_end":38},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5974},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":744483,"byte_end":744492,"line_start":314,"line_end":314,"column_start":25,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":7725},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":744894,"byte_end":744908,"line_start":331,"line_end":331,"column_start":25,"column_end":39},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6585},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":745366,"byte_end":745374,"line_start":350,"line_end":350,"column_start":29,"column_end":37},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6608},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":746055,"byte_end":746061,"line_start":374,"line_end":374,"column_start":28,"column_end":34},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5839},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/integrations/serde.rs","byte_start":746466,"byte_end":746471,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5917},"to":{"krate":33,"index":2077}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":6564,"byte_end":6576,"line_start":200,"line_end":200,"column_start":27,"column_end":39},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":8349},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":7427,"byte_end":7439,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":8349},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/vscode/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.15.7/src/lib.rs","byte_start":12510,"byte_end":12522,"line_start":373,"line_end":373,"column_start":45,"column_end":57},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8349},"to":{"krate":2,"index":2786}}]}